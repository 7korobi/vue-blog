{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./__tests__/marksvg_spec.coffee","webpack:///./src/dagre.vue?a440","webpack:///./src/marked.vue?521b","webpack:///./src/marksvg.vue?3234","webpack:///./src/dagre.vue?531e","webpack:///./src/marksvg.vue?598a","webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack:///./src/dagre-parse.coffee","webpack:///./src/dagre-regexp.coffee","webpack:///./src/dagre.vue","webpack:///./src/dagre.vue?0a6d","webpack:///./src/dagre.vue?0d52","webpack:///./src/index.coffee","webpack:///./src/marked-parse.coffee","webpack:///./src/marked-regexp.coffee","webpack:///./src/marked.vue","webpack:///./src/marked.vue?e553","webpack:///./src/marksvg-parse.coffee","webpack:///./src/marksvg-regexp.coffee","webpack:///./src/marksvg.vue","webpack:///./src/marksvg.vue?d58b","webpack:///./src/marksvg.vue?5cb6","webpack:///external \"dagre\"","webpack:///external \"file-system\"","webpack:///external \"glob\"","webpack:///external \"lodash\"","webpack:///external \"vue-test-utils\""],"names":[],"mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,sBAAsB;AACtB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,sBAAsB;AACtB,aAAa;AACb;AACA;AACA;AACA;AACA,WAAW,SAAS,0BAA0B,EAAE;AAChD;AACA;AACA,6CAA6C;AAC7C,aAAa;AACb;AACA,8CAA8C;AAC9C,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,WAAW,kCAAkC,0BAA0B,EAAE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,8BAA8B,eAAe,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,qCAAqC,sBAAsB;AAC3D;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,4BAA4B,6BAA6B;AACzD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC;AACA,8BAA8B,uBAAuB;AACrD,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC7JA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,iCAAiC;AACnE,kBAAkB;AAClB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,yBAAyB,SAAS,2BAA2B,EAAE;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,sBAAsB;AACtB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,sBAAsB;AACtB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,sBAAsB;AACtB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,WAAW,0BAA0B;AACrC;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,8BAA8B,eAAe,EAAE;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,4BAA4B,6BAA6B;AACzD;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,4BAA4B,6BAA6B;AACzD;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,sBAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wBAAwB;AACnC;AACA,8BAA8B,uBAAuB;AACrD,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACpLA;AAAA;AAAA;;AAEA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;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","file":"__tests__/marksvg_spec.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./__tests__/marksvg_spec.coffee\");\n","{ shallow } = require 'vue-test-utils'\n\nglob = require 'glob'\nfs = require 'file-system'\n\n{ MarkSVG } = require '../src/index'\n\nglob\n.sync(\"./__tests__/**/*.marksvg\")\n.map (path)->\n  describe path, ->\n    test 'snapshot', ->\n      value = fs.readFileSync path, 'utf8'\n      context =\n        book_id: 'spec-1'\n        part_id: 'spec-1-1'\n      wrapper = shallow MarkSVG,\n        propsData: { value, context }\n      expect(wrapper.html().replace /></g, \">\\n<\").toMatchSnapshot()\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ndagre = require \"dagre\"\nparse = require \"./dagre-parse\"\n\nmarker = (key)->\n  switch key\n    when '<', '('\n      'url(#svg-marker-arrow-start)'\n    when '>', ')'\n      'url(#svg-marker-arrow-end)'\n    when 'O', 'o'\n      'url(#svg-marker-circle)'\n    when 'X', 'x'\n      'url(#svg-marker-cross)'\n    else\n      null\n\nclass DagreRenderer\n  newline: ->\n  error: (line)->\n    @graph.errors.push line\n\n  href: (key)-> key\n  dic: (v)-> ['box', v, v]\n\n  is_edge: (v, w)->\n    @graph.edge { v, w }\n\n  is_node: (v)->\n    @graph.node v\n\n  edge: (v, w, line, start, end, label)->\n    { edge_label_width } = @options.style\n    weight = line.length\n    start = marker start\n    end   = marker end\n    line =\n      switch line[0]\n        when '='\n          'wide'\n        when '-'\n          'solid'\n        when '.'\n          'dotted'\n        else\n          'hide'\n\n    label ?= \"   \"\n    @graph.setEdge v, w,\n      key: [v,w].join()\n      \"marker-start\": start\n      \"marker-end\": end\n      minlen: 1\n      weight: weight\n      class: line\n      label: label\n      labelpos: 'c'\n      width:  25 * label.length + edge_label_width\n      height: 30\n      rx:      5\n      ry:      5\n\n  box: (v, label)->\n    { border_width } = @options.style\n    @graph.setNode v,\n      label: label\n      class: 'box'\n      width:   90 + border_width\n      height:  90 + border_width\n      rx:      10\n      ry:      10\n\n  icon: (v, label)->\n    { border_width } = @options.style\n    @graph.setNode v,\n      label: label\n      class: 'icon'\n      width:   90 + border_width\n      height: 130 + border_width\n      rx:      10\n      ry:      10\n  \n  cluster: (v, w, label)->\n    @graph.setNode w,\n      key: w\n      label: label\n      class: 'cluster'\n    @graph.setParent v, w\n\n\ninit = (options)->\n  g = new dagre.graphlib.Graph\n    directed:    true\n    compound:    true\n    multigraph: false\n  g.setGraph options.graph\n  g.errors = []\n  options.renderer.options = options\n  options.renderer.graph = g\n  g\n\noptions =\n  renderer: new DagreRenderer\n  style:\n    edge_label_width: 20\n    border_width: 10\n  graph:\n    # acyclicer: 'greedy'\n    # ranker: 'network-simplex'\n    # ranker: 'tight-tree'\n    ranker: 'longest-path'\n    rankdir: 'RL' # TB / BT / LR / RL\n    nodesep: 10\n    ranksep: 10\n    edgesep:  0\n    marginx:  3\n    marginy:  3\n\nvm =\n  name: 'Dagre'\n  options: options\n\n  props: [\"value\", \"context\"]\n  methods:\n    path_d: (list)->\n      'M' + list\n      .map ({x,y})-> \"#{x},#{y}\"\n      # .join('T') # CurveTo Cx1,y1 x2,y2 x,y Sx2y2 x,y Qx1,y1, x,y Tx,y\n      .join('L') # LineTo Lx,y Hx Vy\n\n  computed:\n    root: ->\n      @graph.graph()\n    \n    edge_paths: ->\n      for key in @graph.edges()\n        o = @graph.edge key\n        continue unless o?.points\n        Object.assign {}, o,\n          key: \"path-\" + o.key\n          d: @path_d o.points\n          points: undefined\n\n    edge_rects: ->\n      { edge_label_width } = options.style\n      for key in @graph.edges()\n        o = @graph.edge key\n        continue unless o?.label?.trim()\n        Object.assign {}, o,\n          key: \"labelrect-\" + o.key\n          width: o.width - edge_label_width\n          x: o.x - o.width  * 0.5 + edge_label_width * 0.5\n          y: o.y - o.height * 0.7\n          points: undefined\n\n    edge_labels: ->\n      for key in @graph.edges()\n        o = @graph.edge key\n        continue unless o?.label\n\n        Object.assign {}, o,\n          key: \"text-\" + o.key\n          label: o.label\n          points: undefined\n\n    node_images: ->\n      { renderer } = options\n      { border_width } = options.style\n      for key in @graph.nodes()\n        o = @graph.node key\n        unless 'icon' == o.class\n          continue\n        key: \"image-\" + key\n        x: o.x - o.width  * 0.5 + border_width * 0.5\n        y: o.y - o.height * 0.5 + border_width * 0.5\n        width:  o.width  - border_width\n        height: o.height - border_width\n        href: renderer.href key\n\n    node_rects: ->\n      for key in @graph.nodes()\n        o = @graph.node key\n        continue unless o\n\n        key: \"rect-\" + key\n        rx: o.rx\n        ry: o.ry\n        x: o.x - o.width  / 2\n        y: o.y - o.height / 2\n        width:  o.width\n        height: o.height\n\n    view_box: ->\n      \"0 0 #{@root.width} #{@root.height}\"\n\n    graph: ->\n      g = init options\n      parse options.renderer, @value\n      dagre.layout g\n      g\n\nexport default vm\n","\n_ = require 'lodash'\nmarked = require './marked-parse'\nDagre = require('./dagre.vue').default\n\nitself = (o)-> o\n\nclass MarkedRenderer\n  paragraph: itself\n  text: itself\n  html: itself\n\n  code: (code, lang)->\n    { m, langPrefix } = @options\n    switch lang?.toLowerCase()\n      when '', null, undefined\n        m 'pre', {}, [\n          m 'code', {}, code\n        ]\n      when 'svg', 'dagre'\n        m Dagre, \n          attrs:\n            value: code\n      else\n        lang = langPrefix + lang\n        m 'pre', {}, [\n          m 'code', { class: lang }, code\n        ]\n\n  blockquote: (quote)->\n    { m } = @options\n    m 'blockquote', {}, quote\n\n  heading: (text, level, raw)->\n    { m, headerIds, headerPrefix } = @options\n    if headerIds\n      id = headerPrefix + raw.toLowerCase().replace(/[^\\w]+/g, '-')\n      m \"h#{level}\", { attrs: { id }}, text\n    else\n      m \"h#{level}\", {}, text\n\n  hr: ->\n    { m } = @options\n    m 'hr'\n\n  list: (body, ordered, start, taskList)->\n    { m } = @options\n    type =\n      if ordered\n      then \"ol\"\n      else \"ul\"\n    start = undefined unless ordered && start != 1\n    m type,\n      attrs: { start }\n    , body\n\n  listitem: (text, checked)->\n    { m } = @options\n    if checked?\n      m 'li',\n        attrs:\n          class: 'task-list-item'\n      , [\n        m \"input\",\n          attrs:\n            type: 'checkbox'\n            checked: checked\n            class: 'task-list-item-checkbox'\n        ...text\n      ]\n    else\n      m 'li', {}, text\n\n  table: (header, body, top)->\n    { m } = @options\n    m 'table', {}, [\n      m 'thead', {}, [header]\n      m 'tbody', {}, body\n    ]\n\n  tablerow: (content)->\n    { m } = @options\n    m 'tr', {}, content\n\n  tablecell: (content, { header, align })->\n    { m } = @options\n    tag =\n      if header\n        'th'\n      else\n        'td'\n    m tag,\n      class: align?[0]\n    , content\n\n  # span level renderer\n  em: (text)->\n    { m } = @options\n    m 'em', {}, text\n\n  strong: (text)->\n    { m } = @options\n    m 'strong', {}, text\n\n  codespan: (text)->\n    { m } = @options\n    m 'code', {}, text\n\n  br: ->\n    '\\n'\n\n  del: (text)->\n    { m } = @options\n    m 'del', {}, text\n\n  note: (num, text, title)->\n    { m } = @options\n    m 'sup',\n      attrs: { title, class: 'note' }\n    , num\n\n  link: (href, title, text)->\n    { m } = @options\n    [protocol, hostname] = href.split /// \\:// | / | \\? | \\# ///g\n    text  ||= protocol\n    title ||= [protocol, hostname].join(\"\\n\")\n    switch href\n      when null, undefined, \"\", \"#\"\n        m \"q\",\n          attrs: { title }\n        , text\n      else\n        m \"a\",\n          attrs: { title, href, chk: 'confirm' }\n        , text\n\n  image: (src, title, alt)->\n    unless title\n      title = undefined\n    { m } = @options\n    m 'img',\n      attrs: { src, alt, title }\n\n  url: (href)->\n    href\n\n  # markdown-it\n  container: (text, lang)->\n    { m } = @options\n    m 'p',\n      attrs:\n        class: lang\n    , text\n\n  strikeout: (text)->\n    { m } = @options\n    m 's', {}, text\n\n  span: (text)->\n    { m } = @options\n    m 'span', {}, text\n\n  ins: (text)->\n    { m } = @options\n    m 'ins', {}, text\n\n  kbd: (text)->\n    { m } = @options\n    m 'kbd', {}, text\n\n  mdi: (name)->\n    { m } = @options\n    m 'i',\n      attrs:\n        class: \"mdi #{name}\"\n\n  abbr: (text, title)->\n    { m } = @options\n    m 'ruby', {}, [\n      text\n      m 'rp', {}, [\"《\"]\n      m 'rt', {}, title\n      m 'rp', {}, [\"》\"]\n    ]\n\n  mark: (text)->\n    { m } = @options\n    m 'abbr', {}, text\n\n  sup: (text)->\n    { m } = @options\n    m 'sup', {}, text\n\n  sub: (text)->\n    { m } = @options\n    m 'sub', {}, text\n\n  cite: (text, cite, end)->\n    { m } = @options\n    if cite\n      m 'q',\n        attrs: { cite, end }\n      , text\n    else\n      text\n\n  cite_exist: (cite)->\n    true\n\noptions =\n  renderer: new MarkedRenderer\n  tag: 'article'\n  langPrefix: 'language-' \n  ruby: true\n  cite: true\n  gfm: true\n  tables: true\n  indentCode: false\n  taskLists: true\n  breaks: true\n  pedantic: false\n  sanitize: true\n  smartLists: true\n  smartypants: true\n  silent: true\n  em: false\n\nvm =\n  name: \"Marked\"\n  options: options\n  props: [\"value\", \"context\"]\n\n  render: (m)->\n    { value, context } = @\n    if value\n      options.m = m\n      options.context = context\n      options.renderer.options = options\n      marked value, options\n    else\n      ''\n\nexport default vm\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# inspired by https://github.com/wakufactory/MarkDownDiagram\n\nSVG = require \"./marksvg-parse\"\n\nmarker = (key)->\n  switch key\n    when '<', '('\n      'url(#svg-marker-arrow-start)'\n    when '>', ')'\n      'url(#svg-marker-arrow-end)'\n    when 'O', 'o'\n      'url(#svg-marker-circle)'\n    when 'X', 'x'\n      'url(#svg-marker-cross)'\n    else\n      null\n\nclass SvgRenderer\n  plain: ->\n    @data =\n      nodes:  {}\n      paths:  {}\n      rects:  {}\n      texts:  {}\n      labels: {}\n      images: {}\n      errors: []\n\n  pos: ({ x, y, width, height }, mark)->\n    { gap_size } = @options.style\n    curve = 1 * gap_size\n    switch mark\n      when '^','u'\n        x += 0.5 * width \n        # y origin\n        vx =  0\n        vy = -curve\n      when 'v','d'\n        x += 0.5 * width\n        y += 1.0 * height\n        vx =  0\n        vy =  curve\n      when '<','l'\n        # x origin\n        y += 0.5 * height\n        vx = -curve\n        vy =  0\n      when '>','r'\n        x += 1.0 * width\n        y += 0.5 * height\n        vx =  curve\n        vy =  0\n    { x, y, vx, vy }\n\n  newline: ->\n  error: (line)->\n    @data.errors.push line\n\n  href: (key)-> key\n  dic: (v)-> ['icon', v, v]\n\n  node: (name, v)->\n    @data.nodes[name] = @data.rects[v]\n\n  is_cluster: (v)->\n    @data.rects[v]?.class == 'cluster'\n\n  label: (v, label, pos, x, y)->\n    return unless label\n\n    { radius } = @options.style\n\n    # text\n    key = \"label-#{v}\"\n    label ?= \"   \"\n    className = \"pen\"\n    @data.texts[v] = { class: className, \"text-anchor\": pos, key, label, x, y }\n\n    # label\n    # x, y, width, height は後で。\n    { radius } = @options.style\n    key = \"rect-label-#{v}\"\n    rx  = radius\n    ry  = radius\n    @data.labels[v] = { class: className, key, rx, ry } \n\n  edge: (v, w, line, start, end, headpos, tailpos, label)->\n    weight = line.length\n    start = marker start\n    end   = marker end\n    className =\n      switch line[0]\n        when '='\n          'wide'\n        when '-'\n          'solid'\n        when '.'\n          'dotted'\n        else\n          'hide'\n\n    vw  = [v,w].join(\"+\")\n    key = \"path=#{vw}\"\n\n    vo = @data.rects[v]\n    wo = @data.rects[w]\n    vp = @pos vo, headpos\n    wp = @pos wo, tailpos\n\n    cvpx = vp.x + vp.vx\n    cvpy = vp.y + vp.vy\n    cwpx = wp.x + wp.vx\n    cwpy = wp.y + wp.vy\n    lx = parseInt 0.5 * (cvpx + cwpx)\n    ly = parseInt 0.5 * (cvpy + cwpy)\n    d  = \"M#{ vp.x },#{ vp.y }C#{ cvpx },#{ cvpy },#{ cwpx },#{ cwpy },#{ wp.x },#{ wp.y }\"\n\n    # path\n    @data.paths[vw] = { class: className, key, d, \"marker-start\": start, \"marker-end\": end }\n\n    # x, y は中点\n    @label vw, label, 'middle', lx, ly\n\n  auto_xy: (x, y)->\n    return [parseInt(x), parseInt(y)] if x? && y?\n\n    { icon_width, gap_size } = @options.style\n    xs =\n      for key, { x } of @data.rects\n        x\n    xs.push -( icon_width + gap_size )\n    x  = Math.max ...xs\n    x += icon_width + gap_size\n    y  = gap_size\n    [x, y]\n\n  box: (v, label, side = ' ', x, y)->\n    { border_width, icon_width, radius } = @options.style\n\n    [x, y] = @auto_xy x, y\n    width  = icon_width + 2 * border_width\n    height = icon_width + 2 * border_width\n    rx     = radius\n    ry     = radius\n\n    className = 'box'\n    key = \"#{side}rect=#{v}\"\n\n    # rect\n    @data.rects[v] = { class: className, key, width, height, x, y, rx, ry }\n\n    # x, y はボトム\n    x += 0.5 * width\n    y += 1.0 * height - 2 * border_width\n    @label v, label, 'middle', x, y\n\n  icon: (v, label, side = ' ', x, y)->\n    { border_width, label_height, icon_width, icon_height, radius } = @options.style\n    switch side\n      when '^','u', ' '\n        roll = 0\n        is_vertical = true\n        extrax =  0\n        extray =  0\n      when 'v','d'\n        roll = 180\n        is_vertical = true\n        extrax =  0\n        extray =  0\n      when '<','l'\n        roll = 270\n        is_horizontal = true\n        extrax =  0\n        extray = -0.5\n      when '>','r'\n        roll = 90\n        is_horizontal = true\n        extrax =  0.5\n        extray =  0\n\n    [x, y] = @auto_xy x, y\n    width  = icon_width\n    height = icon_height\n    rx     = radius\n    ry     = radius\n\n    extrax *= height - width\n    extray *= height - width\n    transform =\n      if roll\n        \"rotate(#{roll}, #{x + border_width + extrax + 0.5 * width}, #{y + border_width + extray + 0.5 * height})\"\n      else\n        undefined\n\n    href = @href v\n    className = 'icon'\n    key = \"image=#{v}\"\n\n    # image\n    @data.images[v] = { class: className, key, href, transform, width, height, rx, ry, x: x + border_width , y: y + border_width }\n\n    if is_horizontal\n      [width, height] = [height, width]\n\n    width  = width  + 2 * border_width\n    height = height + 2 * border_width + label_height\n\n    className = 'box'\n    key = \"#{side}rect=#{v}\"\n\n    # rect\n    @data.rects[v] = { class: className, key, width, height, x, y, rx, ry }\n\n    # x, y はボトム\n    x += 0.5 * width\n    y += 1.0 * height - 2 * border_width\n    @label v, label, 'middle', x, y\n\n  cluster: (vs, label)->\n    { label_height, radius } = @options.style\n\n    vos = vs.map (v)=> @data.rects[v]\n    className = 'cluster'\n    fill = 'none'\n    key = \"rect=#{label}\"\n\n    { x, y, width, height } = @cover vos\n    rx = radius\n    ry = radius\n\n    # rect\n    @data.rects[label] = { class: className, key, fill, width, height, x, y, rx, ry }\n\n    # x, y は右上\n    x += 1.0 * width\n    y += 0.5 * label_height \n    @label label, label, 'end', x, y\n\n  cover: (vos)->\n    { label_height, icon_width } = @options.style\n    unless vos.length\n      vos.push\n        x: label_height\n        y: label_height\n        width:  icon_width\n        height: icon_width\n\n    xmin = Math.min ...vos.map (o)-> o.x\n    xmax = Math.max ...vos.map (o)-> o.x + o.width\n    ymin = Math.min ...vos.map (o)-> o.y\n    ymax = Math.max ...vos.map (o)-> o.y + o.height\n    width  = xmax - xmin + label_height\n    height = ymax - ymin + label_height\n    x = xmin - 0.5 * label_height\n    y = ymin - 0.5 * label_height\n\n    { x, y, width, height }\n\noptions =\n  renderer: new SvgRenderer\n  style:\n    gap_size:     50\n    icon_width:   90\n    icon_height: 130\n    label_height: 28\n    border_width:  5\n    radius:        3\noptions.renderer.options = options\n\n\nparse_touch = (e)->\n  { pageX, pageY } = e.changedTouches[0]\n  { target } = e\n  { pageX, pageY, target }\n\nvm =\n  name: 'MarkSVG'\n  options: options\n\n  props:\n    edit:\n      type: Boolean\n      default: false\n\n    value:\n      type: String\n      default: \"\"\n\n    context: Object\n\n  data: ->\n    move =\n      id: null\n      x:  0\n      y:  0\n      px: 0\n      py: 0\n    moved =\n      x:  0\n      y:  0\n      rx: 0\n      ry: 0\n      width:  0\n      height: 0\n    zoom = 1.0\n    gdata = options.renderer.plain()\n    tokens = []\n\n    { zoom, move, moved, gdata, tokens }\n\n  methods:\n    do_graph: ->\n      @gdata = options.renderer.plain()\n      @tokens = SVG.parse options.renderer, @value\n      @$nextTick =>\n        return unless width = @$refs.root?.getClientRects?()?[0]?.width\n        @zoom = @root.width / width\n        for key of @gdata.texts\n          tk =      'label-' + key\n          lk = 'rect-label-' + key\n          continue unless box = @$refs[tk]?[0]?.getBBox?()\n\n          { width, height, x, y } = box\n          { border_width } = options.style\n          width  += 4 * border_width\n          height += 2 * border_width\n          x -= 2 * border_width\n          y -= 1 * border_width\n          options.style.label_height = height\n          for key, val of { x, y, width, height }\n            @$refs[lk][0].setAttribute key, val\n\n    move_xy: ->\n      { x, y, dx, dy } = @move\n      x = parseInt Math.max 0, x + dx\n      y = parseInt Math.max 0, y + dy\n      { x, y }\n\n    movespace: ->\n      move = ({ pageX, pageY, target })=>\n        if @move.id\n          { px, py } = @move\n          dx = (pageX - px)\n          dy = (pageY - py)\n          @move.dx = @zoom * dx\n          @move.dy = @zoom * dy\n          @recalc()\n      finish = ({ pageX, pageY, target })=>\n        if @move.id\n          { px, py } = @move\n          dx = (pageX - px)\n          dy = (pageY - py)\n          if dx == dy == 0\n            @do_roll @move.id\n          else\n            @move.dx = @zoom * dx\n            @move.dy = @zoom * dy\n            @do_move @move.id\n          @move.id = null\n\n      cb =\n        touchend: (e)=>\n          finish parse_touch e\n        touchleave: (e)=>\n          finish parse_touch e\n        touchmove: (e)=>\n          move parse_touch e\n        mouseup: finish\n        mouseleave: finish\n        mousemove: move\n        \n    draggable: (id)->\n      start = ({ pageX, pageY, target })=>\n        { x, y, rx, ry, width, height } = @gdata.rects[id]\n        @moved = { x, y, rx, ry, width, height }\n        @move = { id, x, y, px: pageX, py: pageY }\n\n      cb =\n        touchstart: (e)=>\n          e.preventDefault()\n          start parse_touch e\n        mousedown: (e)=>\n          e.preventDefault()\n          start e\n    \n    recalc: ->\n      return unless @edit\n      Object.assign @moved, @move_xy()\n\n    do_move: (id)->\n      return unless @edit\n      Object.assign @gdata.rects[id], @move_xy()\n      @$emit 'input', SVG.stringify @tokens, @gdata\n      @do_graph()\n    \n    do_roll: (id)->\n      return unless @edit\n      { key } = @gdata.rects[id]\n      sides = ' >v<^>'\n      side = key[0]\n      idx = 1 + sides.indexOf side\n      key = sides[idx] + key[1..]\n      @gdata.rects[id].key = key\n      @$emit 'input', SVG.stringify @tokens, @gdata\n      @do_graph()\n\n    nop: -> false\n\n  computed:\n    root: ->\n      options.renderer.cover Object.values(@graph.rects)\n\n    view_box: ->\n      \"#{@root.x} #{@root.y} #{@root.width} #{@root.height}\"\n\n    graph: ->\n      @do_graph()\n      @gdata\n\nexport default vm\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"article\", [\n    _c(\n      \"svg\",\n      {\n        style: \"max-width: 100%; width: \" + _vm.root.width + \"px;\",\n        attrs: { viewBox: _vm.view_box }\n      },\n      [\n        _c(\n          \"marker\",\n          {\n            staticClass: \"edgePath\",\n            attrs: {\n              id: \"svg-marker-circle\",\n              viewBox: \"0 0 10 10\",\n              markerUnits: \"userSpaceOnUse\",\n              markerWidth: \"20\",\n              markerHeight: \"20\",\n              refX: \"5\",\n              refY: \"5\",\n              orient: \"auto\"\n            }\n          },\n          [_c(\"circle\", { attrs: { cx: \"5\", cy: \"5\", r: \"4\" } })]\n        ),\n        _c(\n          \"marker\",\n          {\n            staticClass: \"edgePath\",\n            attrs: {\n              id: \"svg-marker-arrow-start\",\n              viewBox: \"0 0 10 10\",\n              markerUnits: \"userSpaceOnUse\",\n              markerWidth: \"20\",\n              markerHeight: \"20\",\n              refX: \"3\",\n              refY: \"5\",\n              orient: \"auto\"\n            }\n          },\n          [\n            _c(\"path\", {\n              staticClass: \"path\",\n              attrs: { d: \"M10,0 L0,5 L10,10 z\" }\n            })\n          ]\n        ),\n        _c(\n          \"marker\",\n          {\n            staticClass: \"edgePath\",\n            attrs: {\n              id: \"svg-marker-arrow-end\",\n              viewBox: \"0 0 10 10\",\n              markerUnits: \"userSpaceOnUse\",\n              markerWidth: \"20\",\n              markerHeight: \"20\",\n              refX: \"3\",\n              refY: \"5\",\n              orient: \"auto\"\n            }\n          },\n          [\n            _c(\"path\", {\n              staticClass: \"path\",\n              attrs: { d: \"M0,0 L10,5 L0,10 z\" }\n            })\n          ]\n        ),\n        _c(\n          \"marker\",\n          {\n            staticClass: \"edgePath\",\n            attrs: {\n              id: \"svg-marker-cross\",\n              viewBox: \"0 0 10 10\",\n              markerUnits: \"userSpaceOnUse\",\n              markerWidth: \"20\",\n              markerHeight: \"20\",\n              refX: \"5\",\n              refY: \"5\",\n              orient: \"0\"\n            }\n          },\n          [\n            _c(\"path\", {\n              staticClass: \"path\",\n              attrs: { d: \"M0,0 L10,10 M0,10 L10,0 z\" }\n            })\n          ]\n        ),\n        _c(\n          \"transition-group\",\n          { attrs: { tag: \"g\", name: \"nodes\" } },\n          [\n            _vm._l(_vm.node_rects, function(o) {\n              return o ? _c(\"rect\", _vm._b({}, \"rect\", o, false)) : _vm._e()\n            }),\n            _vm._l(_vm.node_images, function(o) {\n              return o ? _c(\"image\", _vm._b({}, \"image\", o, false)) : _vm._e()\n            })\n          ],\n          2\n        ),\n        _c(\n          \"transition-group\",\n          { staticClass: \"edgePath\", attrs: { tag: \"g\", name: \"edges\" } },\n          [\n            _vm._l(_vm.edge_paths, function(o) {\n              return o\n                ? _c(\n                    \"path\",\n                    _vm._b(\n                      { staticClass: \"path\", attrs: { fill: \"none\" } },\n                      \"path\",\n                      o,\n                      false\n                    )\n                  )\n                : _vm._e()\n            }),\n            _vm._l(_vm.edge_rects, function(o) {\n              return o\n                ? _c(\"rect\", _vm._b({ staticClass: \"path\" }, \"rect\", o, false))\n                : _vm._e()\n            }),\n            _vm._l(_vm.edge_labels, function(o) {\n              return o\n                ? _c(\n                    \"text\",\n                    _vm._b({ staticClass: \"messageText\" }, \"text\", o, false),\n                    [_vm._v(_vm._s(o.label))]\n                  )\n                : _vm._e()\n            })\n          ],\n          2\n        )\n      ],\n      1\n    ),\n    _vm.graph.errors.length\n      ? _c(\n          \"div\",\n          { staticClass: \"errors\" },\n          _vm._l(_vm.graph.errors, function(err) {\n            return _c(\"div\", { staticClass: \"error\" }, [_vm._v(_vm._s(err))])\n          })\n        )\n      : _vm._e()\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"article\", [\n    _c(\n      \"svg\",\n      _vm._g(\n        {\n          ref: \"root\",\n          style: \"max-width: 100%; width: \" + _vm.root.width + \"px;\",\n          attrs: { viewBox: _vm.view_box }\n        },\n        _vm.movespace()\n      ),\n      [\n        _c(\n          \"marker\",\n          {\n            staticClass: \"edgePath\",\n            attrs: {\n              id: \"svg-marker-circle\",\n              viewBox: \"0 0 10 10\",\n              markerUnits: \"userSpaceOnUse\",\n              markerWidth: \"20\",\n              markerHeight: \"20\",\n              refX: \"5\",\n              refY: \"5\",\n              orient: \"auto\"\n            }\n          },\n          [_c(\"circle\", { attrs: { cx: \"5\", cy: \"5\", r: \"4\" } })]\n        ),\n        _c(\n          \"marker\",\n          {\n            staticClass: \"edgePath\",\n            attrs: {\n              id: \"svg-marker-arrow-start\",\n              viewBox: \"0 0 10 10\",\n              markerUnits: \"userSpaceOnUse\",\n              markerWidth: \"20\",\n              markerHeight: \"20\",\n              refX: \"3\",\n              refY: \"5\",\n              orient: \"auto\"\n            }\n          },\n          [\n            _c(\"path\", {\n              staticClass: \"fill\",\n              attrs: { d: \"M10,0 L0,5 L10,10 z\" }\n            })\n          ]\n        ),\n        _c(\n          \"marker\",\n          {\n            staticClass: \"edgePath\",\n            attrs: {\n              id: \"svg-marker-arrow-end\",\n              viewBox: \"0 0 10 10\",\n              markerUnits: \"userSpaceOnUse\",\n              markerWidth: \"20\",\n              markerHeight: \"20\",\n              refX: \"3\",\n              refY: \"5\",\n              orient: \"auto\"\n            }\n          },\n          [\n            _c(\"path\", {\n              staticClass: \"fill\",\n              attrs: { d: \"M0,0 L10,5 L0,10 z\" }\n            })\n          ]\n        ),\n        _c(\n          \"marker\",\n          {\n            staticClass: \"edgePath\",\n            attrs: {\n              id: \"svg-marker-cross\",\n              viewBox: \"0 0 10 10\",\n              markerUnits: \"userSpaceOnUse\",\n              markerWidth: \"20\",\n              markerHeight: \"20\",\n              refX: \"5\",\n              refY: \"5\",\n              orient: \"0\"\n            }\n          },\n          [\n            _c(\"path\", {\n              staticClass: \"path\",\n              attrs: { d: \"M0,0 L10,10 M0,10 L10,0 z\" }\n            })\n          ]\n        ),\n        _c(\n          \"g\",\n          [\n            _vm._l(_vm.graph.rects, function(o, key) {\n              return o\n                ? _c(\n                    \"rect\",\n                    _vm._g(_vm._b({}, \"rect\", o, false), _vm.draggable(key, o))\n                  )\n                : _vm._e()\n            }),\n            _vm._l(_vm.graph.images, function(o, key) {\n              return o\n                ? _c(\n                    \"image\",\n                    _vm._g(_vm._b({}, \"image\", o, false), _vm.draggable(key, o))\n                  )\n                : _vm._e()\n            })\n          ],\n          2\n        ),\n        _c(\n          \"g\",\n          { staticClass: \"edgePath\" },\n          [\n            _vm._l(_vm.graph.paths, function(o, key) {\n              return o\n                ? _c(\n                    \"path\",\n                    _vm._b(\n                      { staticClass: \"path\", attrs: { fill: \"none\" } },\n                      \"path\",\n                      o,\n                      false\n                    )\n                  )\n                : _vm._e()\n            }),\n            _vm._l(_vm.graph.labels, function(o, key) {\n              return o\n                ? _c(\n                    \"rect\",\n                    _vm._b({ ref: o.key, refInFor: true }, \"rect\", o, false)\n                  )\n                : _vm._e()\n            }),\n            _vm._l(_vm.graph.texts, function(o, key) {\n              return o\n                ? _c(\n                    \"text\",\n                    _vm._b({ ref: o.key, refInFor: true }, \"text\", o, false),\n                    [_vm._v(_vm._s(o.label))]\n                  )\n                : _vm._e()\n            })\n          ],\n          2\n        ),\n        _vm.move.id\n          ? _c(\"g\", [\n              _c(\n                \"rect\",\n                _vm._b({ staticClass: \"move\" }, \"rect\", _vm.moved, false)\n              )\n            ])\n          : _vm._e()\n      ]\n    ),\n    _vm.graph.errors.length\n      ? _c(\n          \"div\",\n          { staticClass: \"errors\" },\n          _vm._l(_vm.graph.errors, function(err) {\n            return _c(\"div\", { staticClass: \"error\" }, [_vm._v(_vm._s(err))])\n          })\n        )\n      : _vm._e()\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","{ syntax } = require './dagre-regexp'\n\nparse = (render, src)->\n  parents = {}\n  tokens = []\n\n  last =\n    v: \"\"\n    depth: 0\n  find_parent = (v, depth)->\n    depth = depth.length\n    if last.depth < depth\n      parents[depth] = last\n    last = { depth, v }\n    parents[depth]?.v\n\n  while src\n    # console.log src\n    if cap = syntax.newline.exec src\n      [ all ] = cap\n      src = src[all.length ..]\n      # console.log \"newline\", cap\n      render.newline()\n      continue\n\n    if cap = syntax.edges.exec src\n      [ all, depth, edges, v, $, $, $, label ] = cap\n      src = src[all.length ..]\n      # console.log \"edges\", cap\n      edges = edges\n      .split syntax._arrow_\n      .map (s)-> s?.trim()\n\n      if v\n        if find_parent \"\", depth\n          render.error all\n          continue\n      else\n        unless v = find_parent \"\", depth\n          render.error all\n          continue\n\n      edges[0] = v\n      for v, idx in edges by 4\n        [ v, start, line, end, w ] = edges[idx .. idx + 4]\n        if w\n          [vm, v, vl] = render.dic v\n          [wm, w, wl] = render.dic w\n          render[vm] v, vl\n          render.edge v, v, \"\", \"\", \"\", vl\n          render[wm] w, wl\n          render.edge w, w, \"\", \"\", \"\", wl\n          render.edge v, w, line, start, end, label\n      continue\n\n    if cap = syntax.nodes.exec src\n      [ all, depth, nodes, label ] = cap\n      src = src[all.length ..]\n      # console.log \"nodes\", cap\n      nodes = nodes\n      .trim()\n      .split(/ +/)\n      for v, idx in nodes\n        [vm, v, vl] = render.dic v\n        render[vm] v, label or vl\n        if label\n          render.edge v, v, \"\", \"\", \"\", label\n\n        if parent = find_parent v, depth\n          [_, parent, pl] = render.dic parent\n          { label } = render.is_node parent\n          if label\n            render.cluster v, parent, label\n\n      continue\n\n    if cap = syntax.error.exec src\n      [ all ] = cap\n      src = src[all.length ..]\n      render.error all, \"解釈できない文字列です。\"\n      continue\n\n\nmodule.exports = parse\n","regexp_join = (regex, ...names) ->\n  { flags, source } = regex\n\n  for name in names\n    key = new RegExp name, 'g'\n    val = syntax[name]\n    val = val.source or val\n    source = source.replace key, val\n  new RegExp source, flags\n\nsyntax =\n  edges: /^( *)((_node_)?(?: *_arrow_ *_node_)+) *(?:_comment_)?(?:_eol_)/\n  nodes: /^( *)((?:_node_| )+)(?:_comment_)?(?:_eol_)/\n  newline: /^ *\\n|^ +$/\n\n  error: /^[^\\n]*\\n|[^\\n]+$/\n\n  _node_: /[^\\s:]+/\n  _arrow_: /(<|X|x|O|o)?(-+|=+|\\.+)(>|X|x|O|o)?/\n  _comment_: /: *(.*) */\n  _eol_: / *(?:\\n|$)/\n\nsyntax.nodes = regexp_join syntax.nodes, '_node_', '_arrow_', '_comment_', '_eol_'\nsyntax.edges = regexp_join syntax.edges, '_node_', '_arrow_', '_comment_', '_eol_'\n\nmodule.exports = { syntax }\n","import { render, staticRenderFns } from \"./dagre.vue?vue&type=template&id=9d15a698&lang=pug&\"\nimport script from \"./dagre.vue?vue&type=script&lang=coffee&\"\nexport * from \"./dagre.vue?vue&type=script&lang=coffee&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/7korobi/Dropbox/www/vue-markup/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!module.hot.data) {\n      api.createRecord('9d15a698', component.options)\n    } else {\n      api.reload('9d15a698', component.options)\n    }\n    module.hot.accept(\"./dagre.vue?vue&type=template&id=9d15a698&lang=pug&\", function () {\n      api.rerender('9d15a698', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/dagre.vue\"\nexport default component.exports","import mod from \"-!../node_modules/coffee-loader/index.js??ref--0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./dagre.vue?vue&type=script&lang=coffee&\"; export default mod; export * from \"-!../node_modules/coffee-loader/index.js??ref--0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./dagre.vue?vue&type=script&lang=coffee&\"","export * from \"-!../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../node_modules/pug-plain-loader/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./dagre.vue?vue&type=template&id=9d15a698&lang=pug&\"","import Marked  from './marked.vue'\nimport MarkSVG from './marksvg.vue'\n\nimport Dagre   from './dagre.vue'\n\nimport down from './marked-regexp.coffee'\nimport svg  from './marksvg-regexp.coffee'\n\nregexp = { down, svg }\nexport { MarkSVG, Marked, Dagre, regexp }\n","{ block, inline, repl, noop } = require './marked-regexp'\n\n###\n# Helpers\n###\n\nescape = (html, is_encode)->\n  if escape[is_encode].test html\n    html.replace escape[is_encode].replace, (ch)->\n      escape.replacements[ch]\n\nescape[true]  = /[&<>\"']/g\nescape[false] = /[<>\"']|&(?!#?\\w+;)/g\nescape.replacements =\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n\nunescape = (html)->\n  # explicitly match decimal, hex, and named HTML entities\n  html.replace /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, (_, n)->\n    n = n.toLowerCase()\n    switch\n      when n == 'colon'\n        ':'\n      when n.charAt(0) == '#'\n        String.fromCharCode(\n          if n.charAt(1) == 'x'\n            parseInt( n[2..], 16 )\n          else\n            n[1..] - 0\n        )\n      else\n        \"\"\n\nresolveUrl = (base, href)->\n  key = ' ' + base\n  if ! baseUrls[key]\n    # we can ignore everything in base after the last slash of its path component,\n    # but we might need to add _that_\n    # https://tools.ietf.org/html/rfc3986#section-3\n    if /^[^:]+:\\/*[^/]*$/.test(base)\n      baseUrls[key] = base + '/'\n    else\n      baseUrls[key] = base.replace(/[^/]+$/, '') # rtrim not /\n  base = baseUrls[key]\n\n  switch\n    when href[0..1] == '//'\n      base.replace(/:[\\s\\S]*/, ':')\n    when href.charAt(0) == '/'\n      base.replace(/(:\\/*[^/]*)[\\s\\S]*/, '$1')\n    else\n      base\nbaseUrls = {}\noriginIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i\n\nsplitCells = (tableRow, max)->\n  row = tableRow.replace /\\|/g, (match, offset, str)->\n    escaped = false\n    curr = offset\n    while --curr >= 0 and str[curr] == '\\\\'\n      escaped = ! escaped\n    if escaped\n      '|'\n    else\n      ' |'\n  cells = row.split(/ \\|/)\n\n  if cells.length > max\n    cells.splice max\n  else\n    while cells.length < max\n      cells.push ''\n\n  for o, i in cells\n    cells[i] = o.replace(/\\\\\\|/g, '|').trim()\n  cells\n\n###\n# Pedantic grammar\n# not support\n###\n\nclass Lexer\n  @rules: block\n  @lex: (src, options)->\n    new Lexer(options).lex(src)\n\n  constructor: (@options)->\n    @tokens = []\n    @tokens.notes = []\n    @tokens.links = {}\n    @tokens.abbrs = {}\n    @tokens.count = {}\n    @rules = block.normal\n\n    if @options.gfm\n      @rules =\n        if @options.tables\n        then block.tables\n        else block.gfm\n\n    if ! @options.indentCode\n      @rules.code = noop\n\n  lex: (src)->\n    src = repl.lexer src\n    @token src, true\n\n  token: (src, top)->\n    while src\n      # newline\n      if cap = @rules.newline.exec src\n        src = src[cap[0].length ..]\n        if cap[0].length\n          @tokens.push\n            type: 'space'\n            text: cap[0]\n\n      # code\n      if cap = @rules.code.exec src\n        # console.log 'block code', cap\n        src = src[cap[0].length ..]\n        cap = cap[0].replace /^ {4}/gm, ''\n        @tokens.push\n          type: 'code'\n          text: cap\n        continue\n\n      # fences (gfm)\n      if cap = @rules.fences.exec src\n        # console.log 'block fences', cap\n        src = src[cap[0].length ..]\n        mode = cap[1][0]\n        switch mode\n          when ':'\n            @tokens.push\n              type: 'container_start'\n              lang: cap[2]\n            @token cap[3], false\n            @tokens.push\n              type: 'container_end'\n              lang: cap[2]\n          else\n            @tokens.push\n              type: 'code'\n              lang: cap[2]\n              text: cap[3] or ''\n        continue\n\n      # heading\n      if cap = @rules.heading.exec src\n        # console.log 'block heading', cap\n        src = src[cap[0].length ..]\n        @tokens.push\n          type: 'heading'\n          depth: cap[1].length\n          text: cap[2]\n        continue\n\n      # table no leading pipe (gfm)\n      if cap = @rules.table.exec src\n        src = src[cap[0].length ..]\n        trim = /^\\|? *|\\ *\\|? *$/g\n\n        header = splitCells cap[1].replace(trim, '')\n        align = cap[2].replace(trim, '').split(/ *\\| */)\n        cells = cap[5]?.replace(/\\n$/, '').split('\\n').map((o)=> o.replace(trim, '') ) ? []\n\n        while header.length && ! header[header.length - 1].trim()\n          header.pop()\n\n        item = { type: 'table', header, align, cells, top }\n        for o, i in align\n          align[i] =\n            if      /^ *-+: *$/.test o  then 'right'\n            else if /^ *:-+: *$/.test o then 'center'\n            else if /^ *:-+ *$/.test o  then 'left'\n            else                              null\n        for o, i in item.cells\n          cells[i] = splitCells o, item.align.length\n        @tokens.push item\n        continue\n\n      # hr\n      if cap = @rules.hr.exec src\n        # console.log 'block hr', cap\n        src = src[cap[0].length ..]\n        @tokens.push type: 'hr'\n        continue\n\n      # blockquote\n      if cap = @rules.blockquote.exec src\n        src = src[cap[0].length ..]\n        @tokens.push\n          type: 'blockquote_start'\n          mode: '>'\n        cap = cap[0]\n        .replace /^ *> ?/gm, ''\n        .replace /\\n$/, ''\n        # Pass `top` to keep the current\n        # \"toplevel\" state. This is exactly\n        # how markdown.pl works.\n        @token cap, false\n        @tokens.push\n          type: 'blockquote_end'\n        continue\n\n      # list\n      if cap = @rules.list.exec src\n        # console.log 'block list', cap\n        src = src[cap[0].length ..]\n        bull = cap[2]\n        is_ordered = \".\" == bull.slice(-1)\n        @tokens.push\n          type: 'list_start'\n          ordered: is_ordered\n          start:\n            if is_ordered\n            then  +bull\n            else  ''\n        # Get each top-level item.\n        cap = cap[0].match(@rules.item)\n        next = false\n\n        l = cap.length\n        i = 0\n        while i < l\n          item = cap[i]\n          # Remove the list item's bullet\n          # so it is seen as the next token.\n          space = item.length\n          item = item.replace @rules.with_bullet, ''\n\n          # Outdent whatever the\n          # list item contains. Hacky.\n          if ~item.indexOf('\\n ')\n            space -= item.length\n            item = item.replace(///^\\ {1,#{ space }}///gm, '')\n\n          # Determine whether the next list item belongs here.\n          # Backpedal if it does not belong in this list.\n          if @options.smartLists and i != l - 1\n            b = block.bullet.exec(cap[i + 1])[0]\n            if bull != b and !(bull.length > 1 and b.length > 1)\n              src = cap[i + 1 ..].join('\\n') + src\n              i = l - 1\n\n          # Determine whether item is loose or not.\n          # Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n          # for discount behavior.\n          loose = next or /\\n\\n(?!\\s*$)/.test(item)\n          if i != l - 1\n            next = item.charAt(item.length - 1) == '\\n'\n            if !loose\n              loose = next\n\n          # Check for task list items\n          checkbox = @rules.checkbox.exec item\n          checked =\n            if checkbox\n              item = item.replace @rules.checkbox, ''\n              checkbox[1] != ' '\n\n          type = if loose then 'loose_item_start' else 'list_item_start'\n          @tokens.push { checked, type, task: checked? }\n\n          # Recurse.\n          @token item, false\n          @tokens.push type: 'list_item_end'\n          i++\n        @tokens.push type: 'list_end'\n        continue\n\n      # html\n      if cap = @rules.html.exec src\n        src = src[cap[0].length ..]\n        @tokens.push\n          type:\n            if @options.sanitize\n            then 'paragraph'\n            else 'html'\n          pre: !@options.sanitizer and cap[1] in ['pre', 'script', 'style']\n          text: cap[0]\n        continue\n\n      # ruby_heads\n      if cap = @rules.ruby_heads.exec src\n        # console.log 'ruby', cap\n        src = src[cap[0].length ..]\n        for idx in [1..4] when cap[idx]\n          cap[idx].replace @rules.ruby[idx].item, (_, tag, title)=>\n            @tokens.abbrs[tag] ||= { title }\n        @tokens.abbrs_reg = inline.words Object.keys @tokens.abbrs\n        continue\n\n      # def\n      if top and cap = @rules.def.exec src\n        # console.log 'def', cap\n        src = src[cap[0].length ..]\n        if cap[3]\n          cap[3] = cap[3][1...-1]\n        tag = cap[1].toLowerCase()\n        @tokens.links[tag] ||=\n          href:  cap[2]\n          title: cap[3]\n        continue\n\n      # lheading\n      if cap = @rules.lheading.exec src\n        src = src[cap[0].length ..]\n        @tokens.push\n          type: 'heading'\n          depth:\n            if cap[2] == '='\n            then 1\n            else 2\n          text: cap[1]\n        continue\n \n      # top-level paragraph\n      if top and cap = @rules.paragraph.exec src\n        src = src[cap[0].length ..]\n        @tokens.push\n          type: 'paragraph'\n          text: cap[0]\n        continue\n\n      # text\n      if cap = @rules.text.exec src\n        # Top-level should never reach here.\n        src = src[cap[0].length ..]\n        @tokens.push\n          type: 'text'\n          text: cap[0]\n          top: top\n        continue\n\n      if src\n        throw new Error('Infinite loop on byte: ' + src.charCodeAt(0))\n    @tokens\n\n\n###\n# Inline Lexer & Compiler\n###\nclass InlineLexer\n  ###\n  # Expose Inline Rules\n  ###\n  @rules: inline\n  @output: (src, options)->\n    new InlineLexer(options, options).output src\n\n  @escapes: (text)->\n    text?.replace(InlineLexer.rules._escapes, '$1') or text\n\n  constructor: ({ @count, @notes, @links, @abbrs, @abbrs_reg }, options)->\n    @options = options\n    @rules = inline.normal\n    @renderer = @options.renderer\n    @renderer.options = @options\n    if !@notes\n      throw new Error('Tokens array requires a `notes` property.')\n    if !@links\n      throw new Error('Tokens array requires a `links` property.')\n\n    if @options.gfm\n      @rules = inline.gfm\n\n    @rules.cite =\n      if @options.cite && @options.context\n        @rules._cite\n      else\n        noop\n\n    @rules.em =\n      if @options.em\n        @rules._em\n      else\n        noop\n\n  output: (src)->\n    out = []\n    out.plain = \"\"\n    while src\n      # escape\n      if cap = @rules.escape.exec src\n        # console.log 'escape', cap\n        src = src[cap[0].length ..]\n        text = cap[1]\n        out.push text\n        out.plain += text\n        continue\n\n      # cite\n      if cap = @rules.cite.exec src\n        # console.log 'cite', cap\n        src = src[cap[0].length ..]\n        text = cap[0]\n\n        cite1 = cap[1][1...].split(\"-\")\n        if cap[2]\n          cite2 = cap[2][1...].split(\"-\")\n\n        out.push @renderer.cite text, ...@cite_range cite1, cite2\n        out.plain += text\n        continue\n\n      # autolink\n      if cap = @rules.autolink.exec src\n        # console.log 'autolink', cap\n        src = src[cap[0].length ..]\n        if cap[2] == '@'\n          text = cap[1]\n          href = 'mailto:' + text\n        else\n          text = cap[1]\n          href = text\n        out.push @outputLargeBrackets { text }, { href }\n        out.plain += text\n        continue\n\n      # url (gfm)\n      if !@inLink and (cap = @rules.url.exec src)\n        # console.log 'url (gfm)', cap\n        if cap[2] == '@'\n          text = cap[0]\n          href = 'mailto:' + text\n        else\n          cap[0] = @rules._backpedal.exec(cap[0])[0]\n          text = cap[0]\n          if cap[1] == 'www.'\n            href = 'http://' + text\n          else\n            href = text\n        src = src[cap[0].length ..]\n        out.push @outputLargeBrackets { text }, { href }\n        out.plain += text\n        continue\n\n      # strong\n      if cap = @rules.strong.exec src\n        # console.log 'strong', cap\n        src = src[cap[0].length ..]\n        count = @count[cap[0][1]] ?= 0\n        ++@count[cap[0][1]]\n        method =\n          switch cap[0][1]\n            when '_', '*'\n              'strong'\n            when '-'\n              # strikeout (markdown-it)\n              'strikeout'\n            when ':'\n              # span (markdown-it)\n              'span'\n            when '+'\n              # ins (markdown-it)\n              'ins'\n            when '['\n              # kbd (markdown-it)\n              'kbd'\n            when '~'\n              # del (gfm)\n              'del'\n            when '='\n              # Mark (markdown preview enhanced extended syntax)\n              'mark'\n        text = @output cap[0][2...-2]\n        out.push @renderer[method] text, count\n        out.plain += text.plain\n        continue\n\n      # tag\n      if cap = @rules.tag.exec src\n        # console.log 'tag', cap\n        if !@inLink and /^<a /i.test(cap[0])\n          @inLink = true\n        else if @inLink and /^<\\/a>/i.test(cap[0])\n          @inLink = false\n        src = src[cap[0].length ..]\n        text = cap[0]\n        out.plain += text\n        out.push (\n          if @options.sanitize\n            if @options.sanitizer\n            then @options.sanitizer text\n            else text\n          else\n            text\n        )\n        continue\n\n      # link\n      if cap = @rules.link.exec src\n        # console.log 'link', cap\n        src = src[cap[0].length ..]\n        mark = cap[0].charAt(0)\n        if mark == '!'\n          text = cap[1]\n        else\n          @inLink = true\n          text = @output cap[1]\n          @inLink = false\n\n        href = InlineLexer.escapes cap[2].trim().replace /^<([\\s\\S]*)>$/, '$1'\n        title = InlineLexer.escapes cap[3]?.slice(1, -1) or ''\n\n        out.push @outputLargeBrackets { mark, text }, { href, title }\n        out.plain += text.plain\n        continue\n\n      # reflink, nolink\n      if (cap = @rules.reflink.exec src) or (cap = @rules.nolink.exec src)\n        # console.log 'ref|no link', cap\n        src = src[cap[0].length ..]\n        mark = cap[0].charAt(0)\n        link = (cap[2] or cap[1]).replace(/\\s+/g, ' ')\n        link = @links[link.toLowerCase()]\n        unless link?.href\n          out.push mark\n          out.plain += mark\n          src = cap[0][1 .. ] + src\n          continue\n        @inLink = true\n        text = @output cap[1]\n        @inLink = false\n        out.push @outputLargeBrackets { mark, text }, link\n        out.plain += text.plain\n        continue\n\n      # note\n      if cap = @rules.note.exec src\n        # console.log 'note', cap\n        src = src[cap[0].length ..]\n        text = @output cap[1]\n\n        @notes.push o = { text }\n        o.href = '#' + num = @notes.length\n        out.push @renderer.note num, text, text.plain\n        out.plain += text.plain\n        continue\n\n      # br\n      if cap = @rules.br.exec src\n        # console.log 'br', cap\n        src = src[cap[0].length ..]\n        out.push @renderer.br()\n        out.plain += \"\\n\"\n        continue\n\n      # em\n      if cap = @rules.em.exec src\n        # console.log 'em', cap\n        src = src[cap[0].length ..]\n        text = cap[6] or cap[5] or cap[4] or cap[3] or cap[2] or cap[1]\n        text = @output text, cap[0][0]\n        out.push @renderer.em text\n        out.plain += text.plain\n        continue\n\n      # sup, sub\n      if cap = @rules.supsub.exec src\n        # console.log 'supsub', cap\n        src = src[cap[0].length ..]\n        method = \n          switch cap[0][0]\n            when '^'\n              # sup (markdown-it)\n              'sup'\n            when '~'\n              # sub (markdown-it)\n              'sub'\n\n        text = @output cap[0][1...-1]\n        out.push @renderer[method] text, text.plain\n        out.plain += text.plain\n        continue\n\n      # code\n      if cap = @rules.code.exec src\n        # console.log 'code', cap\n        src = src[cap[0].length ..]\n        out.push @renderer.codespan cap[2], true\n        out.plain += cap[2]\n        continue\n\n      # mdi\n      if cap = @rules.mdi.exec src\n        # console.log 'mdi', cap\n        src = src[cap[0].length ..]\n        out.push @renderer.mdi cap[1]\n        out.plain += \"@\"\n        continue\n\n      # ruby (inline)\n      if cap = @rules.ruby.exec src\n        # console.log 'ruby', cap\n        src = src[cap[0].length ..]\n        text = cap[2] || cap[1]\n        out.plain += text\n        out.push @renderer.abbr text, cap[3]\n        continue\n\n      # text\n      if cap = @rules.text.exec src\n        # console.log 'text', cap\n        src = src[cap[0].length ..]\n        text = cap[0]\n        if @abbrs_reg\n          for s in text.split @abbrs_reg\n            o = @abbrs[s]\n            text = @smartypants s\n            out.plain += text\n            if o\n              out.push @renderer.abbr text, o.title\n            else\n              out.push @renderer.text text\n        else\n          text = @smartypants text\n          out.plain += text\n          out.push @renderer.text text\n        continue\n\n      if src\n        throw new Error 'Infinite loop on byte: ' + src.charCodeAt(0)\n    out\n\n  outputLargeBrackets: ({ mark, text }, { href = '', title = '' })->\n    if @options.sanitize\n      try\n        prot =\n          decodeURIComponent unescape href\n          .replace(/[^\\w:]/g, '')\n          .toLowerCase()\n      catch e\n        return text\n      if prot.indexOf('javascript:') == 0 or prot.indexOf('vbscript:') == 0 or prot.indexOf('data:') == 0\n        return text\n\n    if @options.baseUrl && ! originIndependentUrl.test(href)\n      base = resolveUrl @options.baseUrl, href\n    url = @renderer.url href, base\n    switch mark\n      when '!'\n        @renderer.image url, title, text\n      else\n        @renderer.link url, title, text\n\n  smartypants: (text)->\n    if !@options.smartypants\n      return text\n    repl.smartypants text\n\n  cite_range: ( cite1, cite2 )->\n    { part_id } = @options.context\n    return [] unless part_id\n    return [] unless cite1\n\n    size1 = cite1.length\n    return [] unless 2 <= size1 <= 3\n\n    [a, b, c] = part_id.split(\"-\")\n    chat_idx1 = cite1.pop()\n    phase_idx1 = cite1.pop()\n    part_idx = cite1.pop() or c\n    cite1 = [a, b, part_idx, phase_idx1, chat_idx1].join(\"-\")\n    return [] unless @renderer.cite_exist cite1\n\n\n    return [ cite1 ] unless cite2\n\n    size2 = cite2.length\n    return [ cite1 ] unless  1 <= size2 <= 2\n\n    chat_idx2 = cite2.pop()\n    phase_idx2 = cite2.pop()\n    phase_idx2 ?= phase_idx1\n    cite2 = [a, b, part_idx, phase_idx2, chat_idx2].join(\"-\")\n    return [ cite1 ] unless @renderer.cite_exist cite2\n\n    return [ cite1, cite2 ]\n\n\n# Parsing & Compiling\nclass Parser\n  @parse = (src, options, renderer)->\n    new Parser(options, renderer).parse src\n\n  constructor: (@options)->\n    @tokens = []\n    @token = null\n    { @renderer } = @options\n\n  parse: (src)->\n    { m } = @options\n    @inline = new InlineLexer src, @options\n    @tokens = src.reverse()\n    out = []\n    while @next()\n      out.push @tok()\n    if src.notes.length\n      out.push @renderer.hr()\n      notes = []\n      for { text } in src.notes\n        notes.push @renderer.listitem text \n      out.push @renderer.list notes, true, 1\n\n    tag = @options.tag\n    if tag\n      m tag, {}, out\n    else\n      out.join(\"\")\n\n  next: ->\n    @token = @tokens.pop()\n\n  peek: ->\n    @tokens[@tokens.length - 1] or 0\n\n  parseText: ->\n    body = @token.text\n    while @peek().type == 'text'\n      body += @next().text\n    @inline.output body\n\n  ###\n  # Parse Current Token\n  ###\n\n  tok: ->\n    switch @token.type\n      when 'space'\n        @token.text\n\n      when 'hr'\n        @renderer.hr()\n\n      when 'heading'\n        text = @inline.output(@token.text)\n        @renderer.heading(\n          text,\n          @token.depth,\n          text.plain\n        )\n\n      when 'code'\n        @renderer.code(@token.text, @token.lang, @token.escaped)\n\n      when 'table'\n        tr = (header, args)=>\n          cell = []\n          for str, i in args\n            cell.push @renderer.tablecell @inline.output(str), { header, align: @token.align[i] }\n          if cell.length\n            @renderer.tablerow(cell)\n          else\n            []\n\n        header = tr true, @token.header\n        body = []\n        for row, i in @token.cells\n          body.push tr false, row\n        @renderer.table(header, body, @token.top)\n\n      when 'container_start'\n        { lang } = @token\n        body = []\n        while @next().type != 'container_end'\n          body.push @tok()\n        @renderer.container(body, lang)\n\n      when 'blockquote_start'\n        { mode } = @token\n        body = []\n        while @next().type != 'blockquote_end'\n          body.push @tok()\n        @renderer.blockquote(body, mode)\n\n      when 'list_start'\n        { ordered, start } = @token\n        body = []\n        tasklist = false\n        while @next().type != 'list_end'\n          if @token.checked?\n            taskList = true\n          body.push @tok()\n        @renderer.list(body, ordered, start, taskList)\n\n      when 'list_item_start'\n        body = []\n        { checked } = @token\n        while @next().type != 'list_item_end'\n          if @token.type == 'text'\n          then body = [ ...body, ...@parseText() ]\n          else body.push @tok()\n        @renderer.listitem(body, checked)\n\n      when 'loose_item_start'\n        body = []\n        { checked } = @token\n        while @next().type != 'list_item_end'\n          body.push @tok()\n        @renderer.listitem(body, checked)\n\n      when 'html'\n        html =\n          if ! @token.pre\n            @inline.output(@token.text)\n          else\n            @token.text\n        @renderer.html(html)\n\n      when 'paragraph'\n        @renderer.paragraph @inline.output(@token.text), true\n\n      when 'text'\n        @renderer.paragraph @parseText(), @token.top\n\n# Marked\nmarked = (src, opt)->\n  # throw error in case of non string input\n  unless src\n    throw new Error('marked(): input parameter is undefined or null')\n  if typeof src != 'string'\n    txt = Object.prototype.toString.call(src)\n    throw new Error(\"marked(): input parameter is of type #{txt}, string expected\")\n\n  try\n    opt.renderer.options = opt\n\n    tokens = Lexer.lex(src, opt)\n    return Parser.parse tokens, opt\n  catch e\n    { m } = opt\n    e.message += '\\nPlease report this to https://github.com/7korobi/vue-markup.'\n    if opt.silent\n      message = \"#{e.message}\"\n      return m 'p', {}, [\n        \"An error occured:\",\n        m 'pre', {}, message\n      ]\n    throw e\n\n\n# Options\nmarked.defaults = {}\n\n# Expose\n\nmarked.Parser = Parser\nmarked.parser = Parser.parse\n\nmarked.Lexer = Lexer\nmarked.lexer = Lexer.lex\n\nmarked.InlineLexer = InlineLexer\nmarked.inlineLexer = InlineLexer.output\n\nmarked.parse = marked\n\nmodule.exports = marked\n","edit = (regex, opt)->\n  regex = regex.source or regex\n  opt = opt or ''\n  self = (name, val)->\n    if name\n      val = val.source or val\n      val = val.replace(/(^|[^\\\\\\[])\\^/g, '$1')\n      regex = regex.replace(name, val)\n      self\n    else\n      new RegExp(regex, opt)\n\nnoop = ->\nnoop.exec = noop\n\n###\n# Block-Level Grammer\n###\nblock =\n  newline: /^ *\\n+/\n  code: /^( {4}[^\\n]+\\n*)+/\n  fences: noop\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n|$)/\n  heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n|$)/\n  table: noop\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/\n  list: /^( *)(bull)[\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull)\\n*|\\s*$)/\n  html: ///\n    ^\\ {0,3}(?: # optional indentation\n      <(script|pre|style)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$) # (1)\n     |comment[^\\n]*(\\n+|$) # (2)\n     |<\\?[\\s\\S]*?\\?>\\n* # (3)\n     |<![A-Z][\\s\\S]*?>\\n* # (4)\n     |<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\n* # (5)\n     |</?(tag)(?:\\ +|\\n|/?>)[\\s\\S]*?(?:\\n{2,}|$) # (6)\n     |<(?!script|pre|style)([a-z][\\w-]*)(?:attribute)*?\\ */?>(?=\\h*\\n)[\\s\\S]*?(?:\\n{2,}|$) # (7) open tag\n     |</(?!script|pre|style)[a-z][\\w-]*\\s*>(?=\\h*\\n)[\\s\\S]*?(?:\\n{2,}|$) # (7) closing tag\n    )\n  ///\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n|$)/\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n|$)/\n  checkbox: /^\\[([ xX])\\] +/\n  paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading| {0,3}>|<\\/?(?:tag)(?: +|\\n|\\/?>)|<(?:script|pre|style|!--))[^\\n]+)*)/\n  text: /^[^\\n]+/\n  ruby: noop\n\nblock._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/\nblock.def = edit(block.def\n)( 'label', block._label\n)( 'title', block._title\n)()\n\nblock.with_bullet = /^ *([*+-]|\\d+\\.) */\nblock.bullet = /(?:[*+-] |\\d+\\.)/\nblock.item = /^( *)(bull)[^\\n]*(?:\\n(?!\\1bull)[^\\n]*)*/\nblock.item = edit(block.item, 'gm'\n)( /bull/g, block.bullet\n)()\n\nblock.list = edit(block.list\n)( /bull/g, block.bullet\n)( 'hr', /\\n+(?=\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n|$))/\n)( 'def', ///\\n+(?=#{block.def.source})///\n)()\n\nblock._tag = ///\n  address|article|aside|base|basefont|blockquote|body|caption\n  |center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption\n  |figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe\n  |legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option\n  |p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr\n  |track|ul\n///\n\nblock._comment = /<!--(?!-?>)[\\s\\S]*?-->/\nblock.html = edit(block.html, 'i'\n)( 'attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/\n)( 'comment', block._comment\n)( 'tag', block._tag\n)()\n\nblock.paragraph = edit(block.paragraph\n)( 'hr', block.hr\n)( 'heading', block.heading\n)( 'lheading', block.lheading\n)( 'tag', block._tag\n)()\n\nblock.blockquote = edit(block.blockquote\n)( 'paragraph', block.paragraph\n)()\n\nblock.normal = Object.assign {}, block\nblock.gfm = Object.assign {}, block.normal,\n  fences: /^ *(`{3,}|~{3,}|:{3,})[ \\.]*(\\S+)? *\\n([\\s\\S]*?)\\n? *\\1 *(?:\\n|$)/\n  heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n|$)/\n  _ruby_item: /\\s+([^A]+)A([^Z]+)Z/g\n  _ruby_head: /^AZ((?:[^\\S\\n]+[^A\\n]+A[^Z\\n]+Z)+[^\\S\\n]*)(?:\\n|$)/\n\nblock.gfm.ruby =\n  for [a,z] in ['()', '{}', '[]', '《》']\n    item: edit(block.gfm._ruby_item,'g')(/A/g, '\\\\'+a)(/Z/g, '\\\\'+z)()\n    head: edit(block.gfm._ruby_head    )(/A/g, '\\\\'+a)(/Z/g, '\\\\'+z)()\nblock.gfm.ruby_heads = new RegExp block.gfm.ruby.map(({ head })=> head.source ).join(\"|\")\nblock.gfm.ruby.unshift {}\n\nblock.paragraph =\nblock.gfm.paragraph = edit(block.paragraph\n)( '(?!', \"(?!#{\n  block.gfm.fences.source.replace('\\\\1', '\\\\2')\n}|#{\n  block.list.source.replace('\\\\1', '\\\\3')\n}|\"\n)()\n\nblock.tables = Object.assign {}, block.gfm,\n  table: /^ *(.*\\|.*) *\\n *((\\|?) *:?-+:? *(?:\\| *:?-+:? *)*(\\|?))(?:\\n *((?:\\3.*[^>\\n ].*\\4(?:\\n|$))*)|$)/\n\n\n###\n# Inline-Level Grammar\n###\ninline =\n  _cite: /^((?:-\\w+){2,})(?:\\s*\\.\\.\\s*((?:-\\w+){1,}))?(?![-.])/\n  _attribute: /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/\n  _scheme: /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/\n  _title: /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/\n  _supsub: /^code(?:[^\\s]|codecode)+code(?!code)/\n  _escapes: /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g\n\n  _strong: ///\n    ^codecode(?:\n       [^code]\n      |[^code]code\n      |code[^code]\n    )+codecode(?!code)\n  ///\n\n  _strong_other: ///\n    ^\\[\\[(?:\n      [^\\]]|[^\\]]\\]|\\][^\\]]\n    )+\\]\\](?!\\])\n  ///\n\n  _em: ///\n     ^_([^\\s][\\s\\S]*?[^\\s_])_(?!_)\n    |^_([^\\s_][\\s\\S]*?[^\\s])_(?!_)\n    |^\\*([^\\s\"<\\[][\\s\\S]*?[^\\s*])\\*(?!\\*)\n    |^\\*([^\\s*\"<\\[][\\s\\S]*?[^\\s])\\*(?!\\*)\n    |^_([^\\s_])_(?!_)\n    |^\\*([^\\s*\"<\\[])\\*(?!\\*)\n  ///\n\n  _email: ///\n    [a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+\n    (@)\n    [a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\n    (?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+\n    (?![-_])\n  ///\n\n  _label: ///(?:\n    \\[[^\\[\\]]*\\]\n    |\\\\[\\[\\]]?\n    |`[^`]*`\n    |[^\\[\\]\\\\]\n  )*?///\n\n  _href: ///\n    \\s*(\n       <(?:\n         \\\\[<>]?\n        |[^\\s<>\\\\]\n      )*>\n      |(?:\n         \\\\[()]?\n        |\\([^\\s\\x00-\\x1f()\\\\]*\\)\n        |[^\\s\\x00-\\x1f()\\\\]\n      )*?\n    )\n  ///\n\n  _url_peice: ///\n      ^$\n    | ^mailto:\n    | :\\/\\/\n    | ^(\\.{0,2})[\\?\\#\\/]\n    | ^[\\w()%+:/]+$\n  ///ig\n\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/\n  link: /^!?\\[(label)\\]\\(href(?:\\s+(title))?\\s*\\)/\n  note: /^\\^\\[(label)\\]/\n  code: /^(`+)\\s*([\\s\\S]*?[^`]?)\\s*\\1(?!`)/\n  mdi: /^:(mdi-[^:]+):(?!:)/\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/\n  del: noop\n  url: noop\n\n  text: ///\n    ^[\\s\\S]+?(?=\n      [\\-\\[\\\\<!`*~^]\n     |\\b_\n     |\\[\\[\n     |\\*\\*\n     |\\+\\+\n     |__\n     |~~\n     |==\n     |::\n     |ruby\n     |https?://\n     |ftp://\n     |www\\.\n     |[a-zA-Z0-9.!#$%&\\'*+/=?^_`{\\\\|}~-]+@\n     |\\s*\\n\n     |$\n    )\n  ///\n\n  tag: ///\n     ^comment\n    |^</[a-zA-Z][\\w:-]*\\s*>                # self-closing tag\n    |^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?> # open tag\n    |^<\\?[\\s\\S]*?\\?>                       # processing instruction, e.g. <?php ?>\n    |^<![a-zA-Z]+\\s[\\s\\S]*?>               # declaration, e.g. <!DOCTYPE html>\n    |^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>             # CDATA section\n  ///\n\n  reflink: ///\n    ^!?\\[(label)\\]\\[(?!\\s*\\])((?:\n       \\\\[\\[\\]]?\n      |[^\\[\\]\\\\]\n    )+)\\]\n  ///\n\n  nolink: ///\n    ^!?\\[(?!\\s*\\])((?:\n       \\[[^\\[\\]]*\\]\n      |\\\\[\\[\\]]\n      |[^\\[\\]]\n    )*)\\](?:\\[\\])?\n  ///\n\n  ruby: ///^(\n     [|｜]([^《]+)\n    |(?:\\w+)                 # 英数_\n    |(?:[\\u30A1-\\u30FF]+)    # カタカナ\n    |(?:[\\u3041-\\u309F・ー]+) # ひらがなと・ー\n    |(?:(?:[々〇〻\\u3400-\\u9FFF\\uF900-\\uFAFF]|[\\uD840-\\uD87F][\\uDC00-\\uDFFF])+) # 漢字\n  )《([^\\n》]+)》///\n\nlist =\n  for c in ['_', '~', '=', ':', '\\\\*', '\\\\+', '\\\\-']\n    edit(inline._strong)(/code/g, c)().source\nlist.push inline._strong_other.source\ninline.strong = new RegExp list.join(\"|\")\n\nlist =\n  for c in ['\\\\^', '~']\n    edit(inline._supsub)(/code/g, c)().source\ninline.supsub = new RegExp list.join(\"|\")\n\ninline.escape = new RegExp '^' + inline._escapes.source\n\ninline.autolink = edit(inline.autolink\n)('scheme', inline._scheme\n)('email', inline._email\n)()\n\ninline.tag = edit(inline.tag\n)('comment', block._comment\n)('attribute', inline._attribute\n)()\n\ninline.link = edit(inline.link\n)('label', inline._label\n)('href', inline._href\n)('title', inline._title\n)()\n\ninline.reflink = edit(inline.reflink\n)('label', inline._label\n)()\n\ninline.note = edit(inline.note\n)('label', inline._label\n)()\n\ninline.text = edit(inline.text\n)('ruby', inline.ruby\n)()\n\ninline.words = ( list, extra = [] )->\n  keys = [\n    ...extra.map (s)-> s.source || s\n    ...list.map (s)-> s.replace /[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'\n  ]\n  ///(#{ keys.join '|' })///g\n\ninline.normal = Object.assign({}, inline)\n\ninline.gfm = Object.assign {}, inline.normal, \n  _extended_email: ///\n    [A-Za-z0-9._+-]+\n    (@)\n    [a-zA-Z0-9-_]+\n    (?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+\n    (?![-_])\n  ///\n  _backpedal: ///\n    (?:\n      [^?!.,:;*_~()&]+\n     |\\([^)]*\\)\n     |&(?!\n       [a-zA-Z0-9]+;$\n      )\n     |[?!.,:;*_~)]+(?!$)\n    )+\n  ///\n  _url: ///\n    ^(\n      (?:ftp|https?):\\/\\/\n     |www\\.\n    )(?:\n      [a-zA-Z0-9\\-]+\\.?\n    )+\n    [^\\s<]*\n   |^email\n  ///\n\ninline.gfm.url = edit(inline.gfm._url\n)( 'email', inline.gfm._extended_email\n)()\n\n\nreplacements = (hash, extra, cb)->\n  cb ?= (s)-> @[s]\n  key = inline.words Object.keys(hash), extra\n  (src)->\n    src.replace key, cb.bind hash\n\nrepl =\n  lexer: replacements\n    '\\r\\n': '\\n'\n    '\\r': '\\n'\n    '\\t': '    '\n    '\\u00a0': ' '\n    '\\u2424': '\\n'\n\n  smartypants: replacements\n    '...': '\\u2026' # ellipses\n    '---': '\\u2014' # em-dashes\n    '--':  '\\u2013' # en-dashes\n    '+-':  '\\u00B1' # markdown-it replacements\n    \"'\":   '\\u2019' # closing singles & apostrophes\n    '\"':   '\\u201d' # closing doubles\n  , [\n    ///\n      (^|---|['\"/({\\-\\s\\[])\n      (['\"])\n    ///\n  ], (__, str, hd, chr)->\n    switch chr\n      when undefined\n        @[str]\n      when hd\n        str\n      when \"'\"\n        \"#{hd}\\u2018\"\n      when '\"'\n        \"#{hd}\\u201c\"\n      else\n        @[str]\n\n\nmodule.exports = { block, inline, repl, noop }\n","var render, staticRenderFns\nimport script from \"./marked.vue?vue&type=script&lang=coffee&\"\nexport * from \"./marked.vue?vue&type=script&lang=coffee&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/7korobi/Dropbox/www/vue-markup/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!module.hot.data) {\n      api.createRecord('1afef345', component.options)\n    } else {\n      api.reload('1afef345', component.options)\n    }\n    \n  }\n}\ncomponent.options.__file = \"src/marked.vue\"\nexport default component.exports","import mod from \"-!../node_modules/coffee-loader/index.js??ref--0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./marked.vue?vue&type=script&lang=coffee&\"; export default mod; export * from \"-!../node_modules/coffee-loader/index.js??ref--0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./marked.vue?vue&type=script&lang=coffee&\"","{ syntax } = require './marksvg-regexp'\n\nparse = (render, src)->\n  do_parse([], render, src)\n\ndo_parse = (tokens, render, src)->\n  while src\n    # console.log src\n    if cap = syntax.newline.exec src\n      [ all ] = cap\n      src = src[all.length ..]\n      # console.log \"newline\", cap\n      render.newline()\n      type = \"newline\"\n      tokens.push { type, all }\n      continue\n\n    if cap = syntax.edges.exec src\n      [ all, edges, v, $, $, $, $, $, label ] = cap\n      src = src[all.length ..]\n      # console.log \"edges\", cap\n      edges = edges\n      .split syntax._arrow_\n      .map (s)-> s?.trim()\n\n      for v, idx in edges by 6\n        [ v, start, line, side, line2, end, w ] = edges[idx .. idx + 6]\n        if line != line2\n          render.error \" #{edges[idx .. idx + 6].join(\"\")} 線の前後が異なります。\"\n          break\n        continue unless w\n        [vm, v, vl] = render.dic v\n        [wm, w, wl] = render.dic w\n        { rects } = render.data\n        if rects[v] && rects[w]\n          headpos = side?[0] ? '>'\n          tailpos = side?[1] ? '<'\n          render.edge v, w, line, start, end, headpos, tailpos, label\n        else\n          render.error \" #{edges[idx .. idx + 6].join(\"\")} 要素が未定義です。\"\n      type = \"edges\"\n      tokens.push { type, all }\n      continue\n\n    if cap = syntax.nodes.exec src\n      [ all, label, nodes ] = cap\n      src = src[all.length ..]\n      # console.log \"nodes\", cap\n      nodes = nodes\n      .trim()\n      .split syntax.pick_node\n      vs =\n        for $, idx in nodes by 5\n          [$, x, side, y, v] = nodes[idx .. idx + 4]\n          continue unless v\n          [vm, vid, vl] = render.dic v\n          unless render.is_cluster vid\n            render[vm] vid, vl, side, x, y\n            render.node v, vid\n          vid\n      if label\n        render.cluster vs, label\n      type = \"nodes\"\n      tokens.push { type, all }\n      continue\n\n    if cap = syntax.error.exec src\n      [ all ] = cap\n      src = src[all.length ..]\n      render.error \"#{all} 解釈できない文字列です。\"\n      type = \"error\"\n      tokens.push { type, all }\n      continue\n  tokens\n\nstringify = (tokens, data)->\n  dest = \"\"\n  for { type, all } in tokens\n    switch type\n      when 'nodes'\n        dest += all.replace syntax.pick_node, ( $, x, side, y, v )->\n          if o = data.nodes[v]\n            { x, y, key } = o\n            \"<#{x}#{key[0]}#{y}>#{v}\"\n          else\n            v\n      when 'newline'\n        dest += all\n      when 'edges'\n        dest += all\n      when 'error'\n        dest += all\n      else\n        throw new Error \"tokens unimplement.\"\n  dest\n\n\nmodule.exports = { parse, stringify }\n","regexp_join = (regex, ...names) ->\n  { flags, source } = regex\n\n  for name in names\n    key = new RegExp name, 'g'\n    val = syntax[name]\n    val = val.source or val\n    source = source.replace key, val\n  new RegExp source, flags\n\nsyntax =\n  nodes: /^(?:_header_)? *((?:(?:_xy_)?_id__sep_)+)_eol_/\n  edges: /^ *((_id_)?(?: *_arrow_ *_id_)+) *(?:_comment_)?_eol_/\n  newline: /^ *\\n|^ +$/\n  error: /^[^\\n]*\\n|[^\\n]+$/\n\n  pick_node: /(?:<(\\d+)(_side_| )?(\\d+)>)?(_id_)/g\n\n  _xy_: /<\\d+(?:_side_| )?\\d+>/\n  _id_: /[^\\n\\s<>#]+/\n  _arrow_: /(<|X|x|O|o)?_line_(_side_{2,2})?_line_(>|X|x|O|o)?/\n  _header_: /#{1,3} *(.*) *\\n/\n  _comment_: /#{1,3} *(.*) */\n  _line_: /(-|=|\\.)+/\n  _side_: /[udlrUDLRv^<>]/\n  _sep_: / *\\n? */\n  _eol_: / *(?:\\n|$)/\n\nsyntax._xy_      = regexp_join syntax._xy_,                    '_side_'\nsyntax._arrow_   = regexp_join syntax._arrow_,       '_line_', '_side_'\n\nsyntax.pick_node = regexp_join syntax.pick_node,       '_id_', '_side_'\n\nsyntax.nodes     = regexp_join syntax.nodes,   '_xy_', '_id_', '_header_',    '_sep_', '_eol_'\nsyntax.edges     = regexp_join syntax.edges,           '_id_', '_arrow_', '_comment_', '_eol_'\n\nmodule.exports = { syntax }\n","import { render, staticRenderFns } from \"./marksvg.vue?vue&type=template&id=4b30752e&lang=pug&\"\nimport script from \"./marksvg.vue?vue&type=script&lang=coffee&\"\nexport * from \"./marksvg.vue?vue&type=script&lang=coffee&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/7korobi/Dropbox/www/vue-markup/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!module.hot.data) {\n      api.createRecord('4b30752e', component.options)\n    } else {\n      api.reload('4b30752e', component.options)\n    }\n    module.hot.accept(\"./marksvg.vue?vue&type=template&id=4b30752e&lang=pug&\", function () {\n      api.rerender('4b30752e', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/marksvg.vue\"\nexport default component.exports","import mod from \"-!../node_modules/coffee-loader/index.js??ref--0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./marksvg.vue?vue&type=script&lang=coffee&\"; export default mod; export * from \"-!../node_modules/coffee-loader/index.js??ref--0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./marksvg.vue?vue&type=script&lang=coffee&\"","export * from \"-!../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../node_modules/pug-plain-loader/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./marksvg.vue?vue&type=template&id=4b30752e&lang=pug&\"","module.exports = require(\"dagre\");","module.exports = require(\"file-system\");","module.exports = require(\"glob\");","module.exports = require(\"lodash\");","module.exports = require(\"vue-test-utils\");"],"sourceRoot":""}