// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`./__tests__/compiled_tests/escaped_angles.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><p data-v-47325f32>&gt;</p>
</article>"
`;

exports[`./__tests__/compiled_tests/gfm_autolinks.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><p data-v-47325f32>link with . <b title=\\"http
example.com\\" href=\\"http://example.com/hello-world\\" chk=\\"confirm\\" data-v-47325f32>http://example.com/hello-world</b>.</p>

<p data-v-47325f32>link with ! <b title=\\"http
example.com\\" href=\\"http://example.com/hello-world\\" chk=\\"confirm\\" data-v-47325f32>http://example.com/hello-world</b>!</p>

<p data-v-47325f32>link with : <b title=\\"http
example.com\\" href=\\"http://example.com/hello-world\\" chk=\\"confirm\\" data-v-47325f32>http://example.com/hello-world</b>:</p>

<p data-v-47325f32>link with , <b title=\\"http
example.com\\" href=\\"http://example.com/hello-world\\" chk=\\"confirm\\" data-v-47325f32>http://example.com/hello-world</b>,</p>

<p data-v-47325f32>link with ; <b title=\\"http
example.com\\" href=\\"http://example.com/hello-world\\" chk=\\"confirm\\" data-v-47325f32>http://example.com/hello-world</b>;</p>

<p data-v-47325f32>link with ) <b title=\\"http
example.com\\" href=\\"http://example.com/hello-world\\" chk=\\"confirm\\" data-v-47325f32>http://example.com/hello-world</b>)</p>

<p data-v-47325f32>link with nothing <b title=\\"http
example.com\\" href=\\"http://example.com/hello-world\\" chk=\\"confirm\\" data-v-47325f32>http://example.com/hello-world</b></p>

<h3 data-v-47325f32>Example 597</h3>
<p data-v-47325f32>The scheme http will be inserted automatically:</p>

<p data-v-47325f32><b title=\\"http
www.commonmark.org\\" href=\\"http://www.commonmark.org\\" chk=\\"confirm\\" data-v-47325f32>www.commonmark.org</b></p>

<h3 data-v-47325f32>Example 598</h3>
<p data-v-47325f32>After a valid domain, zero or more non-space non-&lt; characters may follow:</p>

<p data-v-47325f32>Visit <b title=\\"http
www.commonmark.org\\" href=\\"http://www.commonmark.org/help\\" chk=\\"confirm\\" data-v-47325f32>www.commonmark.org/help</b> for more information.</p>

<h3 data-v-47325f32>Example 599</h3>
<p data-v-47325f32>Trailing punctuation (specifically, ?, !, ., ,, :, *, _, and ~) will not be considered part of the autolink, though they may be included in the interior of the link:</p>

<p data-v-47325f32>Visit <b title=\\"http
www.commonmark.org\\" href=\\"http://www.commonmark.org\\" chk=\\"confirm\\" data-v-47325f32>www.commonmark.org</b>.</p>

<p data-v-47325f32>Visit <b title=\\"http
www.commonmark.org\\" href=\\"http://www.commonmark.org/a.b\\" chk=\\"confirm\\" data-v-47325f32>www.commonmark.org/a.b</b>.</p>

<h3 data-v-47325f32>Example 600</h3>
<p data-v-47325f32><b title=\\"http
www.google.com\\" href=\\"http://www.google.com/search?q=Markup+(business)\\" chk=\\"confirm\\" data-v-47325f32>www.google.com/search?q=Markup+(business)</b></p>

<p data-v-47325f32>(<b title=\\"http
www.google.com\\" href=\\"http://www.google.com/search?q=Markup+(business)\\" chk=\\"confirm\\" data-v-47325f32>www.google.com/search?q=Markup+(business)</b>)</p>

<h3 data-v-47325f32>Example 601</h3>
<p data-v-47325f32><b title=\\"http
www.google.com\\" href=\\"http://www.google.com/search?q=(business))+ok\\" chk=\\"confirm\\" data-v-47325f32>www.google.com/search?q=(business))+ok</b></p>

<h3 data-v-47325f32>Example 602</h3>
<p data-v-47325f32><b title=\\"http
www.google.com\\" href=\\"http://www.google.com/search?q=commonmark&amp;hl=en\\" chk=\\"confirm\\" data-v-47325f32>www.google.com/search?q=commonmark&amp;hl=en</b></p>

<p data-v-47325f32><b title=\\"http
www.google.com\\" href=\\"http://www.google.com/search?q=commonmark\\" chk=\\"confirm\\" data-v-47325f32>www.google.com/search?q=commonmark</b>&amp;amp;</p>

<h3 data-v-47325f32>Example 603</h3>
<p data-v-47325f32>&lt; immediately ends an autolink.</p>

<p data-v-47325f32><b title=\\"http
www.commonmark.org\\" href=\\"http://www.commonmark.org/he\\" chk=\\"confirm\\" data-v-47325f32>www.commonmark.org/he</b>&lt;lp</p>

<h3 data-v-47325f32>Example 604</h3>
<p data-v-47325f32><b title=\\"http
commonmark.org\\" href=\\"http://commonmark.org\\" chk=\\"confirm\\" data-v-47325f32>http://commonmark.org</b></p>

<p data-v-47325f32>(Visit <b title=\\"https
encrypted.google.com\\" href=\\"https://encrypted.google.com/search?q=Markup+(business)\\" chk=\\"confirm\\" data-v-47325f32>https://encrypted.google.com/search?q=Markup+(business)</b>)</p>

<p data-v-47325f32>Anonymous FTP is available at <b title=\\"ftp
foo.bar.baz\\" href=\\"ftp://foo.bar.baz\\" chk=\\"confirm\\" data-v-47325f32>ftp://foo.bar.baz</b>.</p>

<p data-v-47325f32>Extended email autolinks:</p>

<h3 data-v-47325f32>Example 605</h3>
<p data-v-47325f32><b title=\\"mailto:foo@bar.baz
\\" href=\\"mailto:foo@bar.baz\\" chk=\\"confirm\\" data-v-47325f32>foo@bar.baz</b></p>

<h3 data-v-47325f32>Example 606</h3>
<p data-v-47325f32>hello@mail+xyz.example isn't valid, but <b title=\\"mailto:hello+xyz@mail.example
\\" href=\\"mailto:hello+xyz@mail.example\\" chk=\\"confirm\\" data-v-47325f32>hello+xyz@mail.example</b> is.</p>

<h3 data-v-47325f32>Example 607</h3>
<p data-v-47325f32><b title=\\"mailto:a.b-c_d@a.b
\\" href=\\"mailto:a.b-c_d@a.b\\" chk=\\"confirm\\" data-v-47325f32>a.b-c_d@a.b</b></p>

<p data-v-47325f32><b title=\\"mailto:a.b-c_d@a.b
\\" href=\\"mailto:a.b-c_d@a.b\\" chk=\\"confirm\\" data-v-47325f32>a.b-c_d@a.b</b>.</p>

<p data-v-47325f32>a.b-c_d@a.b-</p>

<pre data-v-47325f32><code data-v-47325f32>a.b-c_d@a.b_
</code></pre></article>"
`;

exports[`./__tests__/compiled_tests/gfm_break.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><h2 data-v-47325f32>breaks: true</h2><p data-v-47325f32>Look at the
pretty line
breaks.</p>
</article>"
`;

exports[`./__tests__/compiled_tests/gfm_code.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><pre data-v-47325f32><code class=\\"lang-js\\" data-v-47325f32>var a = 'hello';
console.log(a + ' world');</code></pre>
<pre data-v-47325f32><code class=\\"lang-bash\\" data-v-47325f32>echo &quot;hello, \${WORLD}&quot;</code></pre>
<pre data-v-47325f32><code class=\\"lang-longfence\\" data-v-47325f32>Q: What do you call a tall person who sells stolen goods?</code></pre>
<pre data-v-47325f32><code class=\\"lang-ManyTildes\\" data-v-47325f32>A longfence!</code></pre>
<p data-v-47325f32>How about an empty code block?</p>

<pre data-v-47325f32><code class=\\"lang-js\\" data-v-47325f32></code></pre>
<p data-v-47325f32>How about a code block with only an empty line?</p>

<pre data-v-47325f32><code class=\\"lang-js\\" data-v-47325f32></code></pre>
<p data-v-47325f32>With some trailing empty lines:</p>

<pre data-v-47325f32><code data-v-47325f32>ciao

</code></pre></article>"
`;

exports[`./__tests__/compiled_tests/gfm_code_hr_list.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><h2 data-v-47325f32>foo</h2>
<ol data-v-47325f32><li data-v-47325f32><p data-v-47325f32>bar:</p>

<blockquote data-v-47325f32><ul data-v-47325f32><li data-v-47325f32>one
<ul data-v-47325f32><li data-v-47325f32>two
<ul data-v-47325f32><li data-v-47325f32>three</li><li data-v-47325f32>four</li><li data-v-47325f32>five</li></ul></li></ul></li></ul></blockquote></li><li data-v-47325f32><p data-v-47325f32>foo:</p>

<pre data-v-47325f32><code data-v-47325f32> line 1
 line 2</code></pre></li><li data-v-47325f32><p data-v-47325f32>foo:</p>

<ol data-v-47325f32><li data-v-47325f32><p data-v-47325f32>foo <code data-v-47325f32>bar</code> bar:</p>

<pre data-v-47325f32><code class=\\"lang-erb\\" data-v-47325f32> some code here</code></pre></li><li data-v-47325f32><p data-v-47325f32>foo <code data-v-47325f32>bar</code> bar:</p>

<pre data-v-47325f32><code class=\\"lang-erb\\" data-v-47325f32> foo
 ---
 bar
 ---
 foo
 bar</code></pre></li><li data-v-47325f32><p data-v-47325f32>foo <code data-v-47325f32>bar</code> bar:</p>

<pre data-v-47325f32><code class=\\"lang-html\\" data-v-47325f32> ---
 foo
 foo
 ---
 bar</code></pre></li><li data-v-47325f32><p data-v-47325f32>foo <code data-v-47325f32>bar</code> bar:</p>

<pre data-v-47325f32><code data-v-47325f32> foo
 ---
 bar
</code></pre></li><li data-v-47325f32><p data-v-47325f32>foo</p>
</li></ol></li></ol></article>"
`;

exports[`./__tests__/compiled_tests/gfm_del.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><p data-v-47325f32>hello <del data-v-47325f32>hi</del> world</p>
</article>"
`;

exports[`./__tests__/compiled_tests/gfm_em.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><p data-v-47325f32>These words should_not_be_emphasized.</p>
</article>"
`;

exports[`./__tests__/compiled_tests/gfm_hashtag.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><h2 data-v-47325f32>gfm: true</h2><p data-v-47325f32>#header</p>

<h1 data-v-47325f32>header1</h1>
<h1 data-v-47325f32>header2</h1></article>"
`;

exports[`./__tests__/compiled_tests/gfm_links_invalid.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><h2 data-v-47325f32>sanitize: true</h2><p data-v-47325f32>This should not be linked: http://example.com/%ff</p>
</article>"
`;

exports[`./__tests__/compiled_tests/gfm_tables.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><table data-v-47325f32><thead data-v-47325f32><tr data-v-47325f32><th data-v-47325f32>Heading 1</th><th data-v-47325f32>Heading 2</th></tr></thead><tbody data-v-47325f32><tr data-v-47325f32><td data-v-47325f32>Cell 1</td><td data-v-47325f32>Cell 2</td></tr><tr data-v-47325f32><td data-v-47325f32>Cell 3</td><td data-v-47325f32>Cell 4</td></tr></tbody></table>
<table data-v-47325f32><thead data-v-47325f32><tr data-v-47325f32><th class=\\"c\\" data-v-47325f32>Header 1</th><th class=\\"r\\" data-v-47325f32>Header 2</th><th class=\\"l\\" data-v-47325f32>Header 3</th><th data-v-47325f32>Header 4</th></tr></thead><tbody data-v-47325f32><tr data-v-47325f32><td class=\\"c\\" data-v-47325f32>Cell 1</td><td class=\\"r\\" data-v-47325f32>Cell 2</td><td class=\\"l\\" data-v-47325f32>Cell 3</td><td data-v-47325f32>Cell 4</td></tr><tr data-v-47325f32><td class=\\"c\\" data-v-47325f32>Cell 5</td><td class=\\"r\\" data-v-47325f32>Cell 6</td><td class=\\"l\\" data-v-47325f32>Cell 7</td><td data-v-47325f32>Cell 8</td></tr></tbody></table>
<pre data-v-47325f32><code data-v-47325f32>Test code

</code></pre><table data-v-47325f32><thead data-v-47325f32><tr data-v-47325f32><th data-v-47325f32>Header 1</th><th data-v-47325f32>Header 2</th></tr></thead><tbody data-v-47325f32><tr data-v-47325f32><td data-v-47325f32>Cell 1</td><td data-v-47325f32>Cell 2</td></tr><tr data-v-47325f32><td data-v-47325f32>Cell 3</td><td data-v-47325f32>Cell 4</td></tr></tbody></table>
<table data-v-47325f32><thead data-v-47325f32><tr data-v-47325f32><th class=\\"l\\" data-v-47325f32>Header 1</th><th class=\\"c\\" data-v-47325f32>Header 2</th><th class=\\"r\\" data-v-47325f32>Header 3</th><th data-v-47325f32>Header 4</th></tr></thead><tbody data-v-47325f32><tr data-v-47325f32><td class=\\"l\\" data-v-47325f32>Cell 1</td><td class=\\"c\\" data-v-47325f32>Cell 2</td><td class=\\"r\\" data-v-47325f32>Cell 3</td><td data-v-47325f32>Cell 4</td></tr><tr data-v-47325f32><td class=\\"l\\" data-v-47325f32><em data-v-47325f32>Cell 5</em></td><td class=\\"c\\" data-v-47325f32>Cell 6</td><td class=\\"r\\" data-v-47325f32>Cell 7</td><td data-v-47325f32>Cell 8</td></tr></tbody></table></article>"
`;

exports[`./__tests__/compiled_tests/hard_wrapped_paragraphs_with_list_like_lines.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><h2 data-v-47325f32>gfm: false</h2><p data-v-47325f32>In Markdown 1.0.0 and earlier. Version</p>
<ol start=\\"8\\" data-v-47325f32><li data-v-47325f32>This line turns into a list item.
Because a hard-wrapped line in the
middle of a paragraph looked like a
list item.

</li></ol><p data-v-47325f32>Here's one with a bullet.</p>
<ul data-v-47325f32><li data-v-47325f32>criminey.
</li></ul></article>"
`;

exports[`./__tests__/compiled_tests/headings_id.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><h3 data-v-47325f32>Heading with a <b title=\\"http
github.com\\" href=\\"http://github.com/\\" chk=\\"confirm\\" data-v-47325f32>link</b></h3>
<h3 data-v-47325f32>Heading with some <em data-v-47325f32>italic text</em></h3>
<h3 data-v-47325f32>Or some <strong data-v-47325f32>strong</strong></h3><p data-v-47325f32>(which doesn't really make any difference, here)</p>

<h3 data-v-47325f32>Or even <code data-v-47325f32>code</code></h3>
<h3 data-v-47325f32>What about <del data-v-47325f32>strikethrough</del></h3>
<h2 data-v-47325f32>And a ref <b title=\\"link to nowhere\\" href=\\"/some/url\\" chk=\\"confirm\\" data-v-47325f32>link</b></h2>
</article>"
`;

exports[`./__tests__/compiled_tests/horizontal_rules.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><h2 data-v-47325f32>gfm: false</h2><p data-v-47325f32>Dashes:</p>

<hr data-v-47325f32>
<hr data-v-47325f32> 
<hr data-v-47325f32>
<hr data-v-47325f32>
<pre data-v-47325f32><code data-v-47325f32>---

</code></pre><hr data-v-47325f32>
<hr data-v-47325f32> 
<hr data-v-47325f32>
<hr data-v-47325f32>
<pre data-v-47325f32><code data-v-47325f32>- - -


</code></pre><p data-v-47325f32>Asterisks:</p>

<hr data-v-47325f32>
<hr data-v-47325f32> 
<hr data-v-47325f32>
<hr data-v-47325f32>
<pre data-v-47325f32><code data-v-47325f32>***

</code></pre><hr data-v-47325f32>
<hr data-v-47325f32> 
<hr data-v-47325f32>
<hr data-v-47325f32>
<pre data-v-47325f32><code data-v-47325f32>* * *


</code></pre><p data-v-47325f32>Underscores:</p>

<hr data-v-47325f32>
<hr data-v-47325f32> 
<hr data-v-47325f32>
<hr data-v-47325f32>
<pre data-v-47325f32><code data-v-47325f32>___

</code></pre><hr data-v-47325f32>
<hr data-v-47325f32> 
<hr data-v-47325f32>
<hr data-v-47325f32>
<pre data-v-47325f32><code data-v-47325f32>_ _ _



</code></pre><p data-v-47325f32>Not horizontal rules:</p>

<p data-v-47325f32>--*</p>

<p data-v-47325f32>-*-</p>

<p data-v-47325f32>*--</p>

<p data-v-47325f32> -_-</p>

<p data-v-47325f32>  __-</p>

<p data-v-47325f32>   -__</p>

<pre data-v-47325f32><code data-v-47325f32>_-_


</code></pre><p data-v-47325f32>Long rules:</p>

<hr data-v-47325f32>
<hr data-v-47325f32>
<hr data-v-47325f32></article>"
`;

exports[`./__tests__/compiled_tests/hr_list_break.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><ul data-v-47325f32><li data-v-47325f32>hello
world</li><li data-v-47325f32>how
are
</li></ul><hr data-v-47325f32><p data-v-47325f32>you today?</p>
</article>"
`;

exports[`./__tests__/compiled_tests/html_comments.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><h3 data-v-47325f32>Example 1</h3>
<p data-v-47325f32>&lt;!-- comment --&gt;

</p><h3 data-v-47325f32>Example 2</h3>
<p data-v-47325f32>&lt;!----&gt;

</p><h3 data-v-47325f32>Example 3</h3>
<p data-v-47325f32>&lt;!-- --&gt;

</p><h3 data-v-47325f32>Example 4</h3>
<p data-v-47325f32>&lt;!-- - --&gt;

</p><h3 data-v-47325f32>Example 5</h3>
<p data-v-47325f32>&lt;!-- -- --&gt;

</p><h3 data-v-47325f32>Example 6</h3>
<p data-v-47325f32>&lt;!-- ---&gt;

</p><h3 data-v-47325f32>Example 7</h3>
<p data-v-47325f32>&lt;!-----&gt;

</p><h3 data-v-47325f32>Example 8</h3>
<p data-v-47325f32>&lt;!------&gt;

</p><h3 data-v-47325f32>Example 9</h3>
<p data-v-47325f32>&lt;!-- My favorite operators are &gt; and &lt;!--&gt;

</p><h3 data-v-47325f32>Example 10</h3>
<p data-v-47325f32>&lt;!-- multi
line    
comment
--&gt;

</p><h3 data-v-47325f32>Example 11</h3>
<p data-v-47325f32>   &lt;!-- indented comment --&gt;

</p><pre data-v-47325f32><code data-v-47325f32>&lt;!-- too much indentation --&gt;

</code></pre><h3 data-v-47325f32>Example 12</h3>
<p data-v-47325f32>&lt;!<s data-v-47325f32>&gt; not a comment </s>&gt;</p>

<p data-v-47325f32>&lt;!<s data-v-47325f32>-&gt; not a comment </s>&gt;</p>

<p data-v-47325f32>&lt;!-- &lt;!-- not a comment? --&gt; --&gt;</p></article>"
`;

exports[`./__tests__/compiled_tests/inline_html_advanced.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><h2 data-v-47325f32>gfm: false</h2><p data-v-47325f32>Simple block on one line:</p>

<p data-v-47325f32>&lt;div&gt;foo&lt;/div&gt;

</p><p data-v-47325f32>And nested without indentation:</p>

<p data-v-47325f32>&lt;div&gt;
&lt;div&gt;
&lt;div&gt;
foo
&lt;/div&gt;
&lt;div style=&quot;&gt;&quot;/&gt;
&lt;/div&gt;
&lt;div&gt;bar&lt;/div&gt;
&lt;/div&gt;
</p></article>"
`;

exports[`./__tests__/compiled_tests/inline_html_comments.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><h2 data-v-47325f32>gfm: false</h2><p data-v-47325f32>Paragraph one.</p>

<p data-v-47325f32>&lt;!-- This is a simple comment --&gt;

</p><p data-v-47325f32>&lt;!--
    This is another comment.
--&gt;

</p><p data-v-47325f32>Paragraph two.</p>

<p data-v-47325f32>&lt;!-- one comment block -- -- with two comments --&gt;

</p><p data-v-47325f32>The end.</p>
</article>"
`;

exports[`./__tests__/compiled_tests/inline_html_simple.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><h2 data-v-47325f32>gfm: false</h2><p data-v-47325f32>Here's a simple block:</p>

<p data-v-47325f32>&lt;div&gt;
    foo
&lt;/div&gt;

</p><p data-v-47325f32>This should be a code block, though:</p>

<pre data-v-47325f32><code data-v-47325f32>&lt;div&gt;
    foo
&lt;/div&gt;

</code></pre><p data-v-47325f32>As should this:</p>

<pre data-v-47325f32><code data-v-47325f32>&lt;div&gt;foo&lt;/div&gt;

</code></pre><p data-v-47325f32>Now, nested:</p>

<p data-v-47325f32>&lt;div&gt;
    &lt;div&gt;
        &lt;div&gt;
            foo
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

</p><p data-v-47325f32>This should just be an HTML comment:</p>

<p data-v-47325f32>&lt;!-- Comment --&gt;

</p><p data-v-47325f32>Multiline:</p>

<p data-v-47325f32>&lt;!--
Blah
Blah
--&gt;

</p><p data-v-47325f32>Code block:</p>

<pre data-v-47325f32><code data-v-47325f32>&lt;!-- Comment --&gt;

</code></pre><p data-v-47325f32>Just plain comment, with trailing spaces on the line:</p>

<p data-v-47325f32>&lt;!-- foo --&gt;   

</p><p data-v-47325f32>Code:</p>

<pre data-v-47325f32><code data-v-47325f32>&lt;hr&gt;
</code></pre>    
<p data-v-47325f32>Hr's:</p>

<p data-v-47325f32>&lt;hr&gt;

</p><p data-v-47325f32>&lt;hr&gt;

</p><p data-v-47325f32>&lt;hr&gt;

</p><p data-v-47325f32>&lt;hr&gt;   

</p><p data-v-47325f32>&lt;hr&gt;  

</p><p data-v-47325f32>&lt;hr&gt; 

</p><p data-v-47325f32>&lt;hr class=&quot;foo&quot; id=&quot;bar&quot; /&gt;

</p><p data-v-47325f32>&lt;hr class=&quot;foo&quot; id=&quot;bar&quot;/&gt;

</p><p data-v-47325f32>&lt;hr class=&quot;foo&quot; id=&quot;bar&quot; &gt;

</p></article>"
`;

exports[`./__tests__/compiled_tests/lazy_blockquotes.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><blockquote data-v-47325f32><p data-v-47325f32>hi there</p>
<p data-v-47325f32>bud</p></blockquote></article>"
`;

exports[`./__tests__/compiled_tests/link_lt.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><p data-v-47325f32><b title=\\"&lt;test
\\" href=\\"&lt;test\\" chk=\\"confirm\\" data-v-47325f32>URL</b></p>
</article>"
`;

exports[`./__tests__/compiled_tests/links.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><h2 data-v-47325f32>sanitize: true</h2><p data-v-47325f32>URL</p>

<p data-v-47325f32>URL</p>

<p data-v-47325f32>URL</p>

<p data-v-47325f32>URL</p>

<p data-v-47325f32>URL</p>
</article>"
`;

exports[`./__tests__/compiled_tests/links_inline_style.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><p data-v-47325f32>pedantic: true</p>
<h2 data-v-47325f32>gfm: false</h2>
<p data-v-47325f32>Just a <b title=\\"
url\\" href=\\"/url/\\" chk=\\"confirm\\" data-v-47325f32>URL</b>.</p>

<p data-v-47325f32><b title=\\"title\\" href=\\"/url/\\" chk=\\"confirm\\" data-v-47325f32>URL and title</b>.</p>

<p data-v-47325f32><b title=\\"title preceded by two spaces\\" href=\\"/url/\\" chk=\\"confirm\\" data-v-47325f32>URL and title</b>.</p>

<p data-v-47325f32><b title=\\"title preceded by a tab\\" href=\\"/url/\\" chk=\\"confirm\\" data-v-47325f32>URL and title</b>.</p>

<p data-v-47325f32><b title=\\"title has spaces afterward\\" href=\\"/url/\\" chk=\\"confirm\\" data-v-47325f32>URL and title</b>.</p>

<p data-v-47325f32>[URL and title]( /url/has space ).</p>

<p data-v-47325f32>[URL and title]( /url/has space/ &quot;url has space and title&quot;).</p>

<p data-v-47325f32><q title=\\"
\\" data-v-47325f32>Empty</q>.</p>
</article>"
`;

exports[`./__tests__/compiled_tests/links_reference_style.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><p data-v-47325f32>pedantic: true</p>
<h2 data-v-47325f32>gfm: false</h2>
<p data-v-47325f32>Foo [bar] <b title=\\"Title\\" href=\\"/url/\\" chk=\\"confirm\\" data-v-47325f32>1</b>.</p>

<p data-v-47325f32>Foo <b title=\\"Title\\" href=\\"/url/\\" chk=\\"confirm\\" data-v-47325f32>bar</b>.</p>

<p data-v-47325f32>Foo [bar]
<b title=\\"Title\\" href=\\"/url/\\" chk=\\"confirm\\" data-v-47325f32>1</b>.</p>



<p data-v-47325f32>With [embedded [brackets]] <b title=\\"
url\\" href=\\"/url/\\" chk=\\"confirm\\" data-v-47325f32>b</b>.</p>


<p data-v-47325f32>Indented <b title=\\"
url\\" href=\\"/url\\" chk=\\"confirm\\" data-v-47325f32>once</b>.</p>

<p data-v-47325f32>Indented <b title=\\"
url\\" href=\\"/url\\" chk=\\"confirm\\" data-v-47325f32>twice</b>.</p>

<p data-v-47325f32>Indented <b title=\\"
url\\" href=\\"/url\\" chk=\\"confirm\\" data-v-47325f32>thrice</b>.</p>

<p data-v-47325f32>Indented [four][] times.</p>




<pre data-v-47325f32><code data-v-47325f32>[four]: /url


</code></pre>
<hr data-v-47325f32>
<p data-v-47325f32><b title=\\"foo
\\" href=\\"foo\\" chk=\\"confirm\\" data-v-47325f32>this</b> <b title=\\"foo
\\" href=\\"foo\\" chk=\\"confirm\\" data-v-47325f32>this</b> should work</p>

<p data-v-47325f32>So should <b title=\\"foo
\\" href=\\"foo\\" chk=\\"confirm\\" data-v-47325f32>this</b>.</p>

<p data-v-47325f32>And <b title=\\"foo
\\" href=\\"foo\\" chk=\\"confirm\\" data-v-47325f32>this</b> [].</p>

<p data-v-47325f32>And <b title=\\"foo
\\" href=\\"foo\\" chk=\\"confirm\\" data-v-47325f32>this</b>.</p>

<p data-v-47325f32>And <b title=\\"foo
\\" href=\\"foo\\" chk=\\"confirm\\" data-v-47325f32>this</b>.</p>

<p data-v-47325f32>But not [that] [].</p>

<p data-v-47325f32>Nor [that][].</p>

<p data-v-47325f32>Nor [that].</p>

<p data-v-47325f32>[Something in brackets like <b title=\\"foo
\\" href=\\"foo\\" chk=\\"confirm\\" data-v-47325f32>this</b> should work]</p>

<p data-v-47325f32>[Same with <b title=\\"foo
\\" href=\\"foo\\" chk=\\"confirm\\" data-v-47325f32>this</b>.]</p>

<p data-v-47325f32>In this case, <b title=\\"
somethingelse\\" href=\\"/somethingelse/\\" chk=\\"confirm\\" data-v-47325f32>this</b> points to something else.</p>

<p data-v-47325f32>Backslashing should suppress [this] and [this].</p>



<hr data-v-47325f32>
<p data-v-47325f32>Here's one where the <b title=\\"
url\\" href=\\"/url/\\" chk=\\"confirm\\" data-v-47325f32>link
breaks</b> across lines.</p>

<p data-v-47325f32>Here's another where the <b title=\\"
url\\" href=\\"/url/\\" chk=\\"confirm\\" data-v-47325f32>link
breaks</b> across lines, but with a line-ending space.</p>


</article>"
`;

exports[`./__tests__/compiled_tests/links_shortcut_references.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><p data-v-47325f32>pedantic: true</p>
<h2 data-v-47325f32>gfm: false</h2>
<p data-v-47325f32>This is the <b title=\\"
simple\\" href=\\"/simple\\" chk=\\"confirm\\" data-v-47325f32>simple case</b>.</p>




<p data-v-47325f32>This one has a <b title=\\"
foo\\" href=\\"/foo\\" chk=\\"confirm\\" data-v-47325f32>line
break</b>.</p>

<p data-v-47325f32>This one has a <b title=\\"
foo\\" href=\\"/foo\\" chk=\\"confirm\\" data-v-47325f32>line
break</b> with a line-ending space.</p>



<p data-v-47325f32><b title=\\"
this\\" href=\\"/this\\" chk=\\"confirm\\" data-v-47325f32>this</b> <b title=\\"
that\\" href=\\"/that\\" chk=\\"confirm\\" data-v-47325f32>that</b> and the <b title=\\"
other\\" href=\\"/other\\" chk=\\"confirm\\" data-v-47325f32>other</b></p>

</article>"
`;

exports[`./__tests__/compiled_tests/list_item_text.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><ul data-v-47325f32><li data-v-47325f32><p data-v-47325f32>item1</p>

<ul data-v-47325f32><li data-v-47325f32>item2

</li></ul><p data-v-47325f32>text</p>
</li></ul></article>"
`;

exports[`./__tests__/compiled_tests/literal_quotes_in_titles.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><p data-v-47325f32>pedantic: true</p>
<h2 data-v-47325f32>gfm: false</h2>
<p data-v-47325f32>Foo [bar][].</p>

<p data-v-47325f32>Foo [bar](/url/ &quot;Title with &quot;quotes&quot; inside&quot;).</p>


<p data-v-47325f32>  [bar]: /url/ &quot;Title with &quot;quotes&quot; inside&quot;</p>

</article>"
`;

exports[`./__tests__/compiled_tests/loose_lists.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><ul data-v-47325f32><li data-v-47325f32><p data-v-47325f32>hello</p>
<p data-v-47325f32>world</p>

<p data-v-47325f32>how</p>
<p data-v-47325f32>are</p></li><li data-v-47325f32>you



</li></ul><p data-v-47325f32>better behavior:</p>

<ul data-v-47325f32><li data-v-47325f32><p data-v-47325f32>hello</p>
<ul data-v-47325f32><li data-v-47325f32><p data-v-47325f32>world</p>
<p data-v-47325f32>how</p>

<p data-v-47325f32>are</p>
<p data-v-47325f32>you</p>
</li><li data-v-47325f32><p data-v-47325f32>today</p></li></ul></li><li data-v-47325f32>hi



</li></ul><ul data-v-47325f32><li data-v-47325f32><p data-v-47325f32>hello</p>
</li><li data-v-47325f32><p data-v-47325f32>world</p></li><li data-v-47325f32>hi



</li></ul><ul data-v-47325f32><li data-v-47325f32>hello</li><li data-v-47325f32><p data-v-47325f32>world</p>
</li><li data-v-47325f32><p data-v-47325f32>hi</p>



</li></ul><ul data-v-47325f32><li data-v-47325f32>hello</li><li data-v-47325f32><p data-v-47325f32>world</p>

<p data-v-47325f32>how</p></li><li data-v-47325f32>hi



</li></ul><ul data-v-47325f32><li data-v-47325f32>hello</li><li data-v-47325f32>world</li><li data-v-47325f32><p data-v-47325f32>how</p>

<p data-v-47325f32>are</p>



</li></ul><ul data-v-47325f32><li data-v-47325f32>hello</li><li data-v-47325f32><p data-v-47325f32>world</p>
</li><li data-v-47325f32><p data-v-47325f32>how</p>

<p data-v-47325f32>are</p>
</li></ul></article>"
`;

exports[`./__tests__/compiled_tests/main.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32>
<h1 data-v-47325f32>A heading</h1>
<p data-v-47325f32>Just a note, I've found that I can't test my markdown parser vs others.
For example, both markdown.js and showdown code blocks in lists wrong. They're
also completely <b title=\\"Google\\" href=\\"http://google.com/\\" chk=\\"confirm\\" data-v-47325f32>inconsistent</b> with regards to paragraphs in list items.</p>

<p data-v-47325f32>A link. Not anymore.</p>

<p data-v-47325f32>&lt;aside&gt;This will make me fail the test because
markdown.js doesnt acknowledge arbitrary html blocks =/&lt;/aside&gt;

</p><ul data-v-47325f32><li data-v-47325f32><p data-v-47325f32>List Item 1</p>
</li><li data-v-47325f32><p data-v-47325f32>List Item 2</p>
<ul data-v-47325f32><li data-v-47325f32>New List Item 1
Hi, this is a list item.</li><li data-v-47325f32>New List Item 2
Another item
<pre data-v-47325f32><code data-v-47325f32>Code goes here.
Lots of it...</code></pre></li><li data-v-47325f32>New List Item 3
The last item
</li></ul></li><li data-v-47325f32><p data-v-47325f32>List Item 3</p>
<p data-v-47325f32>The final item.</p>
</li><li data-v-47325f32><p data-v-47325f32>List Item 4</p>
<p data-v-47325f32>The real final item.</p>

</li></ul><p data-v-47325f32>Paragraph.</p>

<blockquote data-v-47325f32><ul data-v-47325f32><li data-v-47325f32>bq Item 1</li><li data-v-47325f32>bq Item 2
<ul data-v-47325f32><li data-v-47325f32>New bq Item 1</li><li data-v-47325f32>New bq Item 2
Text here</li></ul></li></ul></blockquote>
<hr data-v-47325f32>
<blockquote data-v-47325f32><p data-v-47325f32>Another blockquote!</p>
<p data-v-47325f32>I really need to get</p>
<p data-v-47325f32>more creative with</p>
<p data-v-47325f32>mockup text..</p>
<p data-v-47325f32>markdown.js breaks here again</p></blockquote>
<h2 data-v-47325f32>Another Heading</h2>
<p data-v-47325f32>Hello <em data-v-47325f32>world</em>. Here is a <b title=\\"
\\" href=\\"//hello\\" chk=\\"confirm\\" data-v-47325f32>link</b>.
And an image <img src=\\"src\\" alt=\\"alt\\" data-v-47325f32>.</p>

<pre data-v-47325f32><code data-v-47325f32>Code goes here.
Lots of it...
</code></pre></article>"
`;

exports[`./__tests__/compiled_tests/mangle_xss.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><p data-v-47325f32>sanatize: true</p>
<h2 data-v-47325f32>mangle: false</h2><p data-v-47325f32>&lt;&lt;svg/onload=&quot;alert(1)&quot;//@x&gt;</p>

<p data-v-47325f32>&lt;bar&quot;onclick=&quot;alert('XSS')&quot;@foo&gt;</p>
</article>"
`;

exports[`./__tests__/compiled_tests/markdown_documentation_basics.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><p data-v-47325f32>pedantic: true</p>
<h2 data-v-47325f32>gfm: false</h2>
<h1 data-v-47325f32>Markdown: Basics</h1>
<p data-v-47325f32>&lt;ul id=&quot;ProjectSubmenu&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;/projects/markdown/&quot; title=&quot;Markdown Project Page&quot;&gt;Main&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a class=&quot;selected&quot; title=&quot;Markdown Basics&quot;&gt;Basics&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;/projects/markdown/syntax&quot; title=&quot;Markdown Syntax Documentation&quot;&gt;Syntax&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;/projects/markdown/license&quot; title=&quot;Pricing and License Information&quot;&gt;License&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;/projects/markdown/dingus&quot; title=&quot;Online Markdown Web Form&quot;&gt;Dingus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


</p><h2 data-v-47325f32>Getting the Gist of Markdown's Formatting Syntax</h2>
<p data-v-47325f32>This page offers a brief overview of what it's like to use Markdown.
The [syntax page] <b title=\\"Markdown Syntax\\" href=\\"/projects/markdown/syntax\\" chk=\\"confirm\\" data-v-47325f32>s</b> provides complete, detailed documentation for
every feature, but Markdown should be very easy to pick up simply by
looking at a few examples of it in action. The examples on this page
are written in a before/after style, showing example syntax and the
HTML output produced by Markdown.</p>

<p data-v-47325f32>It's also helpful to simply try Markdown out; the [Dingus] <b title=\\"Markdown Dingus\\" href=\\"/projects/markdown/dingus\\" chk=\\"confirm\\" data-v-47325f32>d</b> is a
web application that allows you type your own Markdown-formatted text
and translate it to XHTML.</p>

<p data-v-47325f32><strong data-v-47325f32>Note:</strong> This document is itself written using Markdown; you
can [see the source for it by adding '.text' to the URL] <b title=\\"
projects\\" href=\\"/projects/markdown/basics.text\\" chk=\\"confirm\\" data-v-47325f32>src</b>.</p>



<h2 data-v-47325f32>Paragraphs, Headers, Blockquotes</h2>
<p data-v-47325f32>A paragraph is simply one or more consecutive lines of text, separated
by one or more blank lines. (A blank line is any line that looks like a
blank line -- a line containing nothing spaces or tabs is considered
blank.) Normal paragraphs should not be intended with spaces or tabs.</p>

<p data-v-47325f32>Markdown offers two styles of headers: <em data-v-47325f32>Setext</em> and <em data-v-47325f32>atx</em>.
Setext-style headers for <code data-v-47325f32>&lt;h1&gt;</code> and <code data-v-47325f32>&lt;h2&gt;</code> are created by
&quot;underlining&quot; with equal signs (<code data-v-47325f32>=</code>) and hyphens (<code data-v-47325f32>-</code>), respectively.
To create an atx-style header, you put 1-6 hash marks (<code data-v-47325f32>#</code>) at the
beginning of the line -- the number of hashes equals the resulting
HTML header level.</p>

<p data-v-47325f32>Blockquotes are indicated using email-style '<code data-v-47325f32>&gt;</code>' angle brackets.</p>

<p data-v-47325f32>Markdown:</p>

<pre data-v-47325f32><code data-v-47325f32>A First Level Header
====================
</code></pre>    
<pre data-v-47325f32><code data-v-47325f32>A Second Level Header
---------------------

Now is the time for all good men to come to
the aid of their country. This is just a
regular paragraph.

The quick brown fox jumped over the lazy
dog's back.
</code></pre>    
<pre data-v-47325f32><code data-v-47325f32>### Header 3

&gt; This is a blockquote.
&gt; 
&gt; This is the second paragraph in the blockquote.
&gt;
&gt; ## This is an H2 in a blockquote


</code></pre><p data-v-47325f32>Output:</p>

<pre data-v-47325f32><code data-v-47325f32>&lt;h1&gt;A First Level Header&lt;/h1&gt;
</code></pre>    
<pre data-v-47325f32><code data-v-47325f32>&lt;h2&gt;A Second Level Header&lt;/h2&gt;
</code></pre>    
<pre data-v-47325f32><code data-v-47325f32>&lt;p&gt;Now is the time for all good men to come to
the aid of their country. This is just a
regular paragraph.&lt;/p&gt;
</code></pre>    
<pre data-v-47325f32><code data-v-47325f32>&lt;p&gt;The quick brown fox jumped over the lazy
dog's back.&lt;/p&gt;
</code></pre>    
<pre data-v-47325f32><code data-v-47325f32>&lt;h3&gt;Header 3&lt;/h3&gt;
</code></pre>    
<pre data-v-47325f32><code data-v-47325f32>&lt;blockquote&gt;
    &lt;p&gt;This is a blockquote.&lt;/p&gt;
    
    &lt;p&gt;This is the second paragraph in the blockquote.&lt;/p&gt;
    
    &lt;h2&gt;This is an H2 in a blockquote&lt;/h2&gt;
&lt;/blockquote&gt;



</code></pre><h3 data-v-47325f32>Phrase Emphasis</h3>
<p data-v-47325f32>Markdown uses asterisks and underscores to indicate spans of emphasis.</p>

<p data-v-47325f32>Markdown:</p>

<pre data-v-47325f32><code data-v-47325f32>Some of these words *are emphasized*.
Some of these words _are emphasized also_.
</code></pre>    
<pre data-v-47325f32><code data-v-47325f32>Use two asterisks for **strong emphasis**.
Or, if you prefer, __use two underscores instead__.

</code></pre><p data-v-47325f32>Output:</p>

<pre data-v-47325f32><code data-v-47325f32>&lt;p&gt;Some of these words &lt;em&gt;are emphasized&lt;/em&gt;.
Some of these words &lt;em&gt;are emphasized also&lt;/em&gt;.&lt;/p&gt;
</code></pre>    
<pre data-v-47325f32><code data-v-47325f32>&lt;p&gt;Use two asterisks for &lt;strong&gt;strong emphasis&lt;/strong&gt;.
Or, if you prefer, &lt;strong&gt;use two underscores instead&lt;/strong&gt;.&lt;/p&gt;
</code></pre>   


<h2 data-v-47325f32>Lists</h2>
<p data-v-47325f32>Unordered (bulleted) lists use asterisks, pluses, and hyphens (<code data-v-47325f32>*</code>,
<code data-v-47325f32>+</code>, and <code data-v-47325f32>-</code>) as list markers. These three markers are
interchangable; this:</p>

<pre data-v-47325f32><code data-v-47325f32>*   Candy.
*   Gum.
*   Booze.

</code></pre><p data-v-47325f32>this:</p>

<pre data-v-47325f32><code data-v-47325f32>+   Candy.
+   Gum.
+   Booze.

</code></pre><p data-v-47325f32>and this:</p>

<pre data-v-47325f32><code data-v-47325f32>-   Candy.
-   Gum.
-   Booze.

</code></pre><p data-v-47325f32>all produce the same output:</p>

<pre data-v-47325f32><code data-v-47325f32>&lt;ul&gt;
&lt;li&gt;Candy.&lt;/li&gt;
&lt;li&gt;Gum.&lt;/li&gt;
&lt;li&gt;Booze.&lt;/li&gt;
&lt;/ul&gt;

</code></pre><p data-v-47325f32>Ordered (numbered) lists use regular numbers, followed by periods, as
list markers:</p>

<pre data-v-47325f32><code data-v-47325f32>1.  Red
2.  Green
3.  Blue

</code></pre><p data-v-47325f32>Output:</p>

<pre data-v-47325f32><code data-v-47325f32>&lt;ol&gt;
&lt;li&gt;Red&lt;/li&gt;
&lt;li&gt;Green&lt;/li&gt;
&lt;li&gt;Blue&lt;/li&gt;
&lt;/ol&gt;

</code></pre><p data-v-47325f32>If you put blank lines between items, you'll get <code data-v-47325f32>&lt;p&gt;</code> tags for the
list item text. You can create multi-paragraph list items by indenting
the paragraphs by 4 spaces or 1 tab:</p>

<pre data-v-47325f32><code data-v-47325f32>*   A list item.
</code></pre>    
<pre data-v-47325f32><code data-v-47325f32>    With multiple paragraphs.

*   Another item in the list.

</code></pre><p data-v-47325f32>Output:</p>

<pre data-v-47325f32><code data-v-47325f32>&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A list item.&lt;/p&gt;
&lt;p&gt;With multiple paragraphs.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Another item in the list.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</code></pre>    


<h3 data-v-47325f32>Links</h3>
<p data-v-47325f32>Markdown supports two styles for creating links: <em data-v-47325f32>inline</em> and
<em data-v-47325f32>reference</em>. With both styles, you use square brackets to delimit the
text you want to turn into a link.</p>

<p data-v-47325f32>Inline-style links use parentheses immediately after the link text.
For example:</p>

<pre data-v-47325f32><code data-v-47325f32>This is an [example link](http://example.com/).

</code></pre><p data-v-47325f32>Output:</p>

<pre data-v-47325f32><code data-v-47325f32>&lt;p&gt;This is an &lt;a href=&quot;http://example.com/&quot;&gt;
example link&lt;/a&gt;.&lt;/p&gt;

</code></pre><p data-v-47325f32>Optionally, you may include a title attribute in the parentheses:</p>

<pre data-v-47325f32><code data-v-47325f32>This is an [example link](http://example.com/ &quot;With a Title&quot;).

</code></pre><p data-v-47325f32>Output:</p>

<pre data-v-47325f32><code data-v-47325f32>&lt;p&gt;This is an &lt;a href=&quot;http://example.com/&quot; title=&quot;With a Title&quot;&gt;
example link&lt;/a&gt;.&lt;/p&gt;

</code></pre><p data-v-47325f32>Reference-style links allow you to refer to your links by names, which
you define elsewhere in your document:</p>

<pre data-v-47325f32><code data-v-47325f32>I get 10 times more traffic from [Google][1] than from
[Yahoo][2] or [MSN][3].

[1]: http://google.com/        &quot;Google&quot;
[2]: http://search.yahoo.com/  &quot;Yahoo Search&quot;
[3]: http://search.msn.com/    &quot;MSN Search&quot;

</code></pre><p data-v-47325f32>Output:</p>

<pre data-v-47325f32><code data-v-47325f32>&lt;p&gt;I get 10 times more traffic from &lt;a href=&quot;http://google.com/&quot;
title=&quot;Google&quot;&gt;Google&lt;/a&gt; than from &lt;a href=&quot;http://search.yahoo.com/&quot;
title=&quot;Yahoo Search&quot;&gt;Yahoo&lt;/a&gt; or &lt;a href=&quot;http://search.msn.com/&quot;
title=&quot;MSN Search&quot;&gt;MSN&lt;/a&gt;.&lt;/p&gt;

</code></pre><p data-v-47325f32>The title attribute is optional. Link names may contain letters,
numbers and spaces, but are <em data-v-47325f32>not</em> case sensitive:</p>

<pre data-v-47325f32><code data-v-47325f32>I start my morning with a cup of coffee and
[The New York Times][NY Times].

[ny times]: http://www.nytimes.com/

</code></pre><p data-v-47325f32>Output:</p>

<pre data-v-47325f32><code data-v-47325f32>&lt;p&gt;I start my morning with a cup of coffee and
&lt;a href=&quot;http://www.nytimes.com/&quot;&gt;The New York Times&lt;/a&gt;.&lt;/p&gt;


</code></pre><h3 data-v-47325f32>Images</h3>
<p data-v-47325f32>Image syntax is very much like link syntax.</p>

<p data-v-47325f32>Inline (titles are optional):</p>

<pre data-v-47325f32><code data-v-47325f32>![alt text](/path/to/img.jpg &quot;Title&quot;)

</code></pre><p data-v-47325f32>Reference-style:</p>

<pre data-v-47325f32><code data-v-47325f32>![alt text][id]

[id]: /path/to/img.jpg &quot;Title&quot;

</code></pre><p data-v-47325f32>Both of the above examples produce the same output:</p>

<pre data-v-47325f32><code data-v-47325f32>&lt;img src=&quot;/path/to/img.jpg&quot; alt=&quot;alt text&quot; title=&quot;Title&quot; /&gt;



</code></pre><h3 data-v-47325f32>Code</h3>
<p data-v-47325f32>In a regular paragraph, you can create code span by wrapping text in
backtick quotes. Any ampersands (<code data-v-47325f32>&amp;</code>) and angle brackets (<code data-v-47325f32>&lt;</code> or
<code data-v-47325f32>&gt;</code>) will automatically be translated into HTML entities. This makes
it easy to use Markdown to write about HTML example code:</p>

<pre data-v-47325f32><code data-v-47325f32>I strongly recommend against using any \`&lt;blink&gt;\` tags.

I wish SmartyPants used named entities like \`&amp;mdash;\`
instead of decimal-encoded entites like \`&amp;#8212;\`.

</code></pre><p data-v-47325f32>Output:</p>

<pre data-v-47325f32><code data-v-47325f32>&lt;p&gt;I strongly recommend against using any
&lt;code&gt;&amp;lt;blink&amp;gt;&lt;/code&gt; tags.&lt;/p&gt;
</code></pre>    
<pre data-v-47325f32><code data-v-47325f32>&lt;p&gt;I wish SmartyPants used named entities like
&lt;code&gt;&amp;amp;mdash;&lt;/code&gt; instead of decimal-encoded
entites like &lt;code&gt;&amp;amp;#8212;&lt;/code&gt;.&lt;/p&gt;


</code></pre><p data-v-47325f32>To specify an entire block of pre-formatted code, indent every line of
the block by 4 spaces or 1 tab. Just like with code spans, <code data-v-47325f32>&amp;</code>, <code data-v-47325f32>&lt;</code>,
and <code data-v-47325f32>&gt;</code> characters will be escaped automatically.</p>

<p data-v-47325f32>Markdown:</p>

<pre data-v-47325f32><code data-v-47325f32>If you want your page to validate under XHTML 1.0 Strict,
you've got to put paragraph tags in your blockquotes:

    &lt;blockquote&gt;
        &lt;p&gt;For example.&lt;/p&gt;
    &lt;/blockquote&gt;

</code></pre><p data-v-47325f32>Output:</p>

<pre data-v-47325f32><code data-v-47325f32>&lt;p&gt;If you want your page to validate under XHTML 1.0 Strict,
you've got to put paragraph tags in your blockquotes:&lt;/p&gt;
</code></pre>    
<pre data-v-47325f32><code data-v-47325f32>&lt;pre&gt;&lt;code&gt;&amp;lt;blockquote&amp;gt;
    &amp;lt;p&amp;gt;For example.&amp;lt;/p&amp;gt;
&amp;lt;/blockquote&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</code></pre></article>"
`;

exports[`./__tests__/compiled_tests/nested_blockquotes.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><h2 data-v-47325f32>gfm: false</h2><blockquote data-v-47325f32><p data-v-47325f32>foo</p>

<blockquote data-v-47325f32><p data-v-47325f32>bar</p></blockquote>
<p data-v-47325f32>foo</p></blockquote></article>"
`;

exports[`./__tests__/compiled_tests/nested_code.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><p data-v-47325f32><code data-v-47325f32>hi ther \`\` ok \`\`\` </code></p>

<p data-v-47325f32><code data-v-47325f32>\` </code></p>

<p data-v-47325f32><code data-v-47325f32>There is a literal backtick (\`) here.</code></p>

<p data-v-47325f32>A backtick-delimited string in a code span: <code data-v-47325f32>\`foo\` </code></p>

<p data-v-47325f32>Please don't use any <code data-v-47325f32>&lt;blink&gt;</code> tags.</p></article>"
`;

exports[`./__tests__/compiled_tests/nested_em.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><p data-v-47325f32><em data-v-47325f32>test <strong data-v-47325f32>test</strong> test</em></p>

<p data-v-47325f32><em data-v-47325f32>test <strong data-v-47325f32>test</strong> test</em></p>
</article>"
`;

exports[`./__tests__/compiled_tests/nested_square_link.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><p data-v-47325f32><b title=\\"
url\\" href=\\"/url\\" chk=\\"confirm\\" data-v-47325f32>the <code data-v-47325f32>]</code> character</b></p>

<p data-v-47325f32><b title=\\"
url\\" href=\\"/url\\" chk=\\"confirm\\" data-v-47325f32>the \` character</b></p>
</article>"
`;

exports[`./__tests__/compiled_tests/nogfm_hashtag.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><h2 data-v-47325f32>gfm: false</h2><p data-v-47325f32>#header</p>

<h1 data-v-47325f32>header1</h1>
<h1 data-v-47325f32>header2</h1></article>"
`;

exports[`./__tests__/compiled_tests/not_a_link.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><p data-v-47325f32>[test](not a link)</p>
</article>"
`;

exports[`./__tests__/compiled_tests/ordered_and_unordered_lists.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><h2 data-v-47325f32>gfm: false</h2><h2 data-v-47325f32>Unordered</h2>
<p data-v-47325f32>Asterisks tight:</p>

<ul data-v-47325f32><li data-v-47325f32>asterisk 1</li><li data-v-47325f32>asterisk 2</li><li data-v-47325f32>asterisk 3


</li></ul><p data-v-47325f32>Asterisks loose:</p>

<ul data-v-47325f32><li data-v-47325f32><p data-v-47325f32>asterisk 1</p>
</li><li data-v-47325f32><p data-v-47325f32>asterisk 2</p>
</li><li data-v-47325f32><p data-v-47325f32>asterisk 3</p>

</li></ul><hr data-v-47325f32>
<p data-v-47325f32>Pluses tight:</p>

<ul data-v-47325f32><li data-v-47325f32>Plus 1</li><li data-v-47325f32>Plus 2</li><li data-v-47325f32>Plus 3


</li></ul><p data-v-47325f32>Pluses loose:</p>

<ul data-v-47325f32><li data-v-47325f32><p data-v-47325f32>Plus 1</p>
</li><li data-v-47325f32><p data-v-47325f32>Plus 2</p>
</li><li data-v-47325f32><p data-v-47325f32>Plus 3</p>

</li></ul><hr data-v-47325f32>

<p data-v-47325f32>Minuses tight:</p>

<ul data-v-47325f32><li data-v-47325f32>Minus 1</li><li data-v-47325f32>Minus 2</li><li data-v-47325f32>Minus 3


</li></ul><p data-v-47325f32>Minuses loose:</p>

<ul data-v-47325f32><li data-v-47325f32><p data-v-47325f32>Minus 1</p>
</li><li data-v-47325f32><p data-v-47325f32>Minus 2</p>
</li><li data-v-47325f32><p data-v-47325f32>Minus 3</p>


</li></ul><h2 data-v-47325f32>Ordered</h2>
<p data-v-47325f32>Tight:</p>

<ol data-v-47325f32><li data-v-47325f32>First</li><li data-v-47325f32>Second</li><li data-v-47325f32>Third

</li></ol><p data-v-47325f32>and:</p>

<ol data-v-47325f32><li data-v-47325f32>One</li><li data-v-47325f32>Two</li><li data-v-47325f32>Three


</li></ol><p data-v-47325f32>Loose using tabs:</p>

<ol data-v-47325f32><li data-v-47325f32><p data-v-47325f32>First</p>
</li><li data-v-47325f32><p data-v-47325f32>Second</p>
</li><li data-v-47325f32><p data-v-47325f32>Third</p>

</li></ol><p data-v-47325f32>and using spaces:</p>

<ol data-v-47325f32><li data-v-47325f32><p data-v-47325f32>One</p>
</li><li data-v-47325f32><p data-v-47325f32>Two</p>
</li><li data-v-47325f32><p data-v-47325f32>Three</p>

</li></ol><p data-v-47325f32>Multiple paragraphs:</p>

<ol data-v-47325f32><li data-v-47325f32><p data-v-47325f32>Item 1, graf one.</p>

<p data-v-47325f32>Item 2. graf two. The quick brown fox jumped over the lazy dog's</p>
<p data-v-47325f32>back.</p>
</li><li data-v-47325f32><p data-v-47325f32>Item 2.</p>
</li><li data-v-47325f32><p data-v-47325f32>Item 3.</p>



</li></ol><h2 data-v-47325f32>Nested</h2>
<ul data-v-47325f32><li data-v-47325f32>Tab
<ul data-v-47325f32><li data-v-47325f32>Tab
<ul data-v-47325f32><li data-v-47325f32>Tab

</li></ul></li></ul></li></ul><p data-v-47325f32>Here's another:</p>

<ol data-v-47325f32><li data-v-47325f32>First</li><li data-v-47325f32>Second:
<ul data-v-47325f32><li data-v-47325f32>Fee</li><li data-v-47325f32>Fie</li><li data-v-47325f32>Foe</li></ul></li><li data-v-47325f32>Third

</li></ol><p data-v-47325f32>Same thing but with paragraphs:</p>

<ol data-v-47325f32><li data-v-47325f32><p data-v-47325f32>First</p>
</li><li data-v-47325f32><p data-v-47325f32>Second:</p>
<ul data-v-47325f32><li data-v-47325f32>Fee</li><li data-v-47325f32>Fie</li><li data-v-47325f32>Foe
</li></ul></li><li data-v-47325f32><p data-v-47325f32>Third</p>


</li></ol><p data-v-47325f32>This was an error in Markdown 1.0.1:</p>

<ul data-v-47325f32><li data-v-47325f32><p data-v-47325f32>this</p>

<ul data-v-47325f32><li data-v-47325f32>sub

</li></ul><p data-v-47325f32>that</p>

</li></ul><p data-v-47325f32>Ordered lists start from initial number:</p>

<ol start=\\"3\\" data-v-47325f32><li data-v-47325f32>Three</li><li data-v-47325f32>Four

</li></ol><p data-v-47325f32>Ordered lists start from initial zero:</p>

<ol start=\\"0\\" data-v-47325f32><li data-v-47325f32>Zero</li><li data-v-47325f32>One
</li></ol></article>"
`;

exports[`./__tests__/compiled_tests/redos_html_closing.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><p data-v-47325f32>&lt;tag  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;&lt;&quot; /&gt;a'a</p>
</article>"
`;

exports[`./__tests__/compiled_tests/redos_nolink.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><p data-v-47325f32>![[[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[]!\\\\</p>
</article>"
`;

exports[`./__tests__/compiled_tests/ref_paren.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><p data-v-47325f32><b title=\\"there\\" href=\\"/url\\" chk=\\"confirm\\" data-v-47325f32>hi</b></p>

</article>"
`;

exports[`./__tests__/compiled_tests/relative_urls.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><h2 data-v-47325f32>baseUrl: &quot;<b title=\\"http
example.com\\" href=\\"http://example.com/base/&quot;\\" chk=\\"confirm\\" data-v-47325f32>http://example.com/base/&quot;</b></h2><h1 data-v-47325f32>Absolutization of RFC 3986 URIs</h1>
<h2 data-v-47325f32>Absolute URI</h2><p data-v-47325f32><b title=\\"http
example.com\\" href=\\"http://example.com/\\" chk=\\"confirm\\" data-v-47325f32><img src=\\"http://example.com/logo\\" alt=\\"section 4.3\\" data-v-47325f32></b></p>

<h2 data-v-47325f32>Network-path reference</h2><p data-v-47325f32><b title=\\"
\\" href=\\"//example.com/\\" chk=\\"confirm\\" data-v-47325f32><img src=\\"//example.com/logo\\" alt=\\"section 4.2\\" data-v-47325f32></b></p>

<h2 data-v-47325f32>Absolute path</h2><p data-v-47325f32><b title=\\"
path\\" href=\\"/path/to/content\\" chk=\\"confirm\\" data-v-47325f32><img src=\\"/path/to/img\\" alt=\\"section 4.2\\" data-v-47325f32></b></p>

<h2 data-v-47325f32>Relative path</h2><p data-v-47325f32><b title=\\"content
\\" href=\\"content\\" chk=\\"confirm\\" data-v-47325f32><img src=\\"img\\" alt=\\"section 4.2\\" data-v-47325f32></b></p>

<h2 data-v-47325f32>Dot-relative path</h2><p data-v-47325f32><b title=\\".
content\\" href=\\"./content\\" chk=\\"confirm\\" data-v-47325f32><img src=\\"./img\\" alt=\\"section 3.3\\" data-v-47325f32></b></p>

<p data-v-47325f32><b title=\\"..
content\\" href=\\"../content\\" chk=\\"confirm\\" data-v-47325f32><img src=\\"../img\\" alt=\\"section 3.3\\" data-v-47325f32></b></p>

<h2 data-v-47325f32>Same-document query</h2><p data-v-47325f32><b title=\\"
\\" href=\\"?\\" chk=\\"confirm\\" data-v-47325f32><img src=\\"?type=image\\" alt=\\"section 4.4\\" data-v-47325f32></b></p>

<h2 data-v-47325f32>Same-document fragment</h2><p data-v-47325f32><q title=\\"
\\" data-v-47325f32><img src=\\"#img\\" alt=\\"section 4.4\\" data-v-47325f32></q></p>

<h2 data-v-47325f32>Empty</h2><p data-v-47325f32><q title=\\"
\\" data-v-47325f32>section 4.2</q></p>
</article>"
`;

exports[`./__tests__/compiled_tests/same_bullet.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><ul data-v-47325f32><li data-v-47325f32>test</li><li data-v-47325f32>test</li><li data-v-47325f32>test
</li></ul></article>"
`;

exports[`./__tests__/compiled_tests/smartypants.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><h2 data-v-47325f32>smartypants: true</h2><p data-v-47325f32>Hello world 'how' &quot;are&quot; you -- today...</p>

<p data-v-47325f32>&quot;It's a more 'challenging' smartypants test...&quot;</p>

<p data-v-47325f32>'And,' as a bonus --- &quot;one
multiline&quot; test!</p>
</article>"
`;

exports[`./__tests__/compiled_tests/strong_and_em_together.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><h2 data-v-47325f32>gfm: false</h2><p data-v-47325f32><strong data-v-47325f32><em data-v-47325f32>This is strong and em.</em></strong></p>

<p data-v-47325f32>So is <strong data-v-47325f32><em data-v-47325f32>this</em></strong> word.</p>

<p data-v-47325f32><strong data-v-47325f32><em data-v-47325f32>This is strong and em.</em></strong></p>

<p data-v-47325f32>So is <strong data-v-47325f32><em data-v-47325f32>this</em></strong> word.</p>
</article>"
`;

exports[`./__tests__/compiled_tests/tabs.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><h2 data-v-47325f32>gfm: false</h2><ul data-v-47325f32><li data-v-47325f32><p data-v-47325f32>this is a list item</p>
<p data-v-47325f32>indented with tabs</p>
</li><li data-v-47325f32><p data-v-47325f32>this is a list item</p>
<p data-v-47325f32>indented with spaces</p>

</li></ul><p data-v-47325f32>Code:</p>

<pre data-v-47325f32><code data-v-47325f32>this code block is indented by one tab

</code></pre><p data-v-47325f32>And:</p>

<pre data-v-47325f32><code data-v-47325f32>    this code block is indented by two tabs

</code></pre><p data-v-47325f32>And:</p>

<pre data-v-47325f32><code data-v-47325f32>+    this is an example list item
    indented with tabs
</code></pre>    
<pre data-v-47325f32><code data-v-47325f32>+   this is an example list item
    indented with spaces
</code></pre></article>"
`;

exports[`./__tests__/compiled_tests/tidyness.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><h2 data-v-47325f32>gfm: false</h2><blockquote data-v-47325f32><p data-v-47325f32>A list within a blockquote:</p>

<ul data-v-47325f32><li data-v-47325f32>asterisk 1</li><li data-v-47325f32>asterisk 2</li><li data-v-47325f32>asterisk 3</li></ul></blockquote></article>"
`;

exports[`./__tests__/compiled_tests/toplevel_paragraphs.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><h2 data-v-47325f32>gfm: true</h2><p data-v-47325f32>hello world
    text after spaces
    text after spaces</p>

<p data-v-47325f32>paragraph before code</p>
<pre data-v-47325f32><code data-v-47325f32>text inside block code</code></pre>
<p data-v-47325f32>paragraph before hr</p>
<hr data-v-47325f32>
<p data-v-47325f32>paragraph before head with hash</p>
<h1 data-v-47325f32>how are you</h1>
<p data-v-47325f32>paragraph before head with equals</p>
<h1 data-v-47325f32>how are you</h1>
<p data-v-47325f32>paragraph before blockquote</p>
<blockquote data-v-47325f32><p data-v-47325f32>text for blockquote</p></blockquote>
<p data-v-47325f32>paragraph before list</p>
<ul data-v-47325f32><li data-v-47325f32>text inside list

</li></ul><p data-v-47325f32>paragraph before div</p>
<p data-v-47325f32>&lt;div&gt;text inside div&lt;/div&gt;

</p><p data-v-47325f32>paragraph with span
&lt;span&gt;text inside span&lt;/span&gt;</p>

<p data-v-47325f32>hello <b title=\\"
are\\" href=\\"/are/you\\" chk=\\"confirm\\" data-v-47325f32>world</b></p>


<p data-v-47325f32>&lt;div&gt;hello&lt;/div&gt;

</p><p data-v-47325f32>&lt;span&gt;hello&lt;/span&gt;</p>
</article>"
`;

exports[`./__tests__/compiled_tests/tricky_list.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><p data-v-47325f32><strong data-v-47325f32>hello</strong> <em data-v-47325f32>world</em></p>

<ul data-v-47325f32><li data-v-47325f32>hello world

</li></ul><p data-v-47325f32><strong data-v-47325f32>hello</strong> <em data-v-47325f32>world</em></p>

<ul data-v-47325f32><li data-v-47325f32>hello world

</li></ul><p data-v-47325f32><strong data-v-47325f32>hello</strong> <em data-v-47325f32>world</em></p>

<ul data-v-47325f32><li data-v-47325f32>Hello world

</li></ul><p data-v-47325f32><strong data-v-47325f32>hello</strong> <em data-v-47325f32>world</em></p>

<ul data-v-47325f32><li data-v-47325f32>hello world
</li></ul></article>"
`;

exports[`./__tests__/compiled_tests/uppercase_hex.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><h2 data-v-47325f32>sanitize: true</h2><p data-v-47325f32>lowerclick melower
upperclick meupper</p>
</article>"
`;

exports[`./__tests__/giji/cite.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><table data-v-47325f32><thead data-v-47325f32><tr data-v-47325f32><th class=\\"c\\" data-v-47325f32>Header 1</th><th class=\\"r\\" data-v-47325f32>Header 2</th><th class=\\"l\\" data-v-47325f32>Header 3</th><th data-v-47325f32>Header 4</th></tr></thead><tbody data-v-47325f32><tr data-v-47325f32><td class=\\"c\\" data-v-47325f32>-aZ</td><td class=\\"r\\" data-v-47325f32><q cite=\\"spec-1-1-bY-aZ\\" data-v-47325f32>-bY-aZ</q></td><td class=\\"l\\" data-v-47325f32><q cite=\\"spec-1-cX-bY-aZ\\" data-v-47325f32>-cX-bY-aZ</q></td><td data-v-47325f32>-a-b-c-d</td></tr></tbody></table>

<blockquote data-v-47325f32><p data-v-47325f32> -aZ</p>
<p data-v-47325f32><q cite=\\"spec-1-1-bY-aZ\\" data-v-47325f32>-bY-aZ</q></p>
<p data-v-47325f32><q cite=\\"spec-1-cX-bY-aZ\\" end=\\"spec-1-cX-eV-dW\\" data-v-47325f32>-cX-bY-aZ..-eV-dW</q></p>
<p data-v-47325f32><q cite=\\"spec-1-cX-bY-aZ\\" end=\\"spec-1-cX-eV-dW\\" data-v-47325f32>-cX-bY-aZ  .. -eV-dW</q></p>
<p data-v-47325f32><q cite=\\"spec-1-cX-bY-aZ\\" end=\\"spec-1-cX-eV-dW\\" data-v-47325f32>-cX-bY-aZ　..　-eV-dW</q></p></blockquote></article>"
`;

exports[`./__tests__/giji/japanese text.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32>
<h2 data-v-47325f32>ヘッドライン</h2>
<h2 data-v-47325f32>テーブル</h2>
<p data-v-47325f32>大きなテーブルも作れま<ruby data-v-47325f32>す<rp data-v-47325f32>《</rp><rt data-v-47325f32>るび</rt><rp data-v-47325f32>》</rp></ruby>。<sup title=\\"まああんまり大きいと困りますけど。\\" class=\\"note\\" data-v-47325f32>1</sup></p>

<table data-v-47325f32><thead data-v-47325f32><tr data-v-47325f32><th data-v-47325f32>Tables</th><th class=\\"c\\" data-v-47325f32>Are</th><th class=\\"r\\" data-v-47325f32>Cool</th></tr></thead><tbody data-v-47325f32><tr data-v-47325f32><td data-v-47325f32>col <sup data-v-47325f32>3</sup> is</td><td class=\\"c\\" data-v-47325f32>other</td><td class=\\"r\\" data-v-47325f32>$1600</td></tr><tr data-v-47325f32><td data-v-47325f32>col <sub data-v-47325f32>2</sub> is</td><td class=\\"c\\" data-v-47325f32><q title=\\"１０分とか、５分とか。……ひどいときは１分だぜ。クール！\\" data-v-47325f32>short</q></td><td class=\\"r\\" data-v-47325f32>$12</td></tr><tr data-v-47325f32><td data-v-47325f32>zebra stripes</td><td class=\\"c\\" data-v-47325f32><b title=\\"手引き\\" href=\\"http://crazy-crazy.sakura.ne.jp/giji/?%28Knowledge%29Guidance#l1\\" chk=\\"confirm\\" data-v-47325f32>ガイド</b></td><td class=\\"r\\" data-v-47325f32>$1</td></tr></tbody></table><hr data-v-47325f32><ol data-v-47325f32><li data-v-47325f32>まああんまり<abbr data-v-47325f32>大きい</abbr>と困りま<ruby data-v-47325f32>す<rp data-v-47325f32>《</rp><rt data-v-47325f32>るび</rt><rp data-v-47325f32>》</rp></ruby>けど。</li></ol></article>"
`;

exports[`./__tests__/giji/sample.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32>
<h1 data-v-47325f32>H1</h1><h2 data-v-47325f32>H2</h2><h3 data-v-47325f32>H3</h3><h4 data-v-47325f32>H4</h4><h5 data-v-47325f32>H5</h5><h6 data-v-47325f32>H6</h6>
<p data-v-47325f32>Alternatively, for H1 and H2, an underline-ish style:</p>

<h1 data-v-47325f32>Alt-H1</h1>
<h2 data-v-47325f32>Alt-H2</h2>
<p data-v-47325f32>Hello <q title=\\"日本語のふきだし\\" data-v-47325f32>まーくだうん</q>!
<b title=\\"ank\\" href=\\"ank\\" chk=\\"confirm\\" data-v-47325f32>間接参照</b></p>

<hr data-v-47325f32><p data-v-47325f32>ようこそ。ここにはこの<b title=\\"ここ！\\" href=\\"/\\" chk=\\"confirm\\" data-v-47325f32>サイト</b>を楽しむためのルールや心構えを綴ってある。
暖炉のそばが開いているから、腰を下ろして熟読しよう。楽しいゲームは全員が対等で、全員が読んで理解しているルールがあって成り立つんだ。

ただし、やむを得ず、ルール違反をすることもあるだろうね。違反してしまった事実は覆らないけれど、ルールを破らざるをえなかった事情は、落ち着いて聞いてあげよう。</p>
<hr data-v-47325f32>

<p data-v-47325f32><em data-v-47325f32>em</em> <strong data-v-47325f32>strong</strong> <strong data-v-47325f32><em data-v-47325f32>strong em</em></strong> <em data-v-47325f32>**<em data-v-47325f32>strong strong***</em>
<em data-v-47325f32>em</em> <strong data-v-47325f32>strong</strong> <strong data-v-47325f32><em data-v-47325f32>strong em</em></strong> <em data-v-47325f32>___strong strong____
_em</em> <strong data-v-47325f32>strong</strong> *<strong data-v-47325f32>em strong</strong></em> <strong data-v-47325f32><strong data-v-47325f32>strong strong</strong></strong>
<del data-v-47325f32>DEL</del></p>

<blockquote data-v-47325f32><p data-v-47325f32>block-quote</p>
<p data-v-47325f32>block-quote</p>
<p data-v-47325f32>block-quote</p>
<blockquote data-v-47325f32><p data-v-47325f32>block-quote</p>
<p data-v-47325f32>block-quote</p>
<blockquote data-v-47325f32><p data-v-47325f32>block-quote</p></blockquote></blockquote></blockquote>
<ul data-v-47325f32><li class=\\"task-list-item\\" data-v-47325f32><input type=\\"checkbox\\" class=\\"task-list-item-checkbox\\" data-v-47325f32>task 1</li><li class=\\"task-list-item\\" data-v-47325f32><input type=\\"checkbox\\" checked=\\"checked\\" class=\\"task-list-item-checkbox\\" data-v-47325f32><p data-v-47325f32>task 2</p>
</li><li data-v-47325f32><p data-v-47325f32>one</p></li><li data-v-47325f32>two
<ol data-v-47325f32><li data-v-47325f32>three</li><li data-v-47325f32>four</li><li data-v-47325f32>asterisk</li><li data-v-47325f32>minus</li><li data-v-47325f32>plus

</li></ol></li></ul><p data-v-47325f32>Colons can be used to align columns.</p>

<table data-v-47325f32><thead data-v-47325f32><tr data-v-47325f32><th data-v-47325f32>Tables</th><th class=\\"c\\" data-v-47325f32>Are</th><th class=\\"r\\" data-v-47325f32>Cool</th></tr></thead><tbody data-v-47325f32><tr data-v-47325f32><td data-v-47325f32>col 3 is</td><td class=\\"c\\" data-v-47325f32>right-aligned</td><td class=\\"r\\" data-v-47325f32>$1600</td></tr><tr data-v-47325f32><td data-v-47325f32>col 2 is</td><td class=\\"c\\" data-v-47325f32>centered</td><td class=\\"r\\" data-v-47325f32>$12</td></tr><tr data-v-47325f32><td data-v-47325f32>zebra stripes</td><td class=\\"c\\" data-v-47325f32>are neat</td><td class=\\"r\\" data-v-47325f32>$1</td></tr></tbody></table>

<p data-v-47325f32><b title=\\"http
www.youtube.com\\" href=\\"http://www.youtube.com/watch?v=YOUTUBE_VIDEO_ID_HERE\\" chk=\\"confirm\\" data-v-47325f32><img src=\\"https://s3-ap-northeast-1.amazonaws.com/giji-assets/images/portrate/c59.jpg\\" alt=\\"IMAGE ALT TEXT HERE\\" data-v-47325f32></b></p>

<p data-v-47325f32>There must be at least 3 dashes separating each header cell.
The outer pipes (|) are optional, and you don't need to make the
raw Markdown line up prettily. You can also use inline Markdown.</p>

<blockquote data-v-47325f32><p data-v-47325f32> &lt;dl&gt;
   &lt;dt&gt;Definition list&lt;/dt&gt;
   &lt;dd&gt;Is something people use sometimes.&lt;/dd&gt;

</p><p data-v-47325f32>   &lt;dt&gt;Markdown in HTML&lt;/dt&gt;
   &lt;dd&gt;Does <em data-v-47325f32>not</em> work <strong data-v-47325f32>very</strong> well. Use HTML &lt;em&gt;tags&lt;/em&gt;.&lt;/dd&gt;
 &lt;/dl&gt;</p></blockquote>
<table data-v-47325f32><thead data-v-47325f32><tr data-v-47325f32><th class=\\"r\\" data-v-47325f32>Markdown</th><th class=\\"r\\" data-v-47325f32>Less</th><th class=\\"r\\" data-v-47325f32>Pretty</th></tr></thead><tbody data-v-47325f32><tr data-v-47325f32><td class=\\"r\\" data-v-47325f32><em data-v-47325f32>Still</em></td><td class=\\"r\\" data-v-47325f32><code data-v-47325f32>renders</code></td><td class=\\"r\\" data-v-47325f32><strong data-v-47325f32>nicely</strong></td></tr><tr data-v-47325f32><td class=\\"r\\" data-v-47325f32>---</td><td class=\\"r\\" data-v-47325f32>--</td><td class=\\"r\\" data-v-47325f32>...</td></tr><tr data-v-47325f32><td class=\\"r\\" data-v-47325f32>1</td><td class=\\"r\\" data-v-47325f32>2</td><td class=\\"r\\" data-v-47325f32>3</td></tr></tbody></table>

<pre data-v-47325f32><code data-v-47325f32>indent 4 means 
pre has code block

</code></pre><pre data-v-47325f32><code class=\\"lang-js\\" data-v-47325f32>here is pre has code.
it shows white-space: pre</code></pre>
<p data-v-47325f32><code data-v-47325f32>code</code> <code data-v-47325f32>code</code></p>
<pre data-v-47325f32><code class=\\"lang-css\\" data-v-47325f32>here is pre has code.
it shows white-space: pre</code></pre></article>"
`;

exports[`./__tests__/giji/svg.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><h1 data-v-47325f32>header1</h1>
<article data-v-bb43e1b2 data-v-47325f32><svg viewBox=\\"0 0 341 186\\" style=\\"max-width:100%;width:341px;\\" data-v-bb43e1b2><marker id=\\"svg-marker-circle\\" viewBox=\\"0 0 10 10\\" markerUnits=\\"userSpaceOnUse\\" markerWidth=\\"20\\" markerHeight=\\"20\\" refX=\\"5\\" refY=\\"5\\" orient=\\"auto\\" class=\\"edgePath\\" data-v-bb43e1b2><circle cx=\\"5\\" cy=\\"5\\" r=\\"4\\" data-v-bb43e1b2></circle></marker><marker id=\\"svg-marker-arrow-start\\" viewBox=\\"0 0 10 10\\" markerUnits=\\"userSpaceOnUse\\" markerWidth=\\"20\\" markerHeight=\\"20\\" refX=\\"3\\" refY=\\"5\\" orient=\\"auto\\" class=\\"edgePath\\" data-v-bb43e1b2><path d=\\"M10,0 L0,5 L10,10 z\\" class=\\"path\\" data-v-bb43e1b2></path></marker><marker id=\\"svg-marker-arrow-end\\" viewBox=\\"0 0 10 10\\" markerUnits=\\"userSpaceOnUse\\" markerWidth=\\"20\\" markerHeight=\\"20\\" refX=\\"3\\" refY=\\"5\\" orient=\\"auto\\" class=\\"edgePath\\" data-v-bb43e1b2><path d=\\"M0,0 L10,5 L0,10 z\\" class=\\"path\\" data-v-bb43e1b2></path></marker><marker id=\\"svg-marker-cross\\" viewBox=\\"0 0 10 10\\" markerUnits=\\"userSpaceOnUse\\" markerWidth=\\"20\\" markerHeight=\\"20\\" refX=\\"5\\" refY=\\"5\\" orient=\\"0\\" class=\\"edgePath\\" data-v-bb43e1b2><path d=\\"M0,0 L10,10 M0,10 L10,0 z\\" class=\\"path\\" data-v-bb43e1b2></path></marker><g data-v-bb43e1b2><rect rx=\\"10\\" ry=\\"10\\" x=\\"228\\" y=\\"3\\" width=\\"100\\" height=\\"100\\" data-v-bb43e1b2></rect><rect rx=\\"10\\" ry=\\"10\\" x=\\"3\\" y=\\"3\\" width=\\"100\\" height=\\"100\\" data-v-bb43e1b2></rect></g><g class=\\"edgePath\\" data-v-bb43e1b2><path fill=\\"none\\" minlen=\\"1\\" weight=\\"0\\" label=\\"ルーカス\\" labelpos=\\"c\\" width=\\"120\\" height=\\"30\\" rx=\\"5\\" ry=\\"5\\" x=\\"278\\" y=\\"123\\" d=\\"M317.4736842105263,103L328,116.33333333333334L328,119.66666666666667L278,123L228,119.66666666666667L228,116.33333333333334L238.5263157894737,103\\" class=\\"path hide\\" data-v-bb43e1b2></path><path fill=\\"none\\" minlen=\\"1\\" weight=\\"0\\" label=\\"グロリア\\" labelpos=\\"c\\" width=\\"120\\" height=\\"30\\" rx=\\"5\\" ry=\\"5\\" x=\\"53\\" y=\\"123\\" d=\\"M92.4736842105263,103L103,116.33333333333334L103,119.66666666666667L53,123L3,119.66666666666667L3,116.33333333333334L13.526315789473692,103\\" class=\\"path hide\\" data-v-bb43e1b2></path><path fill=\\"none\\" marker-start=\\"url(#svg-marker-circle)\\" marker-end=\\"url(#svg-marker-circle)\\" minlen=\\"1\\" weight=\\"2\\" label=\\"   \\" labelpos=\\"c\\" width=\\"95\\" height=\\"30\\" rx=\\"5\\" ry=\\"5\\" x=\\"165.5\\" y=\\"53\\" d=\\"M228,53L165.5,53L103,53\\" class=\\"path solid\\" data-v-bb43e1b2></path><rect minlen=\\"1\\" weight=\\"0\\" label=\\"ルーカス\\" labelpos=\\"c\\" width=\\"100\\" height=\\"30\\" rx=\\"5\\" ry=\\"5\\" x=\\"228\\" y=\\"102\\" class=\\"path hide\\" data-v-bb43e1b2></rect><rect minlen=\\"1\\" weight=\\"0\\" label=\\"グロリア\\" labelpos=\\"c\\" width=\\"100\\" height=\\"30\\" rx=\\"5\\" ry=\\"5\\" x=\\"3\\" y=\\"102\\" class=\\"path hide\\" data-v-bb43e1b2></rect><text minlen=\\"1\\" weight=\\"0\\" label=\\"ルーカス\\" labelpos=\\"c\\" width=\\"120\\" height=\\"30\\" rx=\\"5\\" ry=\\"5\\" x=\\"278\\" y=\\"123\\" class=\\"messageText hide\\" data-v-bb43e1b2>ルーカス</text><text minlen=\\"1\\" weight=\\"0\\" label=\\"グロリア\\" labelpos=\\"c\\" width=\\"120\\" height=\\"30\\" rx=\\"5\\" ry=\\"5\\" x=\\"53\\" y=\\"123\\" class=\\"messageText hide\\" data-v-bb43e1b2>グロリア</text><text marker-start=\\"url(#svg-marker-circle)\\" marker-end=\\"url(#svg-marker-circle)\\" minlen=\\"1\\" weight=\\"2\\" label=\\"   \\" labelpos=\\"c\\" width=\\"95\\" height=\\"30\\" rx=\\"5\\" ry=\\"5\\" x=\\"165.5\\" y=\\"53\\" class=\\"messageText solid\\" data-v-bb43e1b2>   </text></g></svg><!----></article></article>"
`;

exports[`./__tests__/new/autolink_lines.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><p data-v-47325f32>hello world
<b title=\\"http
example.com\\" href=\\"http://example.com\\" chk=\\"confirm\\" data-v-47325f32>http://example.com</b></p>
</article>"
`;

exports[`./__tests__/new/blockquote_list_item.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><p data-v-47325f32>This fails in markdown.pl and upskirt:</p>

<ul data-v-47325f32><li data-v-47325f32>hello
<blockquote data-v-47325f32><p data-v-47325f32>world</p></blockquote></li></ul></article>"
`;

exports[`./__tests__/new/case_insensitive_refs.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><p data-v-47325f32><b title=\\"
url\\" href=\\"/url\\" chk=\\"confirm\\" data-v-47325f32>hi</b></p>

</article>"
`;

exports[`./__tests__/new/cm_autolinks.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><p data-v-47325f32>gfm: false</p>
<h2 data-v-47325f32>mangle: false</h2>
<p data-v-47325f32>Here are some valid autolinks:</p>

<h3 data-v-47325f32>Example 565</h3>
<p data-v-47325f32><b title=\\"http
foo.bar.baz\\" href=\\"http://foo.bar.baz\\" chk=\\"confirm\\" data-v-47325f32>http://foo.bar.baz</b></p>

<h3 data-v-47325f32>Example 566</h3>
<p data-v-47325f32><b title=\\"http
foo.bar.baz\\" href=\\"http://foo.bar.baz/test?q=hello&amp;id=22&amp;boolean\\" chk=\\"confirm\\" data-v-47325f32>http://foo.bar.baz/test?q=hello&amp;id=22&amp;boolean</b></p>

<h3 data-v-47325f32>Example 567</h3>
<p data-v-47325f32><b title=\\"irc
foo.bar:2233\\" href=\\"irc://foo.bar:2233/baz\\" chk=\\"confirm\\" data-v-47325f32>irc://foo.bar:2233/baz</b></p>

<h3 data-v-47325f32>Example 568</h3>
<p data-v-47325f32>Uppercase is also fine:</p>

<p data-v-47325f32><b title=\\"MAILTO:FOO@BAR.BAZ
\\" href=\\"MAILTO:FOO@BAR.BAZ\\" chk=\\"confirm\\" data-v-47325f32>MAILTO:FOO@BAR.BAZ</b></p>

<p data-v-47325f32>Note that many strings that count as absolute URIs for purposes of this spec are not valid URIs, because their schemes are not registered or because of other problems with their syntax:</p>

<h3 data-v-47325f32>Example 569</h3>
<p data-v-47325f32><b title=\\"a+b+c:d
\\" href=\\"a+b+c:d\\" chk=\\"confirm\\" data-v-47325f32>a+b+c:d</b></p>

<h3 data-v-47325f32>Example 570</h3>
<p data-v-47325f32><b title=\\"made-up-scheme
foo,bar\\" href=\\"made-up-scheme://foo,bar\\" chk=\\"confirm\\" data-v-47325f32>made-up-scheme://foo,bar</b></p>

<h3 data-v-47325f32>Example 571</h3>
<p data-v-47325f32><b title=\\"http
..\\" href=\\"http://../\\" chk=\\"confirm\\" data-v-47325f32>http://../</b></p>

<h3 data-v-47325f32>Example 572</h3>
<p data-v-47325f32><b title=\\"localhost:5001
foo\\" href=\\"localhost:5001/foo\\" chk=\\"confirm\\" data-v-47325f32>localhost:5001/foo</b></p>

<h3 data-v-47325f32>Example 573</h3>
<p data-v-47325f32>Spaces are not allowed in autolinks:</p>

<p data-v-47325f32>&lt;<b title=\\"http
foo.bar\\" href=\\"http://foo.bar/baz\\" chk=\\"confirm\\" data-v-47325f32>http://foo.bar/baz</b> bim&gt;</p>

<h3 data-v-47325f32>Example 574</h3>
<p data-v-47325f32>Backslash-escapes do not work inside autolinks:</p>

<p data-v-47325f32><b title=\\"http
example.com\\" href=\\"http://example.com/\\\\[\\\\\\" chk=\\"confirm\\" data-v-47325f32>http://example.com/\\\\[\\\\</b></p>

<p data-v-47325f32>Examples of email autolinks:</p>

<h3 data-v-47325f32>Example 575</h3>
<p data-v-47325f32><b title=\\"mailto:foo@bar.example.com
\\" href=\\"mailto:foo@bar.example.com\\" chk=\\"confirm\\" data-v-47325f32>foo@bar.example.com</b></p>

<h3 data-v-47325f32>Example 576</h3>
<p data-v-47325f32><b title=\\"mailto:foo+special@Bar.baz-bar0.com
\\" href=\\"mailto:foo+special@Bar.baz-bar0.com\\" chk=\\"confirm\\" data-v-47325f32>foo+special@Bar.baz-bar0.com</b></p>

<h3 data-v-47325f32>Example 577</h3>
<p data-v-47325f32>Backslash-escapes do not work inside email autolinks:</p>

<p data-v-47325f32>&lt;foo+@bar.example.com&gt;</p>

<p data-v-47325f32>These are not autolinks:</p>

<h3 data-v-47325f32>Example 578</h3>
<p data-v-47325f32>&lt;&gt;</p>

<h3 data-v-47325f32>Example 579</h3>
<p data-v-47325f32>&lt; <b title=\\"http
foo.bar\\" href=\\"http://foo.bar\\" chk=\\"confirm\\" data-v-47325f32>http://foo.bar</b> &gt;</p>

<h3 data-v-47325f32>Example 580</h3>
<p data-v-47325f32>&lt;m:abc&gt;</p>

<h3 data-v-47325f32>Example 581</h3>
<p data-v-47325f32>&lt;foo.bar.baz&gt;</p>

<h3 data-v-47325f32>Example 582</h3>
<p data-v-47325f32><b title=\\"http
example.com\\" href=\\"http://example.com\\" chk=\\"confirm\\" data-v-47325f32>http://example.com</b></p>

<h3 data-v-47325f32>Example 583</h3>
<p data-v-47325f32><b title=\\"mailto:foo@bar.example.com
\\" href=\\"mailto:foo@bar.example.com\\" chk=\\"confirm\\" data-v-47325f32>foo@bar.example.com</b></p></article>"
`;

exports[`./__tests__/new/cm_blockquotes.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><h3 data-v-47325f32>Example 191</h3>
<blockquote data-v-47325f32><h1 data-v-47325f32>Foo</h1><p data-v-47325f32>bar</p>
<p data-v-47325f32>baz</p></blockquote>
<h3 data-v-47325f32>Example 192</h3>
<p data-v-47325f32>The spaces after the <code data-v-47325f32>&gt;</code> characters can be omitted:</p>

<blockquote data-v-47325f32><h1 data-v-47325f32>Foo</h1><p data-v-47325f32>bar</p>
<p data-v-47325f32>baz</p></blockquote>
<h3 data-v-47325f32>Example 193</h3>
<p data-v-47325f32>The <code data-v-47325f32>&gt;</code> characters can be indented 1-3 spaces:</p>

<blockquote data-v-47325f32><h1 data-v-47325f32>Foo</h1><p data-v-47325f32>bar</p>
<p data-v-47325f32>baz</p></blockquote>
<h3 data-v-47325f32>Example 194</h3>
<p data-v-47325f32>Four spaces gives us a code block:</p>

<pre data-v-47325f32><code data-v-47325f32>&gt; # Foo
&gt; bar
&gt; baz

</code></pre><h3 data-v-47325f32>Example 195</h3>
<p data-v-47325f32>The Laziness clause allows us to omit the <code data-v-47325f32>&gt;</code> before paragraph continuation text:</p>

<blockquote data-v-47325f32><h1 data-v-47325f32>Foo</h1><p data-v-47325f32>bar</p>
<p data-v-47325f32>baz</p></blockquote>
<h3 data-v-47325f32>Example 196</h3>
<p data-v-47325f32>A block quote can contain some lazy and some non-lazy continuation lines:</p>

<blockquote data-v-47325f32><p data-v-47325f32>bar</p>
<p data-v-47325f32>baz</p>
<p data-v-47325f32>foo</p></blockquote>
<h3 data-v-47325f32>Example 197</h3>
<p data-v-47325f32>Laziness only applies to lines that would have been continuations of paragraphs had they been prepended with block quote markers. For example, the <code data-v-47325f32>&gt;</code> cannot be omitted in the second line of</p>

<blockquote data-v-47325f32><p data-v-47325f32>foo</p></blockquote><hr data-v-47325f32>
<p data-v-47325f32>without changing the meaning.</p>

<h3 data-v-47325f32>Example 198</h3>
<pre data-v-47325f32><code data-v-47325f32>Similarly, if we omit the \`&gt;\` in the second line then the block quote ends after the first line:

&gt; - foo
- bar

</code></pre><h3 data-v-47325f32>Example 199</h3>
<p data-v-47325f32>For the same reason, we can’t omit the <code data-v-47325f32>&gt;</code> in front of subsequent lines of an indented or fenced code block:</p>

<blockquote data-v-47325f32><pre data-v-47325f32><code data-v-47325f32>foo</code></pre></blockquote>
<pre data-v-47325f32><code data-v-47325f32>bar

</code></pre><h3 data-v-47325f32>Example 200</h3>
<pre data-v-47325f32><code data-v-47325f32>&gt; \`\`\`
foo
\`\`\`

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;p&gt;foo&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&lt;/code&gt;&lt;/pre&gt;

</code></pre><h3 data-v-47325f32>Example 201</h3>
<pre data-v-47325f32><code data-v-47325f32>&gt; foo
    - bar

&lt;blockquote&gt;
&lt;p&gt;foo
- bar&lt;/p&gt;
&lt;/blockquote&gt;

</code></pre><h3 data-v-47325f32>Example 202</h3>
<p data-v-47325f32>A block quote can be empty:</p>

<blockquote data-v-47325f32></blockquote>
<h3 data-v-47325f32>Example 203</h3>
<blockquote data-v-47325f32>
<p data-v-47325f32> </p>
</blockquote>
<h3 data-v-47325f32>Example 204</h3>
<p data-v-47325f32>A block quote can have initial or final blank lines:</p>

<blockquote data-v-47325f32>
<p data-v-47325f32>foo</p>
<p data-v-47325f32> </p></blockquote>
<h3 data-v-47325f32>Example 205</h3>
<p data-v-47325f32>A blank line always separates block quotes:</p>

<blockquote data-v-47325f32><p data-v-47325f32>foo</p></blockquote>
<blockquote data-v-47325f32><p data-v-47325f32>bar</p></blockquote>
<h3 data-v-47325f32>Example 206</h3>
<p data-v-47325f32>Consecutiveness means that if we put these block quotes together, we get a single block quote:</p>

<blockquote data-v-47325f32><p data-v-47325f32>foo</p>
<p data-v-47325f32>bar</p></blockquote>
<h3 data-v-47325f32>Example 207</h3>
<p data-v-47325f32>To get a block quote with two paragraphs, use:</p>

<blockquote data-v-47325f32><p data-v-47325f32>foo</p>

<p data-v-47325f32>bar</p></blockquote>
<h3 data-v-47325f32>Example 208</h3>
<p data-v-47325f32>Block quotes can interrupt paragraphs:</p>

<p data-v-47325f32>foo</p>
<blockquote data-v-47325f32><p data-v-47325f32>bar</p></blockquote>
<h3 data-v-47325f32>Example 209</h3>
<p data-v-47325f32>In general, blank lines are not needed before or after block quotes:</p>

<blockquote data-v-47325f32><p data-v-47325f32>aaa</p></blockquote><hr data-v-47325f32><blockquote data-v-47325f32><p data-v-47325f32>bbb</p></blockquote>
<h3 data-v-47325f32>Example 210</h3>
<p data-v-47325f32>However, because of laziness, a blank line is needed between a block quote and a following paragraph:</p>

<blockquote data-v-47325f32><p data-v-47325f32>bar</p>
<p data-v-47325f32>baz</p></blockquote>
<h3 data-v-47325f32>Example 211</h3>
<blockquote data-v-47325f32><p data-v-47325f32>bar</p></blockquote>
<p data-v-47325f32>baz</p>

<h3 data-v-47325f32>Example 212</h3>
<blockquote data-v-47325f32><p data-v-47325f32>bar</p>
</blockquote><p data-v-47325f32>baz</p>

<h3 data-v-47325f32>Example 213</h3>
<p data-v-47325f32>It is a consequence of the Laziness rule that any number of initial <code data-v-47325f32>&gt;</code>s may be omitted on a continuation line of a nested block quote:</p>

<blockquote data-v-47325f32><blockquote data-v-47325f32><blockquote data-v-47325f32><p data-v-47325f32>foo</p>
<p data-v-47325f32>bar</p></blockquote></blockquote></blockquote>
<h3 data-v-47325f32>Example 214</h3>
<blockquote data-v-47325f32><blockquote data-v-47325f32><blockquote data-v-47325f32><p data-v-47325f32>foo</p>
<p data-v-47325f32>bar</p>
<p data-v-47325f32>baz</p></blockquote></blockquote></blockquote>
<h3 data-v-47325f32>Example 215</h3>
<p data-v-47325f32>When including an indented code block in a block quote, remember that the block quote marker includes both the <code data-v-47325f32>&gt;</code> and a following space. So five spaces are needed after the <code data-v-47325f32>&gt;</code>:</p>

<blockquote data-v-47325f32><pre data-v-47325f32><code data-v-47325f32>code</code></pre></blockquote>
<blockquote data-v-47325f32><p data-v-47325f32>   not code</p></blockquote></article>"
`;

exports[`./__tests__/new/cm_html_blocks.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><h1 data-v-47325f32>HTML blocks</h1>
<h3 data-v-47325f32>Example 116</h3>
<p data-v-47325f32>&lt;table&gt;&lt;tr&gt;&lt;td&gt;
&lt;pre&gt;
<strong data-v-47325f32>Hello</strong>,

</p><p data-v-47325f32><em data-v-47325f32>world</em>.
&lt;/pre&gt;</p>
<p data-v-47325f32>&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

</p><h3 data-v-47325f32>Example 117</h3>
<p data-v-47325f32>&lt;table&gt;
  &lt;tr&gt;
    &lt;td&gt;
           hi
    &lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;

</p><p data-v-47325f32>okay.</p>

<h3 data-v-47325f32>Example 118</h3>
<p data-v-47325f32> &lt;div&gt;
  <em data-v-47325f32>hello</em>
         &lt;foo&gt;&lt;a&gt;

</p><h3 data-v-47325f32>Example 119</h3>
<p data-v-47325f32>&lt;/div&gt;
<em data-v-47325f32>foo</em>

</p><h3 data-v-47325f32>Example 120</h3>
<p data-v-47325f32>&lt;DIV CLASS=&quot;foo&quot;&gt;

</p><p data-v-47325f32><em data-v-47325f32>Markdown</em></p>

<p data-v-47325f32>&lt;/DIV&gt;

</p><h3 data-v-47325f32>Example 121</h3>
<p data-v-47325f32>&lt;div id=&quot;foo&quot;
  class=&quot;bar&quot;&gt;
&lt;/div&gt;

</p><h3 data-v-47325f32>Example 122</h3>
<p data-v-47325f32>&lt;div id=&quot;foo&quot; class=&quot;bar
  baz&quot;&gt;
&lt;/div&gt;

</p><h3 data-v-47325f32>Example 123</h3>
<p data-v-47325f32>&lt;div&gt;
<em data-v-47325f32>foo</em>

</p><p data-v-47325f32><em data-v-47325f32>bar</em></p>

<h3 data-v-47325f32>Example 124</h3>
<p data-v-47325f32>&lt;div id=&quot;foo&quot;
<em data-v-47325f32>hi</em>

</p><h3 data-v-47325f32>Example 125</h3>
<p data-v-47325f32>&lt;div class
foo

</p><h3 data-v-47325f32>Example 126</h3>
<p data-v-47325f32>&lt;div <em data-v-47325f32>???-&amp;&amp;&amp;-&lt;---
*foo</em>

</p><h3 data-v-47325f32>Example 127</h3>
<p data-v-47325f32>&lt;div&gt;&lt;a href=&quot;bar&quot;&gt;<em data-v-47325f32>foo</em>&lt;/a&gt;&lt;/div&gt;

</p><h3 data-v-47325f32>Example 128</h3>
<p data-v-47325f32>&lt;table&gt;&lt;tr&gt;&lt;td&gt;
foo
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

</p><h3 data-v-47325f32>Example 129</h3>
<p data-v-47325f32>&lt;div&gt;&lt;/div&gt;
<code data-v-47325f32>c
int x = 33;</code>

</p><h3 data-v-47325f32>Example 130</h3>
<p data-v-47325f32>&lt;a href=&quot;foo&quot;&gt;
<em data-v-47325f32>bar</em>
&lt;/a&gt;

</p><h3 data-v-47325f32>Example 131</h3>
<p data-v-47325f32>&lt;Warning&gt;
<em data-v-47325f32>bar</em>
&lt;/Warning&gt;

</p><h3 data-v-47325f32>Example 132</h3>
<p data-v-47325f32>&lt;i class=&quot;foo&quot;&gt;
<em data-v-47325f32>bar</em>
&lt;/i&gt;

</p><h3 data-v-47325f32>Example 133</h3>
<p data-v-47325f32>&lt;/ins&gt;
<em data-v-47325f32>bar</em>

</p><h3 data-v-47325f32>Example 134</h3>
<p data-v-47325f32>&lt;del&gt;
<em data-v-47325f32>foo</em>
&lt;/del&gt;

</p><h3 data-v-47325f32>Example 135</h3>
<p data-v-47325f32>&lt;del&gt;

</p><p data-v-47325f32><em data-v-47325f32>foo</em></p>

<p data-v-47325f32>&lt;/del&gt;

</p><h3 data-v-47325f32>Example 136</h3>
<p data-v-47325f32>&lt;del&gt;<em data-v-47325f32>foo</em>&lt;/del&gt;</p>

<h3 data-v-47325f32>Example 137</h3>
<p data-v-47325f32>&lt;pre language=&quot;haskell&quot;&gt;&lt;code&gt;
import Text.HTML.TagSoup

main :: IO ()
main = print $ parseTags tags
&lt;/code&gt;&lt;/pre&gt;
</p><p data-v-47325f32>okay</p>

<h3 data-v-47325f32>Example 138</h3>
<p data-v-47325f32>&lt;script type=&quot;text/javascript&quot;&gt;
// JavaScript example

document.getElementById(&quot;demo&quot;).innerHTML = &quot;Hello JavaScript!&quot;;
&lt;/script&gt;
</p><p data-v-47325f32>okay</p>

<h3 data-v-47325f32>Example 139</h3>
<p data-v-47325f32>&lt;style
  type=&quot;text/css&quot;&gt;
h1 {color:red;}

p {color:blue;}
&lt;/style&gt;
</p><p data-v-47325f32>okay</p>

<h3 data-v-47325f32>Example 141</h3>
<blockquote data-v-47325f32><p data-v-47325f32>&lt;div&gt;
foo</p></blockquote>
<p data-v-47325f32>bar</p>

<h3 data-v-47325f32>Example 142</h3>
<ul data-v-47325f32><li data-v-47325f32><p data-v-47325f32>&lt;div&gt;</p></li><li data-v-47325f32>foo

</li></ul><h3 data-v-47325f32>Example 143</h3>
<p data-v-47325f32>&lt;style&gt;p{color:red;}&lt;/style&gt;
</p><p data-v-47325f32><em data-v-47325f32>foo</em></p>

<h3 data-v-47325f32>Example 144</h3>
<p data-v-47325f32>&lt;!-- foo --&gt;<em data-v-47325f32>bar</em>
</p><p data-v-47325f32><em data-v-47325f32>baz</em></p>

<h3 data-v-47325f32>Example 145</h3>
<p data-v-47325f32>&lt;script&gt;
foo
&lt;/script&gt;1. <em data-v-47325f32>bar</em>

</p><h3 data-v-47325f32>Example 146</h3>
<p data-v-47325f32>&lt;!-- Foo

bar
   baz --&gt;
</p><p data-v-47325f32>okay</p>

<h3 data-v-47325f32>Example 147</h3>
<p data-v-47325f32>&lt;?php

  echo '&gt;';

?&gt;
</p><p data-v-47325f32>okay</p>

<h3 data-v-47325f32>Example 148</h3>
<p data-v-47325f32>&lt;!DOCTYPE html&gt;

</p><h3 data-v-47325f32>Example 149</h3>
<p data-v-47325f32>&lt;![CDATA[
function matchwo(a,b)
{
  if (a &lt; b &amp;&amp; a &lt; 0) then {
    return 1;

  } else {

    return 0;
  }
}
]]&gt;
</p><p data-v-47325f32>okay</p>

<h3 data-v-47325f32>Example 150</h3>
<p data-v-47325f32>  &lt;!-- foo --&gt;

</p><pre data-v-47325f32><code data-v-47325f32>&lt;!-- foo --&gt;

</code></pre><h3 data-v-47325f32>Example 151</h3>
<p data-v-47325f32>  &lt;div&gt;

</p><pre data-v-47325f32><code data-v-47325f32>&lt;div&gt;

</code></pre><h3 data-v-47325f32>Example 152</h3>
<p data-v-47325f32>Foo</p>
<p data-v-47325f32>&lt;div&gt;
bar
&lt;/div&gt;

</p><h3 data-v-47325f32>Example 153</h3>
<p data-v-47325f32>&lt;div&gt;
bar
&lt;/div&gt;
<em data-v-47325f32>foo</em>

</p><h3 data-v-47325f32>Example 154</h3>
<p data-v-47325f32>Foo
&lt;a href=&quot;bar&quot;&gt;
baz</p>

<h3 data-v-47325f32>Example 155</h3>
<p data-v-47325f32>&lt;div&gt;

</p><p data-v-47325f32><em data-v-47325f32>Emphasized</em> text.</p>

<p data-v-47325f32>&lt;/div&gt;

</p><h3 data-v-47325f32>Example 156</h3>
<p data-v-47325f32>&lt;div&gt;
<em data-v-47325f32>Emphasized</em> text.
&lt;/div&gt;

</p><h3 data-v-47325f32>Example 157</h3>
<p data-v-47325f32>&lt;table&gt;

</p><p data-v-47325f32>&lt;tr&gt;

</p><p data-v-47325f32>&lt;td&gt;
Hi
&lt;/td&gt;

</p><p data-v-47325f32>&lt;/tr&gt;

</p><p data-v-47325f32>&lt;/table&gt;

</p><h3 data-v-47325f32>Example 158</h3>
<p data-v-47325f32>&lt;table&gt;

</p><p data-v-47325f32>  &lt;tr&gt;

</p><pre data-v-47325f32><code data-v-47325f32>&lt;td&gt;
  Hi
&lt;/td&gt;

</code></pre><p data-v-47325f32>  &lt;/tr&gt;

</p><p data-v-47325f32>&lt;/table&gt;

</p><h3 data-v-47325f32>Example 140</h3>
<p data-v-47325f32>If there is no matching end tag, the block will end at the end of the document (or the enclosing block quote or list item):</p>

<p data-v-47325f32>&lt;style
  type=&quot;text/css&quot;&gt;

foo</p></article>"
`;

exports[`./__tests__/new/cm_link_defs.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><h3 data-v-47325f32>Example 159</h3>

<p data-v-47325f32><b title=\\"title\\" href=\\"/url\\" chk=\\"confirm\\" data-v-47325f32>foo159</b></p>

<h3 data-v-47325f32>Example 160</h3>

<p data-v-47325f32><b title=\\"the title\\" href=\\"/url\\" chk=\\"confirm\\" data-v-47325f32>foo160</b></p>

<h3 data-v-47325f32>Example 161</h3>

<p data-v-47325f32><b title=\\"title (with parens)\\" href=\\"my_(url)\\" chk=\\"confirm\\" data-v-47325f32>Foo161*bar]</b></p>

<h3 data-v-47325f32>Example 162</h3>

<p data-v-47325f32><b title=\\"title\\" href=\\"my%20url\\" chk=\\"confirm\\" data-v-47325f32>Foo162 bar</b></p>

<h3 data-v-47325f32>Example 163</h3>

<p data-v-47325f32><b title=\\"
title
line1
line2
\\" href=\\"/url\\" chk=\\"confirm\\" data-v-47325f32>foo163</b></p>

<h3 data-v-47325f32>Example 164</h3>
<p data-v-47325f32>[foo164]: /url 'title</p>

<p data-v-47325f32>with blank line'</p>

<p data-v-47325f32>[foo164]</p>

<h3 data-v-47325f32>Example 165</h3>

<p data-v-47325f32><b title=\\"
url\\" href=\\"/url\\" chk=\\"confirm\\" data-v-47325f32>foo165</b></p>

<h3 data-v-47325f32>Example 166</h3>
<p data-v-47325f32>[foo166]:</p>

<p data-v-47325f32>[foo166]</p>

<h3 data-v-47325f32>Example 167</h3>
<pre data-v-47325f32><code data-v-47325f32>[foo167]: /url\\\\bar\\\\*baz &quot;foo\\\\&quot;bar\\\\baz&quot;

[foo167]

should render to

&lt;p&gt;&lt;a href=&quot;/url%5Cbar*baz&quot; title=&quot;foo&amp;quot;bar\\\\baz&quot;&gt;foo167&lt;/a&gt;&lt;/p&gt;

</code></pre><h3 data-v-47325f32>Example 168</h3>
<p data-v-47325f32><b title=\\"url
\\" href=\\"url\\" chk=\\"confirm\\" data-v-47325f32>foo168</b></p>


<h3 data-v-47325f32>Example 169</h3>
<p data-v-47325f32><b title=\\"first
\\" href=\\"first\\" chk=\\"confirm\\" data-v-47325f32>foo169</b></p>


<h3 data-v-47325f32>Example 170</h3>

<p data-v-47325f32><b title=\\"
url\\" href=\\"/url\\" chk=\\"confirm\\" data-v-47325f32>Foo170</b></p>

<h3 data-v-47325f32>Example 171</h3>

<p data-v-47325f32><b title=\\"
φου\\" href=\\"/φου\\" chk=\\"confirm\\" data-v-47325f32>αγω</b></p>

<h3 data-v-47325f32>Example 172</h3>

<h3 data-v-47325f32>Example 173</h3>
<p data-v-47325f32>bar</p>

<h3 data-v-47325f32>Example 174</h3>
<p data-v-47325f32>[foo174]: /url &quot;title&quot; ok</p>

<h3 data-v-47325f32>Example 175</h3>
<p data-v-47325f32>&quot;title&quot; ok</p>

<h3 data-v-47325f32>Example 176</h3>
<pre data-v-47325f32><code data-v-47325f32>[foo176]: /url &quot;title&quot;

</code></pre><p data-v-47325f32>[foo176]</p>

<h3 data-v-47325f32>Example 177</h3>
<pre data-v-47325f32><code data-v-47325f32>[foo177]: /url</code></pre>
<p data-v-47325f32>[foo177]</p>

<h3 data-v-47325f32>Example 178</h3>
<p data-v-47325f32>Foo
[bar178]: /baz</p>

<p data-v-47325f32>[bar178]</p>

<h3 data-v-47325f32>Example 179</h3>
<h1 data-v-47325f32><b title=\\"
url\\" href=\\"/url\\" chk=\\"confirm\\" data-v-47325f32>Foo179</b></h1><blockquote data-v-47325f32><p data-v-47325f32>bar</p></blockquote>
<h3 data-v-47325f32>Example 180</h3>

<p data-v-47325f32><b title=\\"foo\\" href=\\"/foo-url\\" chk=\\"confirm\\" data-v-47325f32>foo180</b>,
<b title=\\"bar\\" href=\\"/bar-url\\" chk=\\"confirm\\" data-v-47325f32>bar180</b>,
<b title=\\"
baz-url\\" href=\\"/baz-url\\" chk=\\"confirm\\" data-v-47325f32>baz180</b></p>

<h3 data-v-47325f32>Example 181</h3>
<p data-v-47325f32>[foo181]</p>

<blockquote data-v-47325f32><p data-v-47325f32>[foo181]: /url</p></blockquote></article>"
`;

exports[`./__tests__/new/cm_links.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><h2 data-v-47325f32>xhtml: true</h2>
<h1 data-v-47325f32>Links</h1>
<h3 data-v-47325f32>Example 459</h3>
<p data-v-47325f32><b title=\\"title\\" href=\\"/uri\\" chk=\\"confirm\\" data-v-47325f32>link</b></p>

<h3 data-v-47325f32>Example 460</h3>
<p data-v-47325f32><b title=\\"
uri\\" href=\\"/uri\\" chk=\\"confirm\\" data-v-47325f32>link</b></p>

<h3 data-v-47325f32>Example 461</h3>
<p data-v-47325f32><q title=\\"
\\" data-v-47325f32>link</q></p>

<h3 data-v-47325f32>Example 462</h3>
<p data-v-47325f32><q title=\\"
\\" data-v-47325f32>link</q></p>

<h3 data-v-47325f32>Example 463</h3>
<p data-v-47325f32>[link](/my uri)</p>

<h3 data-v-47325f32>Example 464</h3>
<p data-v-47325f32>[link](&lt;/my uri&gt;)</p>

<h3 data-v-47325f32>Example 465</h3>
<p data-v-47325f32>[link](foo
bar)</p>

<h3 data-v-47325f32>Example 466</h3>
<p data-v-47325f32>[link](&lt;foo
bar&gt;)</p>

<h3 data-v-47325f32>Example 467</h3>
<p data-v-47325f32><b title=\\"(foo)
\\" href=\\"(foo)\\" chk=\\"confirm\\" data-v-47325f32>link</b></p>

<h3 data-v-47325f32>Example 4680</h3>
<p data-v-47325f32>ONE LEVEL of parentheses are allowed without escaping, as long as they are balanced:</p>

<p data-v-47325f32><b title=\\"foo(bar)
\\" href=\\"foo(bar)\\" chk=\\"confirm\\" data-v-47325f32>link</b></p>

<h3 data-v-47325f32>Example 469</h3>
<p data-v-47325f32><b title=\\"foo(and(bar)
\\" href=\\"foo(and(bar)\\" chk=\\"confirm\\" data-v-47325f32>link</b></p>

<h3 data-v-47325f32>Example 470</h3>
<p data-v-47325f32>However, if you have ANY unbalanced parentheses, you need to escape or use the &lt;...&gt; form:</p>

<p data-v-47325f32><b title=\\"foo(and(bar)
\\" href=\\"foo(and(bar)\\" chk=\\"confirm\\" data-v-47325f32>link</b></p>

<h3 data-v-47325f32>Example 471</h3>
<p data-v-47325f32><b title=\\"foo):
\\" href=\\"foo):\\" chk=\\"confirm\\" data-v-47325f32>link</b></p>

<h3 data-v-47325f32>Example 472</h3>
<p data-v-47325f32><b title=\\"
fragment\\" href=\\"#fragment\\" chk=\\"confirm\\" data-v-47325f32>link</b></p>

<p data-v-47325f32><b title=\\"http
example.com\\" href=\\"http://example.com#fragment\\" chk=\\"confirm\\" data-v-47325f32>link</b></p>

<p data-v-47325f32><b title=\\"http
example.com\\" href=\\"http://example.com?foo=3#frag\\" chk=\\"confirm\\" data-v-47325f32>link</b></p>

<h3 data-v-47325f32>Example 473</h3>
<p data-v-47325f32><b title=\\"foo\\\\bar
\\" href=\\"foo\\\\bar\\" chk=\\"confirm\\" data-v-47325f32>link</b></p>

<h3 data-v-47325f32>Example 4740</h3>
<p data-v-47325f32><b title=\\"foo%20b&amp;auml;
\\" href=\\"foo%20b&amp;auml;\\" chk=\\"confirm\\" data-v-47325f32>link</b></p>

<h3 data-v-47325f32>Example 475</h3>
<p data-v-47325f32><b title=\\"&quot;title&quot;
\\" href=\\"&quot;title&quot;\\" chk=\\"confirm\\" data-v-47325f32>link</b></p>

<h3 data-v-47325f32>Example 476</h3>
<p data-v-47325f32><b title=\\"title\\" href=\\"/url\\" chk=\\"confirm\\" data-v-47325f32>link</b>
<b title=\\"title\\" href=\\"/url\\" chk=\\"confirm\\" data-v-47325f32>link</b>
<b title=\\"title\\" href=\\"/url\\" chk=\\"confirm\\" data-v-47325f32>link</b></p>

<h3 data-v-47325f32>Example 477</h3>
<p data-v-47325f32><b title=\\"title &quot;&amp;quot;\\" href=\\"/url\\" chk=\\"confirm\\" data-v-47325f32>link</b></p>

<h3 data-v-47325f32>Example 479</h3>
<p data-v-47325f32>[link](/url &quot;title &quot;and&quot; title&quot;)</p>

<h3 data-v-47325f32>Example 480</h3>
<p data-v-47325f32><b title=\\"title &quot;and&quot; title\\" href=\\"/url\\" chk=\\"confirm\\" data-v-47325f32>link</b></p>

<h3 data-v-47325f32>Example 481</h3>
<p data-v-47325f32><b title=\\"title\\" href=\\"/uri\\" chk=\\"confirm\\" data-v-47325f32>link</b></p>

<h3 data-v-47325f32>Example 482</h3>
<p data-v-47325f32>[link] (/uri)</p>

<h3 data-v-47325f32>Example 4830</h3>
<p data-v-47325f32>The link text may contain ONE LEVEL of balanced brackets, but not unbalanced ones, unless they are escaped:</p>

<p data-v-47325f32><b title=\\"
uri\\" href=\\"/uri\\" chk=\\"confirm\\" data-v-47325f32>link [foo4830]</b></p>

<h3 data-v-47325f32>Example 484</h3>
<p data-v-47325f32>[link] bar](/uri)</p>

<h3 data-v-47325f32>Example 485</h3>
<p data-v-47325f32>[link <b title=\\"
uri\\" href=\\"/uri\\" chk=\\"confirm\\" data-v-47325f32>bar</b></p>

<h3 data-v-47325f32>Example 486</h3>
<p data-v-47325f32><b title=\\"
uri\\" href=\\"/uri\\" chk=\\"confirm\\" data-v-47325f32>link [bar</b></p>

<h3 data-v-47325f32>Example 487</h3>
<p data-v-47325f32><b title=\\"
uri\\" href=\\"/uri\\" chk=\\"confirm\\" data-v-47325f32>link <em data-v-47325f32>foo <strong data-v-47325f32>bar</strong> <code data-v-47325f32>#</code></em></b></p>

<h3 data-v-47325f32>Example 488</h3>
<p data-v-47325f32><b title=\\"
uri\\" href=\\"/uri\\" chk=\\"confirm\\" data-v-47325f32><img src=\\"moon.jpg\\" alt=\\"moon\\" data-v-47325f32></b></p>

<h3 data-v-47325f32>Example 493</h3>
<p data-v-47325f32><b title=\\"baz*
\\" href=\\"baz*\\" chk=\\"confirm\\" data-v-47325f32>foo *bar</b></p>

<h3 data-v-47325f32>Example 494</h3>
<p data-v-47325f32><em data-v-47325f32>foo [bar</em> baz]</p>

<h3 data-v-47325f32>Example 498</h3>
<p data-v-47325f32><b title=\\"title\\" href=\\"/url\\" chk=\\"confirm\\" data-v-47325f32>foo</b></p>


<h3 data-v-47325f32>Example 4990</h3>
<p data-v-47325f32><b title=\\"
uri\\" href=\\"/uri\\" chk=\\"confirm\\" data-v-47325f32>link [foo499]</b></p>


<h3 data-v-47325f32>Example 500</h3>
<p data-v-47325f32><b title=\\"
uri\\" href=\\"/uri\\" chk=\\"confirm\\" data-v-47325f32>link [bar</b></p>


<h3 data-v-47325f32>Example 501</h3>
<p data-v-47325f32><b title=\\"
uri\\" href=\\"/uri\\" chk=\\"confirm\\" data-v-47325f32>link <em data-v-47325f32>foo <strong data-v-47325f32>bar</strong> <code data-v-47325f32>#</code></em></b></p>


<h3 data-v-47325f32>Example 502</h3>
<p data-v-47325f32><b title=\\"
uri\\" href=\\"/uri\\" chk=\\"confirm\\" data-v-47325f32><img src=\\"moon.jpg\\" alt=\\"moon\\" data-v-47325f32></b></p>


<h3 data-v-47325f32>Example 5030</h3>
<p data-v-47325f32><b title=\\"
uri\\" href=\\"/uri\\" chk=\\"confirm\\" data-v-47325f32>foo <b title=\\"
uri\\" href=\\"/uri\\" chk=\\"confirm\\" data-v-47325f32>bar</b></b></p>


<h3 data-v-47325f32>Example 504</h3>
<p data-v-47325f32><b title=\\"
uri\\" href=\\"/uri\\" chk=\\"confirm\\" data-v-47325f32>foo <em data-v-47325f32>bar <b title=\\"
uri\\" href=\\"/uri\\" chk=\\"confirm\\" data-v-47325f32>baz</b></em></b></p>


<h3 data-v-47325f32>Example 506</h3>
<p data-v-47325f32><b title=\\"
uri\\" href=\\"/uri\\" chk=\\"confirm\\" data-v-47325f32>foo *bar</b></p>


<h3 data-v-47325f32>Example 510</h3>
<p data-v-47325f32><b title=\\"title\\" href=\\"/url\\" chk=\\"confirm\\" data-v-47325f32>foo</b></p>


<h3 data-v-47325f32>Example 511</h3>
<p data-v-47325f32><b title=\\"
url\\" href=\\"/url\\" chk=\\"confirm\\" data-v-47325f32>Толпой</b> is a Russian word.</p>


<h3 data-v-47325f32>Example 512</h3>

<p data-v-47325f32>[Baz][Foo bar]</p>

<h3 data-v-47325f32>Example 513</h3>
<p data-v-47325f32>[foo513] <b title=\\"title\\" href=\\"/url\\" chk=\\"confirm\\" data-v-47325f32>bar513</b></p>


<h3 data-v-47325f32>Example 514</h3>
<p data-v-47325f32>[foo514]
<b title=\\"title\\" href=\\"/url\\" chk=\\"confirm\\" data-v-47325f32>bar514</b></p>


<h3 data-v-47325f32>Example 515</h3>


<p data-v-47325f32><b title=\\"
url1\\" href=\\"/url1\\" chk=\\"confirm\\" data-v-47325f32>bar</b></p>

<h3 data-v-47325f32>Example 516</h3>
<p data-v-47325f32>[bar][foo!516]</p>


<h3 data-v-47325f32>Example 517</h3>
<p data-v-47325f32>[foo517][ref[517]</p>

<p data-v-47325f32>[ref[517]: /uri</p>

<h3 data-v-47325f32>Example 518</h3>
<p data-v-47325f32>[foo518][ref[bar518]518]</p>

<p data-v-47325f32>[ref[bar518]518]: /uri</p>

<h3 data-v-47325f32>Example 519</h3>
<p data-v-47325f32><kbd data-v-47325f32>[foo519]</kbd></p>

<p data-v-47325f32><kbd data-v-47325f32>[foo519]</kbd>: /url</p>

<h3 data-v-47325f32>Example 520</h3>
<p data-v-47325f32><b title=\\"
uri\\" href=\\"/uri\\" chk=\\"confirm\\" data-v-47325f32>foo</b></p>


<h3 data-v-47325f32>Example 521</h3>

<p data-v-47325f32><b title=\\"
uri\\" href=\\"/uri\\" chk=\\"confirm\\" data-v-47325f32>bar\\\\</b></p>

<h3 data-v-47325f32>Example 522</h3>
<p data-v-47325f32>[]</p>

<p data-v-47325f32>[]: /uri</p>

<h3 data-v-47325f32>Example 523</h3>
<p data-v-47325f32>[
 ]</p>

<p data-v-47325f32>[
 ]: /uri</p>

<h3 data-v-47325f32>Example 524</h3>
<p data-v-47325f32><b title=\\"title\\" href=\\"/url\\" chk=\\"confirm\\" data-v-47325f32>foo</b></p>


<h3 data-v-47325f32>Example 525</h3>
<p data-v-47325f32><b title=\\"title\\" href=\\"/url\\" chk=\\"confirm\\" data-v-47325f32><em data-v-47325f32>foo</em> bar</b></p>


<h3 data-v-47325f32>Example 526</h3>
<p data-v-47325f32><b title=\\"title\\" href=\\"/url\\" chk=\\"confirm\\" data-v-47325f32>Foo</b></p>


<h3 data-v-47325f32>Example 527</h3>
<p data-v-47325f32><b title=\\"title\\" href=\\"/url\\" chk=\\"confirm\\" data-v-47325f32>foo</b>
[]</p>


<h3 data-v-47325f32>Example 528</h3>
<p data-v-47325f32><b title=\\"title\\" href=\\"/url\\" chk=\\"confirm\\" data-v-47325f32>foo</b></p>


<h3 data-v-47325f32>Example 529</h3>
<p data-v-47325f32><b title=\\"title\\" href=\\"/url\\" chk=\\"confirm\\" data-v-47325f32><em data-v-47325f32>foo</em> bar</b></p>


<h3 data-v-47325f32>Example 530</h3>
<p data-v-47325f32><kbd data-v-47325f32><em data-v-47325f32>foo</em> bar</kbd></p>


<h3 data-v-47325f32>Example 531</h3>
<p data-v-47325f32>[[bar <b title=\\"
url\\" href=\\"/url\\" chk=\\"confirm\\" data-v-47325f32>foo531</b></p>


<h3 data-v-47325f32>Example 532</h3>
<p data-v-47325f32><b title=\\"title\\" href=\\"/url\\" chk=\\"confirm\\" data-v-47325f32>Foo</b></p>


<h3 data-v-47325f32>Example 533</h3>
<p data-v-47325f32><b title=\\"
url\\" href=\\"/url\\" chk=\\"confirm\\" data-v-47325f32>foo533</b> bar</p>


<h3 data-v-47325f32>Example 534</h3>
<p data-v-47325f32>[foo]</p>


<h3 data-v-47325f32>Example 536</h3>
<p data-v-47325f32><b title=\\"
url2\\" href=\\"/url2\\" chk=\\"confirm\\" data-v-47325f32>foo536</b></p>


<h3 data-v-47325f32>Example 537</h3>
<p data-v-47325f32><b title=\\"
url1\\" href=\\"/url1\\" chk=\\"confirm\\" data-v-47325f32>foo537</b></p>


<h3 data-v-47325f32>Example 538</h3>
<p data-v-47325f32><q title=\\"
\\" data-v-47325f32>foo538</q></p>


<h3 data-v-47325f32>Example 539</h3>
<p data-v-47325f32><b title=\\"
url1\\" href=\\"/url1\\" chk=\\"confirm\\" data-v-47325f32>foo539</b>(not a link)</p>


<h3 data-v-47325f32>Example 540</h3>
<p data-v-47325f32>[foo540]<b title=\\"
url\\" href=\\"/url\\" chk=\\"confirm\\" data-v-47325f32>bar540</b></p>


<h3 data-v-47325f32>Example 541</h3>
<p data-v-47325f32><b title=\\"
url2\\" href=\\"/url2\\" chk=\\"confirm\\" data-v-47325f32>foo541</b><b title=\\"
url1\\" href=\\"/url1\\" chk=\\"confirm\\" data-v-47325f32>baz541</b></p>


<h3 data-v-47325f32>Example 542</h3>
<p data-v-47325f32>[foo542]<b title=\\"
url1\\" href=\\"/url1\\" chk=\\"confirm\\" data-v-47325f32>bar542</b></p>


<h3 data-v-47325f32>Example 543</h3>
<p data-v-47325f32><img src=\\"/url\\" alt=\\"foo543\\" title=\\"title\\" data-v-47325f32></p>

<h3 data-v-47325f32>Example 5440</h3>
<p data-v-47325f32><img src=\\"train.jpg\\" alt=\\"foo ,[object Object],544\\" title=\\"train &amp; tracks\\" data-v-47325f32></p>


<h3 data-v-47325f32>Example 5450</h3>
<p data-v-47325f32><img src=\\"/url2\\" alt=\\"foo ![bar](/url)\\" data-v-47325f32></p>

<h3 data-v-47325f32>Example 5460</h3>
<p data-v-47325f32><img src=\\"/url2\\" alt=\\"foo [bar](/url)\\" data-v-47325f32></p>

<h3 data-v-47325f32>Example 5470</h3>
<p data-v-47325f32><img src=\\"train.jpg\\" alt=\\"foo ,[object Object],547\\" title=\\"train &amp; tracks\\" data-v-47325f32></p>


<h3 data-v-47325f32>Example 5480</h3>
<p data-v-47325f32><img src=\\"train.jpg\\" alt=\\"foo ,[object Object]\\" title=\\"train &amp; tracks\\" data-v-47325f32></p>


<h3 data-v-47325f32>Example 549</h3>
<p data-v-47325f32><img src=\\"train.jpg\\" alt=\\"foo\\" data-v-47325f32></p>

<h3 data-v-47325f32>Example 550</h3>
<p data-v-47325f32>My <img src=\\"/path/to/train.jpg\\" alt=\\"foo bar\\" title=\\"title\\" data-v-47325f32></p>

<h3 data-v-47325f32>Example 551</h3>
<p data-v-47325f32><img src=\\"url\\" alt=\\"foo\\" data-v-47325f32></p>

<h3 data-v-47325f32>Example 552</h3>
<p data-v-47325f32><img src=\\"/url\\" alt=\\"\\" data-v-47325f32></p>

<h3 data-v-47325f32>Example 553</h3>
<p data-v-47325f32><img src=\\"/url\\" alt=\\"foo\\" data-v-47325f32></p>


<h3 data-v-47325f32>Example 554</h3>
<p data-v-47325f32><img src=\\"/url\\" alt=\\"foo\\" data-v-47325f32></p>


<h3 data-v-47325f32>Example 555</h3>
<p data-v-47325f32><img src=\\"/url\\" alt=\\"foo\\" title=\\"title\\" data-v-47325f32></p>


<h3 data-v-47325f32>Example 5560</h3>
<p data-v-47325f32><img src=\\"/url\\" alt=\\"[object Object], bar\\" title=\\"title\\" data-v-47325f32></p>


<h3 data-v-47325f32>Example 557</h3>
<p data-v-47325f32><img src=\\"/url\\" alt=\\"Foo\\" title=\\"title\\" data-v-47325f32></p>


<h3 data-v-47325f32>Example 558</h3>
<p data-v-47325f32><img src=\\"/url\\" alt=\\"foo\\" title=\\"title\\" data-v-47325f32>
[]</p>


<h3 data-v-47325f32>Example 559</h3>
<p data-v-47325f32><img src=\\"/url\\" alt=\\"foo\\" title=\\"title\\" data-v-47325f32></p>


<h3 data-v-47325f32>Example 5600</h3>
<p data-v-47325f32><img src=\\"/url\\" alt=\\"[object Object], bar\\" title=\\"title\\" data-v-47325f32></p>


<h3 data-v-47325f32>Example 561</h3>
<p data-v-47325f32>!<kbd data-v-47325f32>foo561</kbd></p>

<p data-v-47325f32><kbd data-v-47325f32>foo561</kbd>: /url &quot;title&quot;</p>

<h3 data-v-47325f32>Example 562</h3>
<p data-v-47325f32><img src=\\"/url\\" alt=\\"Foo\\" title=\\"title\\" data-v-47325f32></p>


<h3 data-v-47325f32>Example 563</h3>
<p data-v-47325f32>![foo]</p>


<h3 data-v-47325f32>Example 564</h3>
<p data-v-47325f32>!<b title=\\"title\\" href=\\"/url\\" chk=\\"confirm\\" data-v-47325f32>foo</b></p>


</article>"
`;

exports[`./__tests__/new/cm_raw_html.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><h1 data-v-47325f32>Raw HTML</h1>
<h3 data-v-47325f32>Example 584</h3>
<p data-v-47325f32>&lt;a&gt;&lt;bab&gt;&lt;c2c&gt;</p>

<h3 data-v-47325f32>Example 585</h3>
<p data-v-47325f32>&lt;a/&gt;&lt;b2/&gt;</p>

<h3 data-v-47325f32>Example 586</h3>
<p data-v-47325f32>&lt;a  /&gt;&lt;b2
data=&quot;foo&quot; &gt;</p>

<h3 data-v-47325f32>Example 587</h3>
<p data-v-47325f32>&lt;a foo=&quot;bar&quot; bam = 'baz &lt;em&gt;&quot;&lt;/em&gt;'
_boolean zoop:33=zoop:33 /&gt;</p>

<h3 data-v-47325f32>Example 588</h3>
<p data-v-47325f32>Foo &lt;responsive-image src=&quot;foo.jpg&quot; /&gt;</p>

<h3 data-v-47325f32>Example 589</h3>
<p data-v-47325f32>&lt;33&gt; &lt;__&gt;</p>

<h3 data-v-47325f32>Example 590</h3>
<p data-v-47325f32>&lt;a h*#ref=&quot;hi&quot;&gt;</p>

<h3 data-v-47325f32>Example 591</h3>
<p data-v-47325f32>&lt;a href=&quot;hi'&gt; &lt;a href=hi'&gt;</p>

<h3 data-v-47325f32>Example 592</h3>
<p data-v-47325f32>&lt; a&gt;&lt;
foo&gt;&lt;bar/ &gt;</p>

<h3 data-v-47325f32>Example 593</h3>
<p data-v-47325f32>&lt;a href='bar'title=title&gt;</p>

<h3 data-v-47325f32>Example 594</h3>
<p data-v-47325f32>&lt;/a&gt;&lt;/foo &gt;</p>

<h3 data-v-47325f32>Example 595</h3>
<p data-v-47325f32>&lt;/a href=&quot;foo&quot;&gt;</p>

<h3 data-v-47325f32>Example 596</h3>
<p data-v-47325f32>foo &lt;!-- this is a
comment - with hyphen --&gt;</p>

<h3 data-v-47325f32>Example 599</h3>
<p data-v-47325f32>foo &lt;?php echo $a; ?&gt;</p>

<h3 data-v-47325f32>Example 600</h3>
<p data-v-47325f32>foo &lt;!ELEMENT br EMPTY&gt;</p>

<h3 data-v-47325f32>Example 601</h3>
<p data-v-47325f32>foo &lt;![CDATA[&gt;&amp;&lt;]]&gt;</p>

<h3 data-v-47325f32>Example 602</h3>
<p data-v-47325f32>foo &lt;a href=&quot;&amp;ouml;&quot;&gt;</p>

<h3 data-v-47325f32>Example 603</h3>
<p data-v-47325f32>foo &lt;a href=&quot;\\\\*&quot;&gt;</p>
</article>"
`;

exports[`./__tests__/new/cm_thematic_breaks.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><h1 data-v-47325f32>Thematic breaks</h1>
<h3 data-v-47325f32>Example 13</h3>
<hr data-v-47325f32><hr data-v-47325f32><hr data-v-47325f32>
<h3 data-v-47325f32>Example 14</h3>
<p data-v-47325f32>+++</p>

<h3 data-v-47325f32>Example 15</h3>
<p data-v-47325f32>===</p>

<h3 data-v-47325f32>Example 16</h3>
<p data-v-47325f32>--
**
__</p>

<h3 data-v-47325f32>Example 17</h3>
<hr data-v-47325f32><hr data-v-47325f32><hr data-v-47325f32>
<h3 data-v-47325f32>Example 18</h3>
<pre data-v-47325f32><code data-v-47325f32>***

</code></pre><h3 data-v-47325f32>Example 19</h3>
<p data-v-47325f32>Foo
    ***</p>

<h3 data-v-47325f32>Example 20</h3>
<hr data-v-47325f32>
<h3 data-v-47325f32>Example 21</h3>
<hr data-v-47325f32>
<h3 data-v-47325f32>Example 22</h3>
<hr data-v-47325f32>
<h3 data-v-47325f32>Example 23</h3>
<hr data-v-47325f32>
<h3 data-v-47325f32>Example 24</h3>
<hr data-v-47325f32>
<h3 data-v-47325f32>Example 25</h3>
<p data-v-47325f32>_ _ _ _ a</p>

<p data-v-47325f32>a------</p>

<p data-v-47325f32>-<s data-v-47325f32>a-</s></p>

<h3 data-v-47325f32>Example 26</h3>
<p data-v-47325f32> <em data-v-47325f32>-</em></p>

<h3 data-v-47325f32>Example 27</h3>
<ul data-v-47325f32><li data-v-47325f32>foo
</li></ul><hr data-v-47325f32><ul data-v-47325f32><li data-v-47325f32>bar

</li></ul><h3 data-v-47325f32>Example 28</h3>
<p data-v-47325f32>Foo</p>
<hr data-v-47325f32><p data-v-47325f32>bar</p>

<h3 data-v-47325f32>Example 29</h3>
<h2 data-v-47325f32>Foo</h2><p data-v-47325f32>bar</p>

<h3 data-v-47325f32>Example 30</h3>
<ul data-v-47325f32><li data-v-47325f32>Foo
</li></ul><hr data-v-47325f32><ul data-v-47325f32><li data-v-47325f32>Bar

</li></ul><h3 data-v-47325f32>Example 31</h3>
<ul data-v-47325f32><li data-v-47325f32>Foo</li><li data-v-47325f32><hr data-v-47325f32></li></ul></article>"
`;

exports[`./__tests__/new/def_blocks.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><blockquote data-v-47325f32><p data-v-47325f32>hello</p>
<p data-v-47325f32>[1]: hello</p></blockquote>
<hr data-v-47325f32>
<blockquote data-v-47325f32><p data-v-47325f32>hello</p>
<p data-v-47325f32>[2]: hello</p></blockquote>

<ul data-v-47325f32><li data-v-47325f32>hello</li><li data-v-47325f32>[3]: hello


</li></ul><ul data-v-47325f32><li data-v-47325f32>hello
</li></ul>

<blockquote data-v-47325f32><p data-v-47325f32>foo</p>
<p data-v-47325f32>bar</p>
<p data-v-47325f32>[5]: foo</p>
<p data-v-47325f32>bar</p></blockquote></article>"
`;

exports[`./__tests__/new/double_link.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><p data-v-47325f32>&lt;p&gt;Already linked: &lt;a href=&quot;http://example.com/&quot;&gt;http://example.com/&lt;/a&gt;.&lt;/p&gt;

</p><p data-v-47325f32>Already linked: <b title=\\"http
example.com\\" href=\\"http://example.com/\\" chk=\\"confirm\\" data-v-47325f32>http://example.com/</b>.</p>

<p data-v-47325f32>Already linked: &lt;a href=&quot;http://example.com/&quot;&gt;<strong data-v-47325f32>http://example.com/</strong>&lt;/a&gt;.</p>
</article>"
`;

exports[`./__tests__/new/em_2char.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><p data-v-47325f32><em data-v-47325f32>123</em></p>

<p data-v-47325f32><em data-v-47325f32>123</em></p>

<p data-v-47325f32><em data-v-47325f32>12</em></p>

<p data-v-47325f32><em data-v-47325f32>12</em></p>

<p data-v-47325f32><em data-v-47325f32>1</em></p>

<p data-v-47325f32><em data-v-47325f32>1</em></p>

<p data-v-47325f32>__</p>

<p data-v-47325f32>**</p>

<p data-v-47325f32>_123 _</p>

<p data-v-47325f32>*123 *</p>

<p data-v-47325f32>_ 123_</p>

<p data-v-47325f32><em data-v-47325f32>1_</em></p>

<p data-v-47325f32><em data-v-47325f32>1*</em></p>
</article>"
`;

exports[`./__tests__/new/escaped_angles.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><p data-v-47325f32>&gt;</p>
</article>"
`;

exports[`./__tests__/new/gfm_autolinks.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><p data-v-47325f32>link with . <b title=\\"http
example.com\\" href=\\"http://example.com/hello-world\\" chk=\\"confirm\\" data-v-47325f32>http://example.com/hello-world</b>.</p>

<p data-v-47325f32>link with ! <b title=\\"http
example.com\\" href=\\"http://example.com/hello-world\\" chk=\\"confirm\\" data-v-47325f32>http://example.com/hello-world</b>!</p>

<p data-v-47325f32>link with : <b title=\\"http
example.com\\" href=\\"http://example.com/hello-world\\" chk=\\"confirm\\" data-v-47325f32>http://example.com/hello-world</b>:</p>

<p data-v-47325f32>link with , <b title=\\"http
example.com\\" href=\\"http://example.com/hello-world\\" chk=\\"confirm\\" data-v-47325f32>http://example.com/hello-world</b>,</p>

<p data-v-47325f32>link with ; <b title=\\"http
example.com\\" href=\\"http://example.com/hello-world\\" chk=\\"confirm\\" data-v-47325f32>http://example.com/hello-world</b>;</p>

<p data-v-47325f32>link with ) <b title=\\"http
example.com\\" href=\\"http://example.com/hello-world\\" chk=\\"confirm\\" data-v-47325f32>http://example.com/hello-world</b>)</p>

<p data-v-47325f32>link with nothing <b title=\\"http
example.com\\" href=\\"http://example.com/hello-world\\" chk=\\"confirm\\" data-v-47325f32>http://example.com/hello-world</b></p>

<h3 data-v-47325f32>Example 597</h3>
<p data-v-47325f32>The scheme http will be inserted automatically:</p>

<p data-v-47325f32><b title=\\"http
www.commonmark.org\\" href=\\"http://www.commonmark.org\\" chk=\\"confirm\\" data-v-47325f32>www.commonmark.org</b></p>

<h3 data-v-47325f32>Example 598</h3>
<p data-v-47325f32>After a valid domain, zero or more non-space non-&lt; characters may follow:</p>

<p data-v-47325f32>Visit <b title=\\"http
www.commonmark.org\\" href=\\"http://www.commonmark.org/help\\" chk=\\"confirm\\" data-v-47325f32>www.commonmark.org/help</b> for more information.</p>

<h3 data-v-47325f32>Example 599</h3>
<p data-v-47325f32>Trailing punctuation (specifically, ?, !, ., ,, :, *, _, and ~) will not be considered part of the autolink, though they may be included in the interior of the link:</p>

<p data-v-47325f32>Visit <b title=\\"http
www.commonmark.org\\" href=\\"http://www.commonmark.org\\" chk=\\"confirm\\" data-v-47325f32>www.commonmark.org</b>.</p>

<p data-v-47325f32>Visit <b title=\\"http
www.commonmark.org\\" href=\\"http://www.commonmark.org/a.b\\" chk=\\"confirm\\" data-v-47325f32>www.commonmark.org/a.b</b>.</p>

<h3 data-v-47325f32>Example 600</h3>
<p data-v-47325f32><b title=\\"http
www.google.com\\" href=\\"http://www.google.com/search?q=Markup+(business)\\" chk=\\"confirm\\" data-v-47325f32>www.google.com/search?q=Markup+(business)</b></p>

<p data-v-47325f32>(<b title=\\"http
www.google.com\\" href=\\"http://www.google.com/search?q=Markup+(business)\\" chk=\\"confirm\\" data-v-47325f32>www.google.com/search?q=Markup+(business)</b>)</p>

<h3 data-v-47325f32>Example 601</h3>
<p data-v-47325f32><b title=\\"http
www.google.com\\" href=\\"http://www.google.com/search?q=(business))+ok\\" chk=\\"confirm\\" data-v-47325f32>www.google.com/search?q=(business))+ok</b></p>

<h3 data-v-47325f32>Example 602</h3>
<p data-v-47325f32><b title=\\"http
www.google.com\\" href=\\"http://www.google.com/search?q=commonmark&amp;hl=en\\" chk=\\"confirm\\" data-v-47325f32>www.google.com/search?q=commonmark&amp;hl=en</b></p>

<p data-v-47325f32><b title=\\"http
www.google.com\\" href=\\"http://www.google.com/search?q=commonmark\\" chk=\\"confirm\\" data-v-47325f32>www.google.com/search?q=commonmark</b>&amp;amp;</p>

<h3 data-v-47325f32>Example 603</h3>
<p data-v-47325f32>&lt; immediately ends an autolink.</p>

<p data-v-47325f32><b title=\\"http
www.commonmark.org\\" href=\\"http://www.commonmark.org/he\\" chk=\\"confirm\\" data-v-47325f32>www.commonmark.org/he</b>&lt;lp</p>

<h3 data-v-47325f32>Example 604</h3>
<p data-v-47325f32><b title=\\"http
commonmark.org\\" href=\\"http://commonmark.org\\" chk=\\"confirm\\" data-v-47325f32>http://commonmark.org</b></p>

<p data-v-47325f32>(Visit <b title=\\"https
encrypted.google.com\\" href=\\"https://encrypted.google.com/search?q=Markup+(business)\\" chk=\\"confirm\\" data-v-47325f32>https://encrypted.google.com/search?q=Markup+(business)</b>)</p>

<p data-v-47325f32>Anonymous FTP is available at <b title=\\"ftp
foo.bar.baz\\" href=\\"ftp://foo.bar.baz\\" chk=\\"confirm\\" data-v-47325f32>ftp://foo.bar.baz</b>.</p>

<p data-v-47325f32>Extended email autolinks:</p>

<h3 data-v-47325f32>Example 605</h3>
<p data-v-47325f32><b title=\\"mailto:foo@bar.baz
\\" href=\\"mailto:foo@bar.baz\\" chk=\\"confirm\\" data-v-47325f32>foo@bar.baz</b></p>

<h3 data-v-47325f32>Example 606</h3>
<p data-v-47325f32>hello@mail+xyz.example isn't valid, but <b title=\\"mailto:hello+xyz@mail.example
\\" href=\\"mailto:hello+xyz@mail.example\\" chk=\\"confirm\\" data-v-47325f32>hello+xyz@mail.example</b> is.</p>

<h3 data-v-47325f32>Example 607</h3>
<p data-v-47325f32><b title=\\"mailto:a.b-c_d@a.b
\\" href=\\"mailto:a.b-c_d@a.b\\" chk=\\"confirm\\" data-v-47325f32>a.b-c_d@a.b</b></p>

<p data-v-47325f32><b title=\\"mailto:a.b-c_d@a.b
\\" href=\\"mailto:a.b-c_d@a.b\\" chk=\\"confirm\\" data-v-47325f32>a.b-c_d@a.b</b>.</p>

<p data-v-47325f32>a.b-c_d@a.b-</p>

<pre data-v-47325f32><code data-v-47325f32>a.b-c_d@a.b_
</code></pre></article>"
`;

exports[`./__tests__/new/gfm_break.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><h2 data-v-47325f32>breaks: true</h2><p data-v-47325f32>Look at the
pretty line
breaks.</p>
</article>"
`;

exports[`./__tests__/new/gfm_code.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><pre data-v-47325f32><code class=\\"lang-js\\" data-v-47325f32>var a = 'hello';
console.log(a + ' world');</code></pre>
<pre data-v-47325f32><code class=\\"lang-bash\\" data-v-47325f32>echo &quot;hello, \${WORLD}&quot;</code></pre>
<pre data-v-47325f32><code class=\\"lang-longfence\\" data-v-47325f32>Q: What do you call a tall person who sells stolen goods?</code></pre>
<pre data-v-47325f32><code class=\\"lang-ManyTildes\\" data-v-47325f32>A longfence!</code></pre>
<p data-v-47325f32>How about an empty code block?</p>

<pre data-v-47325f32><code class=\\"lang-js\\" data-v-47325f32></code></pre>
<p data-v-47325f32>How about a code block with only an empty line?</p>

<pre data-v-47325f32><code class=\\"lang-js\\" data-v-47325f32></code></pre>
<p data-v-47325f32>With some trailing empty lines:</p>

<pre data-v-47325f32><code data-v-47325f32>ciao

</code></pre></article>"
`;

exports[`./__tests__/new/gfm_code_hr_list.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><h2 data-v-47325f32>foo</h2>
<ol data-v-47325f32><li data-v-47325f32><p data-v-47325f32>bar:</p>

<blockquote data-v-47325f32><ul data-v-47325f32><li data-v-47325f32>one
<ul data-v-47325f32><li data-v-47325f32>two
<ul data-v-47325f32><li data-v-47325f32>three</li><li data-v-47325f32>four</li><li data-v-47325f32>five</li></ul></li></ul></li></ul></blockquote></li><li data-v-47325f32><p data-v-47325f32>foo:</p>

<pre data-v-47325f32><code data-v-47325f32> line 1
 line 2</code></pre></li><li data-v-47325f32><p data-v-47325f32>foo:</p>

<ol data-v-47325f32><li data-v-47325f32><p data-v-47325f32>foo <code data-v-47325f32>bar</code> bar:</p>

<pre data-v-47325f32><code class=\\"lang-erb\\" data-v-47325f32> some code here</code></pre></li><li data-v-47325f32><p data-v-47325f32>foo <code data-v-47325f32>bar</code> bar:</p>

<pre data-v-47325f32><code class=\\"lang-erb\\" data-v-47325f32> foo
 ---
 bar
 ---
 foo
 bar</code></pre></li><li data-v-47325f32><p data-v-47325f32>foo <code data-v-47325f32>bar</code> bar:</p>

<pre data-v-47325f32><code class=\\"lang-html\\" data-v-47325f32> ---
 foo
 foo
 ---
 bar</code></pre></li><li data-v-47325f32><p data-v-47325f32>foo <code data-v-47325f32>bar</code> bar:</p>

<pre data-v-47325f32><code data-v-47325f32> foo
 ---
 bar
</code></pre></li><li data-v-47325f32><p data-v-47325f32>foo</p>
</li></ol></li></ol></article>"
`;

exports[`./__tests__/new/gfm_del.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><p data-v-47325f32>hello <del data-v-47325f32>hi</del> world</p>
</article>"
`;

exports[`./__tests__/new/gfm_em.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><p data-v-47325f32>These words should_not_be_emphasized.</p>
</article>"
`;

exports[`./__tests__/new/gfm_hashtag.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><h2 data-v-47325f32>gfm: true</h2><p data-v-47325f32>#header</p>

<h1 data-v-47325f32>header1</h1>
<h1 data-v-47325f32>header2</h1></article>"
`;

exports[`./__tests__/new/gfm_links_invalid.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><h2 data-v-47325f32>sanitize: true</h2><p data-v-47325f32>This should not be linked: http://example.com/%ff</p>
</article>"
`;

exports[`./__tests__/new/gfm_tables.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><table data-v-47325f32><thead data-v-47325f32><tr data-v-47325f32><th data-v-47325f32>Heading 1</th><th data-v-47325f32>Heading 2</th></tr></thead><tbody data-v-47325f32><tr data-v-47325f32><td data-v-47325f32>Cell 1</td><td data-v-47325f32>Cell 2</td></tr><tr data-v-47325f32><td data-v-47325f32>Cell 3</td><td data-v-47325f32>Cell 4</td></tr></tbody></table>
<table data-v-47325f32><thead data-v-47325f32><tr data-v-47325f32><th class=\\"c\\" data-v-47325f32>Header 1</th><th class=\\"r\\" data-v-47325f32>Header 2</th><th class=\\"l\\" data-v-47325f32>Header 3</th><th data-v-47325f32>Header 4</th></tr></thead><tbody data-v-47325f32><tr data-v-47325f32><td class=\\"c\\" data-v-47325f32>Cell 1</td><td class=\\"r\\" data-v-47325f32>Cell 2</td><td class=\\"l\\" data-v-47325f32>Cell 3</td><td data-v-47325f32>Cell 4</td></tr><tr data-v-47325f32><td class=\\"c\\" data-v-47325f32>Cell 5</td><td class=\\"r\\" data-v-47325f32>Cell 6</td><td class=\\"l\\" data-v-47325f32>Cell 7</td><td data-v-47325f32>Cell 8</td></tr></tbody></table>
<pre data-v-47325f32><code data-v-47325f32>Test code

</code></pre><table data-v-47325f32><thead data-v-47325f32><tr data-v-47325f32><th data-v-47325f32>Header 1</th><th data-v-47325f32>Header 2</th></tr></thead><tbody data-v-47325f32><tr data-v-47325f32><td data-v-47325f32>Cell 1</td><td data-v-47325f32>Cell 2</td></tr><tr data-v-47325f32><td data-v-47325f32>Cell 3</td><td data-v-47325f32>Cell 4</td></tr></tbody></table>
<table data-v-47325f32><thead data-v-47325f32><tr data-v-47325f32><th class=\\"l\\" data-v-47325f32>Header 1</th><th class=\\"c\\" data-v-47325f32>Header 2</th><th class=\\"r\\" data-v-47325f32>Header 3</th><th data-v-47325f32>Header 4</th></tr></thead><tbody data-v-47325f32><tr data-v-47325f32><td class=\\"l\\" data-v-47325f32>Cell 1</td><td class=\\"c\\" data-v-47325f32>Cell 2</td><td class=\\"r\\" data-v-47325f32>Cell 3</td><td data-v-47325f32>Cell 4</td></tr><tr data-v-47325f32><td class=\\"l\\" data-v-47325f32><em data-v-47325f32>Cell 5</em></td><td class=\\"c\\" data-v-47325f32>Cell 6</td><td class=\\"r\\" data-v-47325f32>Cell 7</td><td data-v-47325f32>Cell 8</td></tr></tbody></table></article>"
`;

exports[`./__tests__/new/headings_id.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><h3 data-v-47325f32>Heading with a <b title=\\"http
github.com\\" href=\\"http://github.com/\\" chk=\\"confirm\\" data-v-47325f32>link</b></h3>
<h3 data-v-47325f32>Heading with some <em data-v-47325f32>italic text</em></h3>
<h3 data-v-47325f32>Or some <strong data-v-47325f32>strong</strong></h3><p data-v-47325f32>(which doesn't really make any difference, here)</p>

<h3 data-v-47325f32>Or even <code data-v-47325f32>code</code></h3>
<h3 data-v-47325f32>What about <del data-v-47325f32>strikethrough</del></h3>
<h2 data-v-47325f32>And a ref <b title=\\"link to nowhere\\" href=\\"/some/url\\" chk=\\"confirm\\" data-v-47325f32>link</b></h2>
</article>"
`;

exports[`./__tests__/new/hr_list_break.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><ul data-v-47325f32><li data-v-47325f32>hello
world</li><li data-v-47325f32>how
are
</li></ul><hr data-v-47325f32><p data-v-47325f32>you today?</p>
</article>"
`;

exports[`./__tests__/new/html_comments.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><h3 data-v-47325f32>Example 1</h3>
<p data-v-47325f32>&lt;!-- comment --&gt;

</p><h3 data-v-47325f32>Example 2</h3>
<p data-v-47325f32>&lt;!----&gt;

</p><h3 data-v-47325f32>Example 3</h3>
<p data-v-47325f32>&lt;!-- --&gt;

</p><h3 data-v-47325f32>Example 4</h3>
<p data-v-47325f32>&lt;!-- - --&gt;

</p><h3 data-v-47325f32>Example 5</h3>
<p data-v-47325f32>&lt;!-- -- --&gt;

</p><h3 data-v-47325f32>Example 6</h3>
<p data-v-47325f32>&lt;!-- ---&gt;

</p><h3 data-v-47325f32>Example 7</h3>
<p data-v-47325f32>&lt;!-----&gt;

</p><h3 data-v-47325f32>Example 8</h3>
<p data-v-47325f32>&lt;!------&gt;

</p><h3 data-v-47325f32>Example 9</h3>
<p data-v-47325f32>&lt;!-- My favorite operators are &gt; and &lt;!--&gt;

</p><h3 data-v-47325f32>Example 10</h3>
<p data-v-47325f32>&lt;!-- multi
line    
comment
--&gt;

</p><h3 data-v-47325f32>Example 11</h3>
<p data-v-47325f32>   &lt;!-- indented comment --&gt;

</p><pre data-v-47325f32><code data-v-47325f32>&lt;!-- too much indentation --&gt;

</code></pre><h3 data-v-47325f32>Example 12</h3>
<p data-v-47325f32>&lt;!<s data-v-47325f32>&gt; not a comment </s>&gt;</p>

<p data-v-47325f32>&lt;!<s data-v-47325f32>-&gt; not a comment </s>&gt;</p>

<p data-v-47325f32>&lt;!-- &lt;!-- not a comment? --&gt; --&gt;</p></article>"
`;

exports[`./__tests__/new/lazy_blockquotes.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><blockquote data-v-47325f32><p data-v-47325f32>hi there</p>
<p data-v-47325f32>bud</p></blockquote></article>"
`;

exports[`./__tests__/new/link_lt.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><p data-v-47325f32><b title=\\"&lt;test
\\" href=\\"&lt;test\\" chk=\\"confirm\\" data-v-47325f32>URL</b></p>
</article>"
`;

exports[`./__tests__/new/links.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><h2 data-v-47325f32>sanitize: true</h2><p data-v-47325f32>URL</p>

<p data-v-47325f32>URL</p>

<p data-v-47325f32>URL</p>

<p data-v-47325f32>URL</p>

<p data-v-47325f32>URL</p>
</article>"
`;

exports[`./__tests__/new/list_item_text.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><ul data-v-47325f32><li data-v-47325f32><p data-v-47325f32>item1</p>

<ul data-v-47325f32><li data-v-47325f32>item2

</li></ul><p data-v-47325f32>text</p>
</li></ul></article>"
`;

exports[`./__tests__/new/loose_lists.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><ul data-v-47325f32><li data-v-47325f32><p data-v-47325f32>hello</p>
<p data-v-47325f32>world</p>

<p data-v-47325f32>how</p>
<p data-v-47325f32>are</p></li><li data-v-47325f32>you



</li></ul><p data-v-47325f32>better behavior:</p>

<ul data-v-47325f32><li data-v-47325f32><p data-v-47325f32>hello</p>
<ul data-v-47325f32><li data-v-47325f32><p data-v-47325f32>world</p>
<p data-v-47325f32>how</p>

<p data-v-47325f32>are</p>
<p data-v-47325f32>you</p>
</li><li data-v-47325f32><p data-v-47325f32>today</p></li></ul></li><li data-v-47325f32>hi



</li></ul><ul data-v-47325f32><li data-v-47325f32><p data-v-47325f32>hello</p>
</li><li data-v-47325f32><p data-v-47325f32>world</p></li><li data-v-47325f32>hi



</li></ul><ul data-v-47325f32><li data-v-47325f32>hello</li><li data-v-47325f32><p data-v-47325f32>world</p>
</li><li data-v-47325f32><p data-v-47325f32>hi</p>



</li></ul><ul data-v-47325f32><li data-v-47325f32>hello</li><li data-v-47325f32><p data-v-47325f32>world</p>

<p data-v-47325f32>how</p></li><li data-v-47325f32>hi



</li></ul><ul data-v-47325f32><li data-v-47325f32>hello</li><li data-v-47325f32>world</li><li data-v-47325f32><p data-v-47325f32>how</p>

<p data-v-47325f32>are</p>



</li></ul><ul data-v-47325f32><li data-v-47325f32>hello</li><li data-v-47325f32><p data-v-47325f32>world</p>
</li><li data-v-47325f32><p data-v-47325f32>how</p>

<p data-v-47325f32>are</p>
</li></ul></article>"
`;

exports[`./__tests__/new/main.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32>
<h1 data-v-47325f32>A heading</h1>
<p data-v-47325f32>Just a note, I've found that I can't test my markdown parser vs others.
For example, both markdown.js and showdown code blocks in lists wrong. They're
also completely <b title=\\"Google\\" href=\\"http://google.com/\\" chk=\\"confirm\\" data-v-47325f32>inconsistent</b> with regards to paragraphs in list items.</p>

<p data-v-47325f32>A link. Not anymore.</p>

<p data-v-47325f32>&lt;aside&gt;This will make me fail the test because
markdown.js doesnt acknowledge arbitrary html blocks =/&lt;/aside&gt;

</p><ul data-v-47325f32><li data-v-47325f32><p data-v-47325f32>List Item 1</p>
</li><li data-v-47325f32><p data-v-47325f32>List Item 2</p>
<ul data-v-47325f32><li data-v-47325f32>New List Item 1
Hi, this is a list item.</li><li data-v-47325f32>New List Item 2
Another item
<pre data-v-47325f32><code data-v-47325f32>Code goes here.
Lots of it...</code></pre></li><li data-v-47325f32>New List Item 3
The last item
</li></ul></li><li data-v-47325f32><p data-v-47325f32>List Item 3</p>
<p data-v-47325f32>The final item.</p>
</li><li data-v-47325f32><p data-v-47325f32>List Item 4</p>
<p data-v-47325f32>The real final item.</p>

</li></ul><p data-v-47325f32>Paragraph.</p>

<blockquote data-v-47325f32><ul data-v-47325f32><li data-v-47325f32>bq Item 1</li><li data-v-47325f32>bq Item 2
<ul data-v-47325f32><li data-v-47325f32>New bq Item 1</li><li data-v-47325f32>New bq Item 2
Text here</li></ul></li></ul></blockquote>
<hr data-v-47325f32>
<blockquote data-v-47325f32><p data-v-47325f32>Another blockquote!</p>
<p data-v-47325f32>I really need to get</p>
<p data-v-47325f32>more creative with</p>
<p data-v-47325f32>mockup text..</p>
<p data-v-47325f32>markdown.js breaks here again</p></blockquote>
<h2 data-v-47325f32>Another Heading</h2>
<p data-v-47325f32>Hello <em data-v-47325f32>world</em>. Here is a <b title=\\"
\\" href=\\"//hello\\" chk=\\"confirm\\" data-v-47325f32>link</b>.
And an image <img src=\\"src\\" alt=\\"alt\\" data-v-47325f32>.</p>

<pre data-v-47325f32><code data-v-47325f32>Code goes here.
Lots of it...
</code></pre></article>"
`;

exports[`./__tests__/new/mangle_xss.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><p data-v-47325f32>sanatize: true</p>
<h2 data-v-47325f32>mangle: false</h2><p data-v-47325f32>&lt;&lt;svg/onload=&quot;alert(1)&quot;//@x&gt;</p>

<p data-v-47325f32>&lt;bar&quot;onclick=&quot;alert('XSS')&quot;@foo&gt;</p>
</article>"
`;

exports[`./__tests__/new/nested_code.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><p data-v-47325f32><code data-v-47325f32>hi ther \`\` ok \`\`\` </code></p>

<p data-v-47325f32><code data-v-47325f32>\` </code></p>

<p data-v-47325f32><code data-v-47325f32>There is a literal backtick (\`) here.</code></p>

<p data-v-47325f32>A backtick-delimited string in a code span: <code data-v-47325f32>\`foo\` </code></p>

<p data-v-47325f32>Please don't use any <code data-v-47325f32>&lt;blink&gt;</code> tags.</p></article>"
`;

exports[`./__tests__/new/nested_em.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><p data-v-47325f32><em data-v-47325f32>test <strong data-v-47325f32>test</strong> test</em></p>

<p data-v-47325f32><em data-v-47325f32>test <strong data-v-47325f32>test</strong> test</em></p>
</article>"
`;

exports[`./__tests__/new/nested_square_link.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><p data-v-47325f32><b title=\\"
url\\" href=\\"/url\\" chk=\\"confirm\\" data-v-47325f32>the <code data-v-47325f32>]</code> character</b></p>

<p data-v-47325f32><b title=\\"
url\\" href=\\"/url\\" chk=\\"confirm\\" data-v-47325f32>the \` character</b></p>
</article>"
`;

exports[`./__tests__/new/nogfm_hashtag.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><h2 data-v-47325f32>gfm: false</h2><p data-v-47325f32>#header</p>

<h1 data-v-47325f32>header1</h1>
<h1 data-v-47325f32>header2</h1></article>"
`;

exports[`./__tests__/new/not_a_link.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><p data-v-47325f32>[test](not a link)</p>
</article>"
`;

exports[`./__tests__/new/redos_html_closing.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><p data-v-47325f32>&lt;tag  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;  &quot;&quot;&lt;&quot; /&gt;a'a</p>
</article>"
`;

exports[`./__tests__/new/redos_nolink.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><p data-v-47325f32>![[[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[][[]!\\\\</p>
</article>"
`;

exports[`./__tests__/new/ref_paren.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><p data-v-47325f32><b title=\\"there\\" href=\\"/url\\" chk=\\"confirm\\" data-v-47325f32>hi</b></p>

</article>"
`;

exports[`./__tests__/new/relative_urls.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><h2 data-v-47325f32>baseUrl: &quot;<b title=\\"http
example.com\\" href=\\"http://example.com/base/&quot;\\" chk=\\"confirm\\" data-v-47325f32>http://example.com/base/&quot;</b></h2><h1 data-v-47325f32>Absolutization of RFC 3986 URIs</h1>
<h2 data-v-47325f32>Absolute URI</h2><p data-v-47325f32><b title=\\"http
example.com\\" href=\\"http://example.com/\\" chk=\\"confirm\\" data-v-47325f32><img src=\\"http://example.com/logo\\" alt=\\"section 4.3\\" data-v-47325f32></b></p>

<h2 data-v-47325f32>Network-path reference</h2><p data-v-47325f32><b title=\\"
\\" href=\\"//example.com/\\" chk=\\"confirm\\" data-v-47325f32><img src=\\"//example.com/logo\\" alt=\\"section 4.2\\" data-v-47325f32></b></p>

<h2 data-v-47325f32>Absolute path</h2><p data-v-47325f32><b title=\\"
path\\" href=\\"/path/to/content\\" chk=\\"confirm\\" data-v-47325f32><img src=\\"/path/to/img\\" alt=\\"section 4.2\\" data-v-47325f32></b></p>

<h2 data-v-47325f32>Relative path</h2><p data-v-47325f32><b title=\\"content
\\" href=\\"content\\" chk=\\"confirm\\" data-v-47325f32><img src=\\"img\\" alt=\\"section 4.2\\" data-v-47325f32></b></p>

<h2 data-v-47325f32>Dot-relative path</h2><p data-v-47325f32><b title=\\".
content\\" href=\\"./content\\" chk=\\"confirm\\" data-v-47325f32><img src=\\"./img\\" alt=\\"section 3.3\\" data-v-47325f32></b></p>

<p data-v-47325f32><b title=\\"..
content\\" href=\\"../content\\" chk=\\"confirm\\" data-v-47325f32><img src=\\"../img\\" alt=\\"section 3.3\\" data-v-47325f32></b></p>

<h2 data-v-47325f32>Same-document query</h2><p data-v-47325f32><b title=\\"
\\" href=\\"?\\" chk=\\"confirm\\" data-v-47325f32><img src=\\"?type=image\\" alt=\\"section 4.4\\" data-v-47325f32></b></p>

<h2 data-v-47325f32>Same-document fragment</h2><p data-v-47325f32><q title=\\"
\\" data-v-47325f32><img src=\\"#img\\" alt=\\"section 4.4\\" data-v-47325f32></q></p>

<h2 data-v-47325f32>Empty</h2><p data-v-47325f32><q title=\\"
\\" data-v-47325f32>section 4.2</q></p>
</article>"
`;

exports[`./__tests__/new/same_bullet.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><ul data-v-47325f32><li data-v-47325f32>test</li><li data-v-47325f32>test</li><li data-v-47325f32>test
</li></ul></article>"
`;

exports[`./__tests__/new/smartypants.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><h2 data-v-47325f32>smartypants: true</h2><p data-v-47325f32>Hello world 'how' &quot;are&quot; you -- today...</p>

<p data-v-47325f32>&quot;It's a more 'challenging' smartypants test...&quot;</p>

<p data-v-47325f32>'And,' as a bonus --- &quot;one
multiline&quot; test!</p>
</article>"
`;

exports[`./__tests__/new/toplevel_paragraphs.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><h2 data-v-47325f32>gfm: true</h2><p data-v-47325f32>hello world
    text after spaces
    text after spaces</p>

<p data-v-47325f32>paragraph before code</p>
<pre data-v-47325f32><code data-v-47325f32>text inside block code</code></pre>
<p data-v-47325f32>paragraph before hr</p>
<hr data-v-47325f32>
<p data-v-47325f32>paragraph before head with hash</p>
<h1 data-v-47325f32>how are you</h1>
<p data-v-47325f32>paragraph before head with equals</p>
<h1 data-v-47325f32>how are you</h1>
<p data-v-47325f32>paragraph before blockquote</p>
<blockquote data-v-47325f32><p data-v-47325f32>text for blockquote</p></blockquote>
<p data-v-47325f32>paragraph before list</p>
<ul data-v-47325f32><li data-v-47325f32>text inside list

</li></ul><p data-v-47325f32>paragraph before div</p>
<p data-v-47325f32>&lt;div&gt;text inside div&lt;/div&gt;

</p><p data-v-47325f32>paragraph with span
&lt;span&gt;text inside span&lt;/span&gt;</p>

<p data-v-47325f32>hello <b title=\\"
are\\" href=\\"/are/you\\" chk=\\"confirm\\" data-v-47325f32>world</b></p>


<p data-v-47325f32>&lt;div&gt;hello&lt;/div&gt;

</p><p data-v-47325f32>&lt;span&gt;hello&lt;/span&gt;</p>
</article>"
`;

exports[`./__tests__/new/tricky_list.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><p data-v-47325f32><strong data-v-47325f32>hello</strong> <em data-v-47325f32>world</em></p>

<ul data-v-47325f32><li data-v-47325f32>hello world

</li></ul><p data-v-47325f32><strong data-v-47325f32>hello</strong> <em data-v-47325f32>world</em></p>

<ul data-v-47325f32><li data-v-47325f32>hello world

</li></ul><p data-v-47325f32><strong data-v-47325f32>hello</strong> <em data-v-47325f32>world</em></p>

<ul data-v-47325f32><li data-v-47325f32>Hello world

</li></ul><p data-v-47325f32><strong data-v-47325f32>hello</strong> <em data-v-47325f32>world</em></p>

<ul data-v-47325f32><li data-v-47325f32>hello world
</li></ul></article>"
`;

exports[`./__tests__/new/uppercase_hex.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><h2 data-v-47325f32>sanitize: true</h2><p data-v-47325f32>lowerclick melower
upperclick meupper</p>
</article>"
`;

exports[`./__tests__/original/amps_and_angles_encoding.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><h2 data-v-47325f32>pedantic: true</h2>
<p data-v-47325f32>AT&amp;T has an ampersand in their name.</p>

<p data-v-47325f32>AT&amp;amp;T is another way to write it.</p>

<p data-v-47325f32>This &amp; that.</p>

<p data-v-47325f32>4 &lt; 5.</p>

<p data-v-47325f32>6 &gt; 5.</p>

<p data-v-47325f32>Here's a [link] <b title=\\"http
example.com\\" href=\\"http://example.com/?foo=1&amp;bar=2\\" chk=\\"confirm\\" data-v-47325f32>1</b> with an ampersand in the URL.</p>

<p data-v-47325f32>Here's a link with an amersand in the link text: [AT&amp;T] <b title=\\"AT&amp;T\\" href=\\"http://att.com/\\" chk=\\"confirm\\" data-v-47325f32>2</b>.</p>

<p data-v-47325f32>Here's an inline <b title=\\"
script\\" href=\\"/script?foo=1&amp;bar=2\\" chk=\\"confirm\\" data-v-47325f32>link</b>.</p>

<p data-v-47325f32>Here's an inline <b title=\\"
script\\" href=\\"/script?foo=1&amp;bar=2\\" chk=\\"confirm\\" data-v-47325f32>link</b>.</p>


</article>"
`;

exports[`./__tests__/original/auto_links.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><p data-v-47325f32>Link: <b title=\\"http
example.com\\" href=\\"http://example.com/\\" chk=\\"confirm\\" data-v-47325f32>http://example.com/</b>.</p>

<p data-v-47325f32>With an ampersand: <b title=\\"http
example.com\\" href=\\"http://example.com/?foo=1&amp;bar=2\\" chk=\\"confirm\\" data-v-47325f32>http://example.com/?foo=1&amp;bar=2</b></p>

<ul data-v-47325f32><li data-v-47325f32>In a list?</li><li data-v-47325f32><b title=\\"http
example.com\\" href=\\"http://example.com/\\" chk=\\"confirm\\" data-v-47325f32>http://example.com/</b></li><li data-v-47325f32>It should.

</li></ul><blockquote data-v-47325f32><p data-v-47325f32>Blockquoted: <b title=\\"http
example.com\\" href=\\"http://example.com/\\" chk=\\"confirm\\" data-v-47325f32>http://example.com/</b></p></blockquote>
<p data-v-47325f32>Auto-links should not occur here: <code data-v-47325f32>&lt;http://example.com/&gt;</code></p>

<pre data-v-47325f32><code data-v-47325f32>or here: &lt;http://example.com/&gt;
</code></pre></article>"
`;

exports[`./__tests__/original/backslash_escapes.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><p data-v-47325f32>These should all get escaped:</p>

<p data-v-47325f32>Backslash: \\\\</p>

<p data-v-47325f32>Backtick: \`</p>

<p data-v-47325f32>Asterisk: *</p>

<p data-v-47325f32>Underscore: _</p>

<p data-v-47325f32>Left brace: {</p>

<p data-v-47325f32>Right brace: }</p>

<p data-v-47325f32>Left bracket: [</p>

<p data-v-47325f32>Right bracket: ]</p>

<p data-v-47325f32>Left paren: (</p>

<p data-v-47325f32>Right paren: )</p>

<p data-v-47325f32>Greater-than: &gt;</p>

<p data-v-47325f32>Hash: #</p>

<p data-v-47325f32>Period: .</p>

<p data-v-47325f32>Bang: !</p>

<p data-v-47325f32>Plus: +</p>

<p data-v-47325f32>Minus: -</p>



<p data-v-47325f32>These should not, because they occur within a code block:</p>

<pre data-v-47325f32><code data-v-47325f32>Backslash: \\\\\\\\

Backtick: \\\\\`

Asterisk: \\\\*

Underscore: \\\\_

Left brace: \\\\{

Right brace: \\\\}

Left bracket: \\\\[

Right bracket: \\\\]

Left paren: \\\\(

Right paren: \\\\)

Greater-than: \\\\&gt;

Hash: \\\\#

Period: \\\\.

Bang: \\\\!

Plus: \\\\+

Minus: \\\\-


</code></pre><p data-v-47325f32>Nor should these, which occur in code spans:</p>

<p data-v-47325f32>Backslash: <code data-v-47325f32>\\\\\\\\</code></p>

<p data-v-47325f32>Backtick: <code data-v-47325f32>\\\\\` </code></p>

<p data-v-47325f32>Asterisk: <code data-v-47325f32>\\\\*</code></p>

<p data-v-47325f32>Underscore: <code data-v-47325f32>\\\\_</code></p>

<p data-v-47325f32>Left brace: <code data-v-47325f32>\\\\{</code></p>

<p data-v-47325f32>Right brace: <code data-v-47325f32>\\\\}</code></p>

<p data-v-47325f32>Left bracket: <code data-v-47325f32>\\\\[</code></p>

<p data-v-47325f32>Right bracket: <code data-v-47325f32>\\\\]</code></p>

<p data-v-47325f32>Left paren: <code data-v-47325f32>\\\\(</code></p>

<p data-v-47325f32>Right paren: <code data-v-47325f32>\\\\)</code></p>

<p data-v-47325f32>Greater-than: <code data-v-47325f32>\\\\&gt;</code></p>

<p data-v-47325f32>Hash: <code data-v-47325f32>\\\\#</code></p>

<p data-v-47325f32>Period: <code data-v-47325f32>\\\\.</code></p>

<p data-v-47325f32>Bang: <code data-v-47325f32>\\\\!</code></p>

<p data-v-47325f32>Plus: <code data-v-47325f32>\\\\+</code></p>

<p data-v-47325f32>Minus: <code data-v-47325f32>\\\\-</code></p>


<p data-v-47325f32>These should get escaped, even though they're matching pairs for
other Markdown constructs:</p>

<p data-v-47325f32>*asterisks*</p>

<p data-v-47325f32>_underscores_</p>

<p data-v-47325f32>\`backticks\`</p>

<p data-v-47325f32>This is a code span with a literal backslash-backtick sequence: <code data-v-47325f32>\\\\\` </code></p>

<p data-v-47325f32>This is a tag with unescaped backticks &lt;span attr='\`ticks\`'&gt;bar&lt;/span&gt;.</p>

<p data-v-47325f32>This is a tag with backslashes &lt;span attr='\\\\\\\\backslashes\\\\\\\\'&gt;bar&lt;/span&gt;.</p>
</article>"
`;

exports[`./__tests__/original/blockquotes_with_code_blocks.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><blockquote data-v-47325f32><p data-v-47325f32>Example:</p>

<pre data-v-47325f32><code data-v-47325f32>sub status {
    print &quot;working&quot;;
}

</code></pre><p data-v-47325f32>Or:</p>

<pre data-v-47325f32><code data-v-47325f32>sub status {
    return &quot;working&quot;;
}</code></pre></blockquote></article>"
`;

exports[`./__tests__/original/code_blocks.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><pre data-v-47325f32><code data-v-47325f32>code block on the first line
</code></pre>    
<p data-v-47325f32>Regular text.</p>

<pre data-v-47325f32><code data-v-47325f32>code block indented by spaces

</code></pre><p data-v-47325f32>Regular text.</p>

<pre data-v-47325f32><code data-v-47325f32>the lines in this block  
all contain trailing spaces  

</code></pre><p data-v-47325f32>Regular Text.</p>

<pre data-v-47325f32><code data-v-47325f32>code block on the last line
</code></pre></article>"
`;

exports[`./__tests__/original/code_spans.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><p data-v-47325f32><code data-v-47325f32>&lt;test a=&quot;</code> content of attribute <code data-v-47325f32>&quot;&gt;</code></p>

<p data-v-47325f32>Fix for backticks within HTML tag: &lt;span attr='\`ticks\`'&gt;like this&lt;/span&gt;</p>

<p data-v-47325f32>Here's how you put <code data-v-47325f32>\`backticks\` </code> in a code span.</p>

</article>"
`;

exports[`./__tests__/original/hard_wrapped_paragraphs_with_list_like_lines.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><p data-v-47325f32>In Markdown 1.0.0 and earlier. Version</p>
<ol start=\\"8\\" data-v-47325f32><li data-v-47325f32>This line turns into a list item.
Because a hard-wrapped line in the
middle of a paragraph looked like a
list item.

</li></ol><p data-v-47325f32>Here's one with a bullet.</p>
<ul data-v-47325f32><li data-v-47325f32>criminey.
</li></ul></article>"
`;

exports[`./__tests__/original/horizontal_rules.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><p data-v-47325f32>Dashes:</p>

<hr data-v-47325f32>
<hr data-v-47325f32> 
<hr data-v-47325f32>
<hr data-v-47325f32>
<pre data-v-47325f32><code data-v-47325f32>---

</code></pre><hr data-v-47325f32>
<hr data-v-47325f32> 
<hr data-v-47325f32>
<hr data-v-47325f32>
<pre data-v-47325f32><code data-v-47325f32>- - -


</code></pre><p data-v-47325f32>Asterisks:</p>

<hr data-v-47325f32>
<hr data-v-47325f32> 
<hr data-v-47325f32>
<hr data-v-47325f32>
<pre data-v-47325f32><code data-v-47325f32>***

</code></pre><hr data-v-47325f32>
<hr data-v-47325f32> 
<hr data-v-47325f32>
<hr data-v-47325f32>
<pre data-v-47325f32><code data-v-47325f32>* * *


</code></pre><p data-v-47325f32>Underscores:</p>

<hr data-v-47325f32>
<hr data-v-47325f32> 
<hr data-v-47325f32>
<hr data-v-47325f32>
<pre data-v-47325f32><code data-v-47325f32>___

</code></pre><hr data-v-47325f32>
<hr data-v-47325f32> 
<hr data-v-47325f32>
<hr data-v-47325f32>
<pre data-v-47325f32><code data-v-47325f32>_ _ _



</code></pre><p data-v-47325f32>Not horizontal rules:</p>

<p data-v-47325f32>--*</p>

<p data-v-47325f32>-*-</p>

<p data-v-47325f32>*--</p>

<p data-v-47325f32> -_-</p>

<p data-v-47325f32>  __-</p>

<p data-v-47325f32>   -__</p>

<pre data-v-47325f32><code data-v-47325f32>_-_


</code></pre><p data-v-47325f32>Long rules:</p>

<hr data-v-47325f32>
<hr data-v-47325f32>
<hr data-v-47325f32></article>"
`;

exports[`./__tests__/original/inline_html_advanced.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><p data-v-47325f32>Simple block on one line:</p>

<p data-v-47325f32>&lt;div&gt;foo&lt;/div&gt;

</p><p data-v-47325f32>And nested without indentation:</p>

<p data-v-47325f32>&lt;div&gt;
&lt;div&gt;
&lt;div&gt;
foo
&lt;/div&gt;
&lt;div style=&quot;&gt;&quot;/&gt;
&lt;/div&gt;
&lt;div&gt;bar&lt;/div&gt;
&lt;/div&gt;
</p></article>"
`;

exports[`./__tests__/original/inline_html_comments.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><p data-v-47325f32>Paragraph one.</p>

<p data-v-47325f32>&lt;!-- This is a simple comment --&gt;

</p><p data-v-47325f32>&lt;!--
    This is another comment.
--&gt;

</p><p data-v-47325f32>Paragraph two.</p>

<p data-v-47325f32>&lt;!-- one comment block -- -- with two comments --&gt;

</p><p data-v-47325f32>The end.</p>
</article>"
`;

exports[`./__tests__/original/inline_html_simple.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><p data-v-47325f32>Here's a simple block:</p>

<p data-v-47325f32>&lt;div&gt;
    foo
&lt;/div&gt;

</p><p data-v-47325f32>This should be a code block, though:</p>

<pre data-v-47325f32><code data-v-47325f32>&lt;div&gt;
    foo
&lt;/div&gt;

</code></pre><p data-v-47325f32>As should this:</p>

<pre data-v-47325f32><code data-v-47325f32>&lt;div&gt;foo&lt;/div&gt;

</code></pre><p data-v-47325f32>Now, nested:</p>

<p data-v-47325f32>&lt;div&gt;
    &lt;div&gt;
        &lt;div&gt;
            foo
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

</p><p data-v-47325f32>This should just be an HTML comment:</p>

<p data-v-47325f32>&lt;!-- Comment --&gt;

</p><p data-v-47325f32>Multiline:</p>

<p data-v-47325f32>&lt;!--
Blah
Blah
--&gt;

</p><p data-v-47325f32>Code block:</p>

<pre data-v-47325f32><code data-v-47325f32>&lt;!-- Comment --&gt;

</code></pre><p data-v-47325f32>Just plain comment, with trailing spaces on the line:</p>

<p data-v-47325f32>&lt;!-- foo --&gt;   

</p><p data-v-47325f32>Code:</p>

<pre data-v-47325f32><code data-v-47325f32>&lt;hr /&gt;
</code></pre>    
<p data-v-47325f32>Hr's:</p>

<p data-v-47325f32>&lt;hr&gt;

</p><p data-v-47325f32>&lt;hr/&gt;

</p><p data-v-47325f32>&lt;hr /&gt;

</p><p data-v-47325f32>&lt;hr&gt;   

</p><p data-v-47325f32>&lt;hr/&gt;  

</p><p data-v-47325f32>&lt;hr /&gt; 

</p><p data-v-47325f32>&lt;hr class=&quot;foo&quot; id=&quot;bar&quot; /&gt;

</p><p data-v-47325f32>&lt;hr class=&quot;foo&quot; id=&quot;bar&quot;/&gt;

</p><p data-v-47325f32>&lt;hr class=&quot;foo&quot; id=&quot;bar&quot; &gt;

</p></article>"
`;

exports[`./__tests__/original/links_inline_style.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><h2 data-v-47325f32>pedantic: true</h2>
<p data-v-47325f32>Just a <b title=\\"
url\\" href=\\"/url/\\" chk=\\"confirm\\" data-v-47325f32>URL</b>.</p>

<p data-v-47325f32><b title=\\"title\\" href=\\"/url/\\" chk=\\"confirm\\" data-v-47325f32>URL and title</b>.</p>

<p data-v-47325f32><b title=\\"title preceded by two spaces\\" href=\\"/url/\\" chk=\\"confirm\\" data-v-47325f32>URL and title</b>.</p>

<p data-v-47325f32><b title=\\"title preceded by a tab\\" href=\\"/url/\\" chk=\\"confirm\\" data-v-47325f32>URL and title</b>.</p>

<p data-v-47325f32><b title=\\"title has spaces afterward\\" href=\\"/url/\\" chk=\\"confirm\\" data-v-47325f32>URL and title</b>.</p>

<p data-v-47325f32>[URL and title]( /url/has space ).</p>

<p data-v-47325f32>[URL and title]( /url/has space/ &quot;url has space and title&quot;).</p>

<p data-v-47325f32><q title=\\"
\\" data-v-47325f32>Empty</q>.</p>
</article>"
`;

exports[`./__tests__/original/links_reference_style.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><h2 data-v-47325f32>pedantic: true</h2>
<p data-v-47325f32>Foo [bar] <b title=\\"Title\\" href=\\"/url/\\" chk=\\"confirm\\" data-v-47325f32>1</b>.</p>

<p data-v-47325f32>Foo <b title=\\"Title\\" href=\\"/url/\\" chk=\\"confirm\\" data-v-47325f32>bar</b>.</p>

<p data-v-47325f32>Foo [bar]
<b title=\\"Title\\" href=\\"/url/\\" chk=\\"confirm\\" data-v-47325f32>1</b>.</p>



<p data-v-47325f32>With [embedded [brackets]] <b title=\\"
url\\" href=\\"/url/\\" chk=\\"confirm\\" data-v-47325f32>b</b>.</p>


<p data-v-47325f32>Indented <b title=\\"
url\\" href=\\"/url\\" chk=\\"confirm\\" data-v-47325f32>once</b>.</p>

<p data-v-47325f32>Indented <b title=\\"
url\\" href=\\"/url\\" chk=\\"confirm\\" data-v-47325f32>twice</b>.</p>

<p data-v-47325f32>Indented <b title=\\"
url\\" href=\\"/url\\" chk=\\"confirm\\" data-v-47325f32>thrice</b>.</p>

<p data-v-47325f32>Indented [four][] times.</p>




<pre data-v-47325f32><code data-v-47325f32>[four]: /url


</code></pre>
<hr data-v-47325f32>
<p data-v-47325f32><b title=\\"foo
\\" href=\\"foo\\" chk=\\"confirm\\" data-v-47325f32>this</b> <b title=\\"foo
\\" href=\\"foo\\" chk=\\"confirm\\" data-v-47325f32>this</b> should work</p>

<p data-v-47325f32>So should <b title=\\"foo
\\" href=\\"foo\\" chk=\\"confirm\\" data-v-47325f32>this</b>.</p>

<p data-v-47325f32>And <b title=\\"foo
\\" href=\\"foo\\" chk=\\"confirm\\" data-v-47325f32>this</b> [].</p>

<p data-v-47325f32>And <b title=\\"foo
\\" href=\\"foo\\" chk=\\"confirm\\" data-v-47325f32>this</b>.</p>

<p data-v-47325f32>And <b title=\\"foo
\\" href=\\"foo\\" chk=\\"confirm\\" data-v-47325f32>this</b>.</p>

<p data-v-47325f32>But not [that] [].</p>

<p data-v-47325f32>Nor [that][].</p>

<p data-v-47325f32>Nor [that].</p>

<p data-v-47325f32>[Something in brackets like <b title=\\"foo
\\" href=\\"foo\\" chk=\\"confirm\\" data-v-47325f32>this</b> should work]</p>

<p data-v-47325f32>[Same with <b title=\\"foo
\\" href=\\"foo\\" chk=\\"confirm\\" data-v-47325f32>this</b>.]</p>

<p data-v-47325f32>In this case, <b title=\\"
somethingelse\\" href=\\"/somethingelse/\\" chk=\\"confirm\\" data-v-47325f32>this</b> points to something else.</p>

<p data-v-47325f32>Backslashing should suppress [this] and [this].</p>



<hr data-v-47325f32>
<p data-v-47325f32>Here's one where the <b title=\\"
url\\" href=\\"/url/\\" chk=\\"confirm\\" data-v-47325f32>link
breaks</b> across lines.</p>

<p data-v-47325f32>Here's another where the <b title=\\"
url\\" href=\\"/url/\\" chk=\\"confirm\\" data-v-47325f32>link
breaks</b> across lines, but with a line-ending space.</p>


</article>"
`;

exports[`./__tests__/original/links_shortcut_references.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><h2 data-v-47325f32>pedantic: true</h2>
<p data-v-47325f32>This is the <b title=\\"
simple\\" href=\\"/simple\\" chk=\\"confirm\\" data-v-47325f32>simple case</b>.</p>




<p data-v-47325f32>This one has a <b title=\\"
foo\\" href=\\"/foo\\" chk=\\"confirm\\" data-v-47325f32>line
break</b>.</p>

<p data-v-47325f32>This one has a <b title=\\"
foo\\" href=\\"/foo\\" chk=\\"confirm\\" data-v-47325f32>line
break</b> with a line-ending space.</p>



<p data-v-47325f32><b title=\\"
this\\" href=\\"/this\\" chk=\\"confirm\\" data-v-47325f32>this</b> <b title=\\"
that\\" href=\\"/that\\" chk=\\"confirm\\" data-v-47325f32>that</b> and the <b title=\\"
other\\" href=\\"/other\\" chk=\\"confirm\\" data-v-47325f32>other</b></p>

</article>"
`;

exports[`./__tests__/original/literal_quotes_in_titles.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><h2 data-v-47325f32>pedantic: true</h2>
<p data-v-47325f32>Foo [bar][].</p>

<p data-v-47325f32>Foo [bar](/url/ &quot;Title with &quot;quotes&quot; inside&quot;).</p>


<p data-v-47325f32>  [bar]: /url/ &quot;Title with &quot;quotes&quot; inside&quot;</p>

</article>"
`;

exports[`./__tests__/original/markdown_documentation_basics.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><hr data-v-47325f32><h2 data-v-47325f32>pedantic: true</h2>
<h1 data-v-47325f32>Markdown: Basics</h1>
<p data-v-47325f32>&lt;ul id=&quot;ProjectSubmenu&quot;&gt;
    &lt;li&gt;&lt;a href=&quot;/projects/markdown/&quot; title=&quot;Markdown Project Page&quot;&gt;Main&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a class=&quot;selected&quot; title=&quot;Markdown Basics&quot;&gt;Basics&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;/projects/markdown/syntax&quot; title=&quot;Markdown Syntax Documentation&quot;&gt;Syntax&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;/projects/markdown/license&quot; title=&quot;Pricing and License Information&quot;&gt;License&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;/projects/markdown/dingus&quot; title=&quot;Online Markdown Web Form&quot;&gt;Dingus&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


</p><h2 data-v-47325f32>Getting the Gist of Markdown's Formatting Syntax</h2>
<p data-v-47325f32>This page offers a brief overview of what it's like to use Markdown.
The [syntax page] <b title=\\"Markdown Syntax\\" href=\\"/projects/markdown/syntax\\" chk=\\"confirm\\" data-v-47325f32>s</b> provides complete, detailed documentation for
every feature, but Markdown should be very easy to pick up simply by
looking at a few examples of it in action. The examples on this page
are written in a before/after style, showing example syntax and the
HTML output produced by Markdown.</p>

<p data-v-47325f32>It's also helpful to simply try Markdown out; the [Dingus] <b title=\\"Markdown Dingus\\" href=\\"/projects/markdown/dingus\\" chk=\\"confirm\\" data-v-47325f32>d</b> is a
web application that allows you type your own Markdown-formatted text
and translate it to XHTML.</p>

<p data-v-47325f32><strong data-v-47325f32>Note:</strong> This document is itself written using Markdown; you
can [see the source for it by adding '.text' to the URL] <b title=\\"
projects\\" href=\\"/projects/markdown/basics.text\\" chk=\\"confirm\\" data-v-47325f32>src</b>.</p>



<h2 data-v-47325f32>Paragraphs, Headers, Blockquotes</h2>
<p data-v-47325f32>A paragraph is simply one or more consecutive lines of text, separated
by one or more blank lines. (A blank line is any line that looks like a
blank line -- a line containing nothing spaces or tabs is considered
blank.) Normal paragraphs should not be intended with spaces or tabs.</p>

<p data-v-47325f32>Markdown offers two styles of headers: <em data-v-47325f32>Setext</em> and <em data-v-47325f32>atx</em>.
Setext-style headers for <code data-v-47325f32>&lt;h1&gt;</code> and <code data-v-47325f32>&lt;h2&gt;</code> are created by
&quot;underlining&quot; with equal signs (<code data-v-47325f32>=</code>) and hyphens (<code data-v-47325f32>-</code>), respectively.
To create an atx-style header, you put 1-6 hash marks (<code data-v-47325f32>#</code>) at the
beginning of the line -- the number of hashes equals the resulting
HTML header level.</p>

<p data-v-47325f32>Blockquotes are indicated using email-style '<code data-v-47325f32>&gt;</code>' angle brackets.</p>

<p data-v-47325f32>Markdown:</p>

<pre data-v-47325f32><code data-v-47325f32>A First Level Header
====================
</code></pre>    
<pre data-v-47325f32><code data-v-47325f32>A Second Level Header
---------------------

Now is the time for all good men to come to
the aid of their country. This is just a
regular paragraph.

The quick brown fox jumped over the lazy
dog's back.
</code></pre>    
<pre data-v-47325f32><code data-v-47325f32>### Header 3

&gt; This is a blockquote.
&gt; 
&gt; This is the second paragraph in the blockquote.
&gt;
&gt; ## This is an H2 in a blockquote


</code></pre><p data-v-47325f32>Output:</p>

<pre data-v-47325f32><code data-v-47325f32>&lt;h1&gt;A First Level Header&lt;/h1&gt;
</code></pre>    
<pre data-v-47325f32><code data-v-47325f32>&lt;h2&gt;A Second Level Header&lt;/h2&gt;
</code></pre>    
<pre data-v-47325f32><code data-v-47325f32>&lt;p&gt;Now is the time for all good men to come to
the aid of their country. This is just a
regular paragraph.&lt;/p&gt;
</code></pre>    
<pre data-v-47325f32><code data-v-47325f32>&lt;p&gt;The quick brown fox jumped over the lazy
dog's back.&lt;/p&gt;
</code></pre>    
<pre data-v-47325f32><code data-v-47325f32>&lt;h3&gt;Header 3&lt;/h3&gt;
</code></pre>    
<pre data-v-47325f32><code data-v-47325f32>&lt;blockquote&gt;
    &lt;p&gt;This is a blockquote.&lt;/p&gt;
    
    &lt;p&gt;This is the second paragraph in the blockquote.&lt;/p&gt;
    
    &lt;h2&gt;This is an H2 in a blockquote&lt;/h2&gt;
&lt;/blockquote&gt;



</code></pre><h3 data-v-47325f32>Phrase Emphasis</h3>
<p data-v-47325f32>Markdown uses asterisks and underscores to indicate spans of emphasis.</p>

<p data-v-47325f32>Markdown:</p>

<pre data-v-47325f32><code data-v-47325f32>Some of these words *are emphasized*.
Some of these words _are emphasized also_.
</code></pre>    
<pre data-v-47325f32><code data-v-47325f32>Use two asterisks for **strong emphasis**.
Or, if you prefer, __use two underscores instead__.

</code></pre><p data-v-47325f32>Output:</p>

<pre data-v-47325f32><code data-v-47325f32>&lt;p&gt;Some of these words &lt;em&gt;are emphasized&lt;/em&gt;.
Some of these words &lt;em&gt;are emphasized also&lt;/em&gt;.&lt;/p&gt;
</code></pre>    
<pre data-v-47325f32><code data-v-47325f32>&lt;p&gt;Use two asterisks for &lt;strong&gt;strong emphasis&lt;/strong&gt;.
Or, if you prefer, &lt;strong&gt;use two underscores instead&lt;/strong&gt;.&lt;/p&gt;
</code></pre>   


<h2 data-v-47325f32>Lists</h2>
<p data-v-47325f32>Unordered (bulleted) lists use asterisks, pluses, and hyphens (<code data-v-47325f32>*</code>,
<code data-v-47325f32>+</code>, and <code data-v-47325f32>-</code>) as list markers. These three markers are
interchangable; this:</p>

<pre data-v-47325f32><code data-v-47325f32>*   Candy.
*   Gum.
*   Booze.

</code></pre><p data-v-47325f32>this:</p>

<pre data-v-47325f32><code data-v-47325f32>+   Candy.
+   Gum.
+   Booze.

</code></pre><p data-v-47325f32>and this:</p>

<pre data-v-47325f32><code data-v-47325f32>-   Candy.
-   Gum.
-   Booze.

</code></pre><p data-v-47325f32>all produce the same output:</p>

<pre data-v-47325f32><code data-v-47325f32>&lt;ul&gt;
&lt;li&gt;Candy.&lt;/li&gt;
&lt;li&gt;Gum.&lt;/li&gt;
&lt;li&gt;Booze.&lt;/li&gt;
&lt;/ul&gt;

</code></pre><p data-v-47325f32>Ordered (numbered) lists use regular numbers, followed by periods, as
list markers:</p>

<pre data-v-47325f32><code data-v-47325f32>1.  Red
2.  Green
3.  Blue

</code></pre><p data-v-47325f32>Output:</p>

<pre data-v-47325f32><code data-v-47325f32>&lt;ol&gt;
&lt;li&gt;Red&lt;/li&gt;
&lt;li&gt;Green&lt;/li&gt;
&lt;li&gt;Blue&lt;/li&gt;
&lt;/ol&gt;

</code></pre><p data-v-47325f32>If you put blank lines between items, you'll get <code data-v-47325f32>&lt;p&gt;</code> tags for the
list item text. You can create multi-paragraph list items by indenting
the paragraphs by 4 spaces or 1 tab:</p>

<pre data-v-47325f32><code data-v-47325f32>*   A list item.
</code></pre>    
<pre data-v-47325f32><code data-v-47325f32>    With multiple paragraphs.

*   Another item in the list.

</code></pre><p data-v-47325f32>Output:</p>

<pre data-v-47325f32><code data-v-47325f32>&lt;ul&gt;
&lt;li&gt;&lt;p&gt;A list item.&lt;/p&gt;
&lt;p&gt;With multiple paragraphs.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Another item in the list.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</code></pre>    


<h3 data-v-47325f32>Links</h3>
<p data-v-47325f32>Markdown supports two styles for creating links: <em data-v-47325f32>inline</em> and
<em data-v-47325f32>reference</em>. With both styles, you use square brackets to delimit the
text you want to turn into a link.</p>

<p data-v-47325f32>Inline-style links use parentheses immediately after the link text.
For example:</p>

<pre data-v-47325f32><code data-v-47325f32>This is an [example link](http://example.com/).

</code></pre><p data-v-47325f32>Output:</p>

<pre data-v-47325f32><code data-v-47325f32>&lt;p&gt;This is an &lt;a href=&quot;http://example.com/&quot;&gt;
example link&lt;/a&gt;.&lt;/p&gt;

</code></pre><p data-v-47325f32>Optionally, you may include a title attribute in the parentheses:</p>

<pre data-v-47325f32><code data-v-47325f32>This is an [example link](http://example.com/ &quot;With a Title&quot;).

</code></pre><p data-v-47325f32>Output:</p>

<pre data-v-47325f32><code data-v-47325f32>&lt;p&gt;This is an &lt;a href=&quot;http://example.com/&quot; title=&quot;With a Title&quot;&gt;
example link&lt;/a&gt;.&lt;/p&gt;

</code></pre><p data-v-47325f32>Reference-style links allow you to refer to your links by names, which
you define elsewhere in your document:</p>

<pre data-v-47325f32><code data-v-47325f32>I get 10 times more traffic from [Google][1] than from
[Yahoo][2] or [MSN][3].

[1]: http://google.com/        &quot;Google&quot;
[2]: http://search.yahoo.com/  &quot;Yahoo Search&quot;
[3]: http://search.msn.com/    &quot;MSN Search&quot;

</code></pre><p data-v-47325f32>Output:</p>

<pre data-v-47325f32><code data-v-47325f32>&lt;p&gt;I get 10 times more traffic from &lt;a href=&quot;http://google.com/&quot;
title=&quot;Google&quot;&gt;Google&lt;/a&gt; than from &lt;a href=&quot;http://search.yahoo.com/&quot;
title=&quot;Yahoo Search&quot;&gt;Yahoo&lt;/a&gt; or &lt;a href=&quot;http://search.msn.com/&quot;
title=&quot;MSN Search&quot;&gt;MSN&lt;/a&gt;.&lt;/p&gt;

</code></pre><p data-v-47325f32>The title attribute is optional. Link names may contain letters,
numbers and spaces, but are <em data-v-47325f32>not</em> case sensitive:</p>

<pre data-v-47325f32><code data-v-47325f32>I start my morning with a cup of coffee and
[The New York Times][NY Times].

[ny times]: http://www.nytimes.com/

</code></pre><p data-v-47325f32>Output:</p>

<pre data-v-47325f32><code data-v-47325f32>&lt;p&gt;I start my morning with a cup of coffee and
&lt;a href=&quot;http://www.nytimes.com/&quot;&gt;The New York Times&lt;/a&gt;.&lt;/p&gt;


</code></pre><h3 data-v-47325f32>Images</h3>
<p data-v-47325f32>Image syntax is very much like link syntax.</p>

<p data-v-47325f32>Inline (titles are optional):</p>

<pre data-v-47325f32><code data-v-47325f32>![alt text](/path/to/img.jpg &quot;Title&quot;)

</code></pre><p data-v-47325f32>Reference-style:</p>

<pre data-v-47325f32><code data-v-47325f32>![alt text][id]

[id]: /path/to/img.jpg &quot;Title&quot;

</code></pre><p data-v-47325f32>Both of the above examples produce the same output:</p>

<pre data-v-47325f32><code data-v-47325f32>&lt;img src=&quot;/path/to/img.jpg&quot; alt=&quot;alt text&quot; title=&quot;Title&quot; /&gt;



</code></pre><h3 data-v-47325f32>Code</h3>
<p data-v-47325f32>In a regular paragraph, you can create code span by wrapping text in
backtick quotes. Any ampersands (<code data-v-47325f32>&amp;</code>) and angle brackets (<code data-v-47325f32>&lt;</code> or
<code data-v-47325f32>&gt;</code>) will automatically be translated into HTML entities. This makes
it easy to use Markdown to write about HTML example code:</p>

<pre data-v-47325f32><code data-v-47325f32>I strongly recommend against using any \`&lt;blink&gt;\` tags.

I wish SmartyPants used named entities like \`&amp;mdash;\`
instead of decimal-encoded entites like \`&amp;#8212;\`.

</code></pre><p data-v-47325f32>Output:</p>

<pre data-v-47325f32><code data-v-47325f32>&lt;p&gt;I strongly recommend against using any
&lt;code&gt;&amp;lt;blink&amp;gt;&lt;/code&gt; tags.&lt;/p&gt;
</code></pre>    
<pre data-v-47325f32><code data-v-47325f32>&lt;p&gt;I wish SmartyPants used named entities like
&lt;code&gt;&amp;amp;mdash;&lt;/code&gt; instead of decimal-encoded
entites like &lt;code&gt;&amp;amp;#8212;&lt;/code&gt;.&lt;/p&gt;


</code></pre><p data-v-47325f32>To specify an entire block of pre-formatted code, indent every line of
the block by 4 spaces or 1 tab. Just like with code spans, <code data-v-47325f32>&amp;</code>, <code data-v-47325f32>&lt;</code>,
and <code data-v-47325f32>&gt;</code> characters will be escaped automatically.</p>

<p data-v-47325f32>Markdown:</p>

<pre data-v-47325f32><code data-v-47325f32>If you want your page to validate under XHTML 1.0 Strict,
you've got to put paragraph tags in your blockquotes:

    &lt;blockquote&gt;
        &lt;p&gt;For example.&lt;/p&gt;
    &lt;/blockquote&gt;

</code></pre><p data-v-47325f32>Output:</p>

<pre data-v-47325f32><code data-v-47325f32>&lt;p&gt;If you want your page to validate under XHTML 1.0 Strict,
you've got to put paragraph tags in your blockquotes:&lt;/p&gt;
</code></pre>    
<pre data-v-47325f32><code data-v-47325f32>&lt;pre&gt;&lt;code&gt;&amp;lt;blockquote&amp;gt;
    &amp;lt;p&amp;gt;For example.&amp;lt;/p&amp;gt;
&amp;lt;/blockquote&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</code></pre></article>"
`;

exports[`./__tests__/original/nested_blockquotes.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><blockquote data-v-47325f32><p data-v-47325f32>foo</p>

<blockquote data-v-47325f32><p data-v-47325f32>bar</p></blockquote>
<p data-v-47325f32>foo</p></blockquote></article>"
`;

exports[`./__tests__/original/ordered_and_unordered_lists.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><h2 data-v-47325f32>Unordered</h2>
<p data-v-47325f32>Asterisks tight:</p>

<ul data-v-47325f32><li data-v-47325f32>asterisk 1</li><li data-v-47325f32>asterisk 2</li><li data-v-47325f32>asterisk 3


</li></ul><p data-v-47325f32>Asterisks loose:</p>

<ul data-v-47325f32><li data-v-47325f32><p data-v-47325f32>asterisk 1</p>
</li><li data-v-47325f32><p data-v-47325f32>asterisk 2</p>
</li><li data-v-47325f32><p data-v-47325f32>asterisk 3</p>

</li></ul><hr data-v-47325f32>
<p data-v-47325f32>Pluses tight:</p>

<ul data-v-47325f32><li data-v-47325f32>Plus 1</li><li data-v-47325f32>Plus 2</li><li data-v-47325f32>Plus 3


</li></ul><p data-v-47325f32>Pluses loose:</p>

<ul data-v-47325f32><li data-v-47325f32><p data-v-47325f32>Plus 1</p>
</li><li data-v-47325f32><p data-v-47325f32>Plus 2</p>
</li><li data-v-47325f32><p data-v-47325f32>Plus 3</p>

</li></ul><hr data-v-47325f32>

<p data-v-47325f32>Minuses tight:</p>

<ul data-v-47325f32><li data-v-47325f32>Minus 1</li><li data-v-47325f32>Minus 2</li><li data-v-47325f32>Minus 3


</li></ul><p data-v-47325f32>Minuses loose:</p>

<ul data-v-47325f32><li data-v-47325f32><p data-v-47325f32>Minus 1</p>
</li><li data-v-47325f32><p data-v-47325f32>Minus 2</p>
</li><li data-v-47325f32><p data-v-47325f32>Minus 3</p>


</li></ul><h2 data-v-47325f32>Ordered</h2>
<p data-v-47325f32>Tight:</p>

<ol data-v-47325f32><li data-v-47325f32>First</li><li data-v-47325f32>Second</li><li data-v-47325f32>Third

</li></ol><p data-v-47325f32>and:</p>

<ol data-v-47325f32><li data-v-47325f32>One</li><li data-v-47325f32>Two</li><li data-v-47325f32>Three


</li></ol><p data-v-47325f32>Loose using tabs:</p>

<ol data-v-47325f32><li data-v-47325f32><p data-v-47325f32>First</p>
</li><li data-v-47325f32><p data-v-47325f32>Second</p>
</li><li data-v-47325f32><p data-v-47325f32>Third</p>

</li></ol><p data-v-47325f32>and using spaces:</p>

<ol data-v-47325f32><li data-v-47325f32><p data-v-47325f32>One</p>
</li><li data-v-47325f32><p data-v-47325f32>Two</p>
</li><li data-v-47325f32><p data-v-47325f32>Three</p>

</li></ol><p data-v-47325f32>Multiple paragraphs:</p>

<ol data-v-47325f32><li data-v-47325f32><p data-v-47325f32>Item 1, graf one.</p>

<p data-v-47325f32>Item 2. graf two. The quick brown fox jumped over the lazy dog's</p>
<p data-v-47325f32>back.</p>
</li><li data-v-47325f32><p data-v-47325f32>Item 2.</p>
</li><li data-v-47325f32><p data-v-47325f32>Item 3.</p>



</li></ol><h2 data-v-47325f32>Nested</h2>
<ul data-v-47325f32><li data-v-47325f32>Tab
<ul data-v-47325f32><li data-v-47325f32>Tab
<ul data-v-47325f32><li data-v-47325f32>Tab

</li></ul></li></ul></li></ul><p data-v-47325f32>Here's another:</p>

<ol data-v-47325f32><li data-v-47325f32>First</li><li data-v-47325f32>Second:
<ul data-v-47325f32><li data-v-47325f32>Fee</li><li data-v-47325f32>Fie</li><li data-v-47325f32>Foe</li></ul></li><li data-v-47325f32>Third

</li></ol><p data-v-47325f32>Same thing but with paragraphs:</p>

<ol data-v-47325f32><li data-v-47325f32><p data-v-47325f32>First</p>
</li><li data-v-47325f32><p data-v-47325f32>Second:</p>
<ul data-v-47325f32><li data-v-47325f32>Fee</li><li data-v-47325f32>Fie</li><li data-v-47325f32>Foe
</li></ul></li><li data-v-47325f32><p data-v-47325f32>Third</p>


</li></ol><p data-v-47325f32>This was an error in Markdown 1.0.1:</p>

<ul data-v-47325f32><li data-v-47325f32><p data-v-47325f32>this</p>

<ul data-v-47325f32><li data-v-47325f32>sub

</li></ul><p data-v-47325f32>that</p>

</li></ul><p data-v-47325f32>Ordered lists start from initial number:</p>

<ol start=\\"3\\" data-v-47325f32><li data-v-47325f32>Three</li><li data-v-47325f32>Four

</li></ol><p data-v-47325f32>Ordered lists start from initial zero:</p>

<ol start=\\"0\\" data-v-47325f32><li data-v-47325f32>Zero</li><li data-v-47325f32>One
</li></ol></article>"
`;

exports[`./__tests__/original/strong_and_em_together.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><p data-v-47325f32><strong data-v-47325f32><em data-v-47325f32>This is strong and em.</em></strong></p>

<p data-v-47325f32>So is <strong data-v-47325f32><em data-v-47325f32>this</em></strong> word.</p>

<p data-v-47325f32><strong data-v-47325f32><em data-v-47325f32>This is strong and em.</em></strong></p>

<p data-v-47325f32>So is <strong data-v-47325f32><em data-v-47325f32>this</em></strong> word.</p>
</article>"
`;

exports[`./__tests__/original/tabs.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><ul data-v-47325f32><li data-v-47325f32><p data-v-47325f32>this is a list item</p>
<p data-v-47325f32>indented with tabs</p>
</li><li data-v-47325f32><p data-v-47325f32>this is a list item</p>
<p data-v-47325f32>indented with spaces</p>

</li></ul><p data-v-47325f32>Code:</p>

<pre data-v-47325f32><code data-v-47325f32>this code block is indented by one tab

</code></pre><p data-v-47325f32>And:</p>

<pre data-v-47325f32><code data-v-47325f32>    this code block is indented by two tabs

</code></pre><p data-v-47325f32>And:</p>

<pre data-v-47325f32><code data-v-47325f32>+    this is an example list item
    indented with tabs
</code></pre>    
<pre data-v-47325f32><code data-v-47325f32>+   this is an example list item
    indented with spaces
</code></pre></article>"
`;

exports[`./__tests__/original/tidyness.md snapshot 1`] = `
"<article data-server-rendered=\\"true\\" data-v-47325f32><blockquote data-v-47325f32><p data-v-47325f32>A list within a blockquote:</p>

<ul data-v-47325f32><li data-v-47325f32>asterisk 1</li><li data-v-47325f32>asterisk 2</li><li data-v-47325f32>asterisk 3</li></ul></blockquote></article>"
`;
